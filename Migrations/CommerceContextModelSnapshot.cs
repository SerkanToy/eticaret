// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using eticaret.Domain.Database.Context;

#nullable disable

namespace eticaret.Migrations
{
    [DbContext(typeof(CommerceContext))]
    partial class CommerceContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("eticaret.Domain.Core.Entities.BlogInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("BlogInfo");
                });

            modelBuilder.Entity("eticaret.Domain.Core.Entities.BlogInfoAndComment", b =>
                {
                    b.Property<int>("BlogInfoId")
                        .HasColumnType("int");

                    b.Property<int>("CommentId")
                        .HasColumnType("int");

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("BlogInfoId", "CommentId");

                    b.HasIndex("CommentId");

                    b.HasIndex("UserId");

                    b.ToTable("BlogInfoAndComment");
                });

            modelBuilder.Entity("eticaret.Domain.Core.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Flag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Category");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateBy = "Sistem",
                            CreateDate = "30.05.2025 11:42:44",
                            Flag = "b7649515-1ab6-4a0e-8f72-c87f369f4b7a",
                            IsDeleted = false,
                            Name = "Category 1"
                        },
                        new
                        {
                            Id = 2,
                            CreateBy = "Sistem",
                            CreateDate = "30.05.2025 11:42:44",
                            Flag = "e178990e-677c-4c8f-9fa5-06f699788222",
                            IsDeleted = false,
                            Name = "Category 2"
                        },
                        new
                        {
                            Id = 3,
                            CreateBy = "Sistem",
                            CreateDate = "30.05.2025 11:42:44",
                            Flag = "1ddd0de6-d108-4d14-9c89-3b151442dfe0",
                            IsDeleted = false,
                            Name = "Category 3"
                        },
                        new
                        {
                            Id = 4,
                            CreateBy = "Sistem",
                            CreateDate = "30.05.2025 11:42:44",
                            Flag = "4790f97c-6180-42c2-8f2c-7c704d10d636",
                            IsDeleted = false,
                            Name = "Category 4"
                        },
                        new
                        {
                            Id = 5,
                            CreateBy = "Sistem",
                            CreateDate = "30.05.2025 11:42:44",
                            Flag = "b4a235a3-5df7-46e5-9855-6dcbd29cd5b3",
                            IsDeleted = false,
                            Name = "Category 5"
                        },
                        new
                        {
                            Id = 6,
                            CreateBy = "Sistem",
                            CreateDate = "30.05.2025 11:42:44",
                            Flag = "30641128-e5bc-4e15-80ea-940d347f2e96",
                            IsDeleted = false,
                            Name = "Category 6"
                        });
                });

            modelBuilder.Entity("eticaret.Domain.Core.Entities.ColorProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ColorsId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ColorsId");

                    b.HasIndex("ProductId");

                    b.ToTable("ColorProduct");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ColorsId = 1,
                            ProductId = 1
                        },
                        new
                        {
                            Id = 2,
                            ColorsId = 2,
                            ProductId = 2
                        },
                        new
                        {
                            Id = 3,
                            ColorsId = 3,
                            ProductId = 3
                        },
                        new
                        {
                            Id = 4,
                            ColorsId = 4,
                            ProductId = 4
                        },
                        new
                        {
                            Id = 5,
                            ColorsId = 5,
                            ProductId = 5
                        },
                        new
                        {
                            Id = 6,
                            ColorsId = 6,
                            ProductId = 6
                        },
                        new
                        {
                            Id = 7,
                            ColorsId = 7,
                            ProductId = 7
                        },
                        new
                        {
                            Id = 8,
                            ColorsId = 8,
                            ProductId = 8
                        },
                        new
                        {
                            Id = 9,
                            ColorsId = 9,
                            ProductId = 9
                        },
                        new
                        {
                            Id = 10,
                            ColorsId = 10,
                            ProductId = 10
                        },
                        new
                        {
                            Id = 11,
                            ColorsId = 11,
                            ProductId = 11
                        },
                        new
                        {
                            Id = 12,
                            ColorsId = 12,
                            ProductId = 12
                        },
                        new
                        {
                            Id = 13,
                            ColorsId = 13,
                            ProductId = 13
                        },
                        new
                        {
                            Id = 14,
                            ColorsId = 14,
                            ProductId = 14
                        },
                        new
                        {
                            Id = 15,
                            ColorsId = 1,
                            ProductId = 15
                        },
                        new
                        {
                            Id = 16,
                            ColorsId = 2,
                            ProductId = 16
                        },
                        new
                        {
                            Id = 17,
                            ColorsId = 3,
                            ProductId = 17
                        },
                        new
                        {
                            Id = 18,
                            ColorsId = 4,
                            ProductId = 18
                        },
                        new
                        {
                            Id = 19,
                            ColorsId = 5,
                            ProductId = 19
                        },
                        new
                        {
                            Id = 20,
                            ColorsId = 6,
                            ProductId = 20
                        },
                        new
                        {
                            Id = 21,
                            ColorsId = 7,
                            ProductId = 21
                        },
                        new
                        {
                            Id = 22,
                            ColorsId = 8,
                            ProductId = 22
                        },
                        new
                        {
                            Id = 23,
                            ColorsId = 9,
                            ProductId = 23
                        },
                        new
                        {
                            Id = 24,
                            ColorsId = 10,
                            ProductId = 24
                        },
                        new
                        {
                            Id = 25,
                            ColorsId = 11,
                            ProductId = 25
                        });
                });

            modelBuilder.Entity("eticaret.Domain.Core.Entities.Colors", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Colorvalue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Color");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Colorvalue = "#f0f8ff",
                            CreateBy = "System",
                            CreateDate = "30.05.2025 11:42:44",
                            IsDeleted = false,
                            Name = "Alice Blue"
                        },
                        new
                        {
                            Id = 2,
                            Colorvalue = "#faebd7",
                            CreateBy = "System",
                            CreateDate = "30.05.2025 11:42:44",
                            IsDeleted = false,
                            Name = "Antik Beyaz"
                        },
                        new
                        {
                            Id = 3,
                            Colorvalue = "#00ffff",
                            CreateBy = "System",
                            CreateDate = "30.05.2025 11:42:44",
                            IsDeleted = false,
                            Name = "Aqua"
                        },
                        new
                        {
                            Id = 4,
                            Colorvalue = "#7fffd4",
                            CreateBy = "System",
                            CreateDate = "30.05.2025 11:42:44",
                            IsDeleted = false,
                            Name = "Akuamarin"
                        },
                        new
                        {
                            Id = 5,
                            Colorvalue = "#f0ffff",
                            CreateBy = "System",
                            CreateDate = "30.05.2025 11:42:44",
                            IsDeleted = false,
                            Name = "Masmavi"
                        },
                        new
                        {
                            Id = 6,
                            Colorvalue = "#f5f5dc",
                            CreateBy = "System",
                            CreateDate = "30.05.2025 11:42:44",
                            IsDeleted = false,
                            Name = "Bej"
                        },
                        new
                        {
                            Id = 7,
                            Colorvalue = "#ffe4c4",
                            CreateBy = "System",
                            CreateDate = "30.05.2025 11:42:44",
                            IsDeleted = false,
                            Name = "BISQUE"
                        },
                        new
                        {
                            Id = 8,
                            Colorvalue = "#000000",
                            CreateBy = "System",
                            CreateDate = "30.05.2025 11:42:44",
                            IsDeleted = false,
                            Name = "Siyah"
                        },
                        new
                        {
                            Id = 9,
                            Colorvalue = "#ffebcd",
                            CreateBy = "System",
                            CreateDate = "30.05.2025 11:42:44",
                            IsDeleted = false,
                            Name = "Blanchedalmond"
                        },
                        new
                        {
                            Id = 10,
                            Colorvalue = "#0000ff",
                            CreateBy = "System",
                            CreateDate = "30.05.2025 11:42:44",
                            IsDeleted = false,
                            Name = "Mavi"
                        },
                        new
                        {
                            Id = 11,
                            Colorvalue = "#8a2be2",
                            CreateBy = "System",
                            CreateDate = "30.05.2025 11:42:44",
                            IsDeleted = false,
                            Name = "Mavi Menekşe"
                        },
                        new
                        {
                            Id = 12,
                            Colorvalue = "#a52a2a",
                            CreateBy = "System",
                            CreateDate = "30.05.2025 11:42:44",
                            IsDeleted = false,
                            Name = "Kahverengi"
                        },
                        new
                        {
                            Id = 13,
                            Colorvalue = "#deb887",
                            CreateBy = "System",
                            CreateDate = "30.05.2025 11:42:44",
                            IsDeleted = false,
                            Name = "Burlywood"
                        },
                        new
                        {
                            Id = 14,
                            Colorvalue = "#5f9ea0",
                            CreateBy = "System",
                            CreateDate = "30.05.2025 11:42:44",
                            IsDeleted = false,
                            Name = "CadetBlue"
                        });
                });

            modelBuilder.Entity("eticaret.Domain.Core.Entities.Comments", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CommentsId")
                        .HasColumnType("int");

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CommentsId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("eticaret.Domain.Core.Entities.Image", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Flag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsShowcase")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("Image");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateBy = "Sistem",
                            CreateDate = "30.05.2025 11:42:44",
                            Flag = "db8dc61e-9632-4c27-b95c-e17ed192960f",
                            IsDeleted = false,
                            IsShowcase = true,
                            Name = "1.jpg",
                            ProductId = 1
                        },
                        new
                        {
                            Id = 2,
                            CreateBy = "Sistem",
                            CreateDate = "30.05.2025 11:42:44",
                            Flag = "b90a0a53-79d6-4d08-80fd-e3300f7618e0",
                            IsDeleted = false,
                            IsShowcase = true,
                            Name = "back-1.jpg",
                            ProductId = 2
                        },
                        new
                        {
                            Id = 3,
                            CreateBy = "Sistem",
                            CreateDate = "30.05.2025 11:42:44",
                            Flag = "3c74627e-3ac3-48ed-b1d7-5b72371cc133",
                            IsDeleted = false,
                            IsShowcase = true,
                            Name = "2.jpg",
                            ProductId = 3
                        },
                        new
                        {
                            Id = 4,
                            CreateBy = "Sistem",
                            CreateDate = "30.05.2025 11:42:44",
                            Flag = "0e33f3c3-a8bc-40c6-acb4-832fde71b223",
                            IsDeleted = false,
                            IsShowcase = true,
                            Name = "back-2.jpg",
                            ProductId = 4
                        },
                        new
                        {
                            Id = 5,
                            CreateBy = "Sistem",
                            CreateDate = "30.05.2025 11:42:44",
                            Flag = "0b83596e-1211-4615-a0ff-098e7ca2a2f0",
                            IsDeleted = false,
                            IsShowcase = true,
                            Name = "3.jpg",
                            ProductId = 5
                        },
                        new
                        {
                            Id = 6,
                            CreateBy = "Sistem",
                            CreateDate = "30.05.2025 11:42:44",
                            Flag = "011858ae-76e6-4fa9-9195-77c157b063b4",
                            IsDeleted = false,
                            IsShowcase = true,
                            Name = "back-3.jpg",
                            ProductId = 6
                        },
                        new
                        {
                            Id = 7,
                            CreateBy = "Sistem",
                            CreateDate = "30.05.2025 11:42:44",
                            Flag = "10d828bc-371b-40fc-b010-437d5a382c58",
                            IsDeleted = false,
                            IsShowcase = true,
                            Name = "4.jpg",
                            ProductId = 7
                        },
                        new
                        {
                            Id = 8,
                            CreateBy = "Sistem",
                            CreateDate = "30.05.2025 11:42:44",
                            Flag = "743410b3-6a1e-4e01-8f33-c449535c19f1",
                            IsDeleted = false,
                            IsShowcase = true,
                            Name = "back-4.jpg",
                            ProductId = 8
                        },
                        new
                        {
                            Id = 9,
                            CreateBy = "Sistem",
                            CreateDate = "30.05.2025 11:42:44",
                            Flag = "ebfc16c7-0c26-49da-8f4c-840af4670102",
                            IsDeleted = false,
                            IsShowcase = true,
                            Name = "5.jpg",
                            ProductId = 9
                        },
                        new
                        {
                            Id = 10,
                            CreateBy = "Sistem",
                            CreateDate = "30.05.2025 11:42:44",
                            Flag = "5b8bcce7-6012-438e-808e-20e8c12d20ac",
                            IsDeleted = false,
                            IsShowcase = true,
                            Name = "back-5.jpg",
                            ProductId = 10
                        },
                        new
                        {
                            Id = 11,
                            CreateBy = "Sistem",
                            CreateDate = "30.05.2025 11:42:44",
                            Flag = "a28b95e7-a54e-4bd4-b66d-52f2596dd5c7",
                            IsDeleted = false,
                            IsShowcase = true,
                            Name = "6.jpg",
                            ProductId = 11
                        },
                        new
                        {
                            Id = 12,
                            CreateBy = "Sistem",
                            CreateDate = "30.05.2025 11:42:44",
                            Flag = "479aabff-d1b0-438b-89dd-f0292f8f0055",
                            IsDeleted = false,
                            IsShowcase = true,
                            Name = "back-6.jpg",
                            ProductId = 12
                        },
                        new
                        {
                            Id = 13,
                            CreateBy = "Sistem",
                            CreateDate = "30.05.2025 11:42:44",
                            Flag = "622e08ec-c81d-4ba7-93f4-4e0d576d6a93",
                            IsDeleted = false,
                            IsShowcase = true,
                            Name = "7.jpg",
                            ProductId = 13
                        },
                        new
                        {
                            Id = 14,
                            CreateBy = "Sistem",
                            CreateDate = "30.05.2025 11:42:44",
                            Flag = "0e8b8757-45c9-4b19-90b4-6da10ced7d15",
                            IsDeleted = false,
                            IsShowcase = true,
                            Name = "back-7.jpg",
                            ProductId = 14
                        },
                        new
                        {
                            Id = 15,
                            CreateBy = "Sistem",
                            CreateDate = "30.05.2025 11:42:44",
                            Flag = "7fa1bd41-60c7-45dc-869a-fb8d3b0b6eec",
                            IsDeleted = false,
                            IsShowcase = true,
                            Name = "8.jpg",
                            ProductId = 14
                        },
                        new
                        {
                            Id = 16,
                            CreateBy = "Sistem",
                            CreateDate = "30.05.2025 11:42:44",
                            Flag = "b20757c1-62bc-4792-aeb1-956b84170663",
                            IsDeleted = false,
                            IsShowcase = true,
                            Name = "back-8.jpg",
                            ProductId = 16
                        },
                        new
                        {
                            Id = 17,
                            CreateBy = "Sistem",
                            CreateDate = "30.05.2025 11:42:44",
                            Flag = "187ce81e-0c3c-4ec9-a4d4-b20ccc284a38",
                            IsDeleted = false,
                            IsShowcase = true,
                            Name = "1.jpg",
                            ProductId = 17
                        },
                        new
                        {
                            Id = 18,
                            CreateBy = "Sistem",
                            CreateDate = "30.05.2025 11:42:44",
                            Flag = "97265d53-b1b5-4a92-8bfd-3adf6526772a",
                            IsDeleted = false,
                            IsShowcase = true,
                            Name = "back-1.jpg",
                            ProductId = 18
                        },
                        new
                        {
                            Id = 19,
                            CreateBy = "Sistem",
                            CreateDate = "30.05.2025 11:42:44",
                            Flag = "0822c830-8bf0-4a6a-a653-0c6bea0512c1",
                            IsDeleted = false,
                            IsShowcase = true,
                            Name = "2.jpg",
                            ProductId = 19
                        },
                        new
                        {
                            Id = 20,
                            CreateBy = "Sistem",
                            CreateDate = "30.05.2025 11:42:44",
                            Flag = "05ad6282-2bf4-4dec-868b-cee0eae6674f",
                            IsDeleted = false,
                            IsShowcase = false,
                            Name = "back-2.jpg",
                            ProductId = 20
                        },
                        new
                        {
                            Id = 21,
                            CreateBy = "Sistem",
                            CreateDate = "30.05.2025 11:42:44",
                            Flag = "484450dd-a9aa-4223-9b92-751548f2a9f7",
                            IsDeleted = false,
                            IsShowcase = true,
                            Name = "3.jpg",
                            ProductId = 21
                        },
                        new
                        {
                            Id = 22,
                            CreateBy = "Sistem",
                            CreateDate = "30.05.2025 11:42:44",
                            Flag = "0c31314a-3f4b-4cc1-8575-737bcf3fd62b",
                            IsDeleted = false,
                            IsShowcase = false,
                            Name = "back-3.jpg",
                            ProductId = 22
                        },
                        new
                        {
                            Id = 23,
                            CreateBy = "Sistem",
                            CreateDate = "30.05.2025 11:42:44",
                            Flag = "819d44ed-f405-42d7-b2ba-d468e6e3386c",
                            IsDeleted = false,
                            IsShowcase = true,
                            Name = "4.jpg",
                            ProductId = 23
                        },
                        new
                        {
                            Id = 24,
                            CreateBy = "Sistem",
                            CreateDate = "30.05.2025 11:42:44",
                            Flag = "281af2e0-f965-4736-9f5a-0a751031387b",
                            IsDeleted = false,
                            IsShowcase = false,
                            Name = "back-4.jpg",
                            ProductId = 24
                        },
                        new
                        {
                            Id = 25,
                            CreateBy = "Sistem",
                            CreateDate = "30.05.2025 11:42:44",
                            Flag = "a868c95f-e8ae-4680-b682-a79dfdc6ed82",
                            IsDeleted = false,
                            IsShowcase = false,
                            Name = "5.jpg",
                            ProductId = 25
                        });
                });

            modelBuilder.Entity("eticaret.Domain.Core.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Flag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("NewPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("OldPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("RatinAVG")
                        .HasColumnType("int");

                    b.Property<int>("SubCategoryId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SubCategoryId");

                    b.ToTable("Product");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateBy = "Sistem",
                            CreateDate = "30.05.2025 11:42:44",
                            Description = "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quas nihil laboriosam voluptatem ab consectetur dolorum id, soluta sunt at culpa commodi totam quod natus qui!",
                            Flag = "3342b471-d03f-4e9a-b58e-716017a1ffbb",
                            IsDeleted = false,
                            Name = "Product 1",
                            NewPrice = 0m,
                            OldPrice = 340588m,
                            RatinAVG = 0,
                            SubCategoryId = 1
                        },
                        new
                        {
                            Id = 2,
                            CreateBy = "Sistem",
                            CreateDate = "30.05.2025 11:42:44",
                            Description = "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quas nihil laboriosam voluptatem ab consectetur dolorum id, soluta sunt at culpa commodi totam quod natus qui!",
                            Flag = "e0f2cb36-05ca-4941-b035-b333623008a1",
                            IsDeleted = false,
                            Name = "Product 2",
                            NewPrice = 0m,
                            OldPrice = 340588m,
                            RatinAVG = 0,
                            SubCategoryId = 1
                        },
                        new
                        {
                            Id = 3,
                            CreateBy = "Sistem",
                            CreateDate = "30.05.2025 11:42:44",
                            Description = "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quas nihil laboriosam voluptatem ab consectetur dolorum id, soluta sunt at culpa commodi totam quod natus qui!",
                            Flag = "15011726-8d78-4a30-a1aa-e8ec17f32c61",
                            IsDeleted = false,
                            Name = "Product 3",
                            NewPrice = 0m,
                            OldPrice = 340588m,
                            RatinAVG = 0,
                            SubCategoryId = 1
                        },
                        new
                        {
                            Id = 4,
                            CreateBy = "Sistem",
                            CreateDate = "30.05.2025 11:42:44",
                            Description = "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quas nihil laboriosam voluptatem ab consectetur dolorum id, soluta sunt at culpa commodi totam quod natus qui!",
                            Flag = "3cdcecc5-9c8f-4f18-b1d3-f1d16c81c29b",
                            IsDeleted = false,
                            Name = "Product 4",
                            NewPrice = 0m,
                            OldPrice = 340588m,
                            RatinAVG = 0,
                            SubCategoryId = 1
                        },
                        new
                        {
                            Id = 5,
                            CreateBy = "Sistem",
                            CreateDate = "30.05.2025 11:42:44",
                            Description = "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quas nihil laboriosam voluptatem ab consectetur dolorum id, soluta sunt at culpa commodi totam quod natus qui!",
                            Flag = "4f73c759-a7a6-465e-8472-7e1fc017dabf",
                            IsDeleted = false,
                            Name = "Product 5",
                            NewPrice = 0m,
                            OldPrice = 340588m,
                            RatinAVG = 0,
                            SubCategoryId = 2
                        },
                        new
                        {
                            Id = 6,
                            CreateBy = "Sistem",
                            CreateDate = "30.05.2025 11:42:44",
                            Description = "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quas nihil laboriosam voluptatem ab consectetur dolorum id, soluta sunt at culpa commodi totam quod natus qui!",
                            Flag = "5564df47-c683-4d28-b579-57dd20314a29",
                            IsDeleted = false,
                            Name = "Product 6",
                            NewPrice = 0m,
                            OldPrice = 340588m,
                            RatinAVG = 0,
                            SubCategoryId = 2
                        },
                        new
                        {
                            Id = 7,
                            CreateBy = "Sistem",
                            CreateDate = "30.05.2025 11:42:44",
                            Description = "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quas nihil laboriosam voluptatem ab consectetur dolorum id, soluta sunt at culpa commodi totam quod natus qui!",
                            Flag = "91286e25-14f6-4b82-b9f4-d64fc3bda216",
                            IsDeleted = false,
                            Name = "Product 7",
                            NewPrice = 0m,
                            OldPrice = 340588m,
                            RatinAVG = 0,
                            SubCategoryId = 2
                        },
                        new
                        {
                            Id = 8,
                            CreateBy = "Sistem",
                            CreateDate = "30.05.2025 11:42:44",
                            Description = "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quas nihil laboriosam voluptatem ab consectetur dolorum id, soluta sunt at culpa commodi totam quod natus qui!",
                            Flag = "8c0e0f08-795f-4fcd-a9c6-ab0df1d55951",
                            IsDeleted = false,
                            Name = "Product 8",
                            NewPrice = 0m,
                            OldPrice = 340588m,
                            RatinAVG = 0,
                            SubCategoryId = 2
                        },
                        new
                        {
                            Id = 9,
                            CreateBy = "Sistem",
                            CreateDate = "30.05.2025 11:42:44",
                            Description = "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quas nihil laboriosam voluptatem ab consectetur dolorum id, soluta sunt at culpa commodi totam quod natus qui!",
                            Flag = "dbfb27bd-0093-4758-ab7b-e710ecf61960",
                            IsDeleted = false,
                            Name = "Product 9",
                            NewPrice = 0m,
                            OldPrice = 340588m,
                            RatinAVG = 0,
                            SubCategoryId = 3
                        },
                        new
                        {
                            Id = 10,
                            CreateBy = "Sistem",
                            CreateDate = "30.05.2025 11:42:44",
                            Description = "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quas nihil laboriosam voluptatem ab consectetur dolorum id, soluta sunt at culpa commodi totam quod natus qui!",
                            Flag = "67f0a534-57fb-48ca-a055-9e63ed5fd5b6",
                            IsDeleted = false,
                            Name = "Product 10",
                            NewPrice = 0m,
                            OldPrice = 340588m,
                            RatinAVG = 0,
                            SubCategoryId = 3
                        },
                        new
                        {
                            Id = 11,
                            CreateBy = "Sistem",
                            CreateDate = "30.05.2025 11:42:44",
                            Description = "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quas nihil laboriosam voluptatem ab consectetur dolorum id, soluta sunt at culpa commodi totam quod natus qui!",
                            Flag = "cb635fd3-8515-4507-a242-c887eb9252d6",
                            IsDeleted = false,
                            Name = "Product 11",
                            NewPrice = 0m,
                            OldPrice = 340588m,
                            RatinAVG = 0,
                            SubCategoryId = 3
                        },
                        new
                        {
                            Id = 12,
                            CreateBy = "Sistem",
                            CreateDate = "30.05.2025 11:42:44",
                            Description = "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quas nihil laboriosam voluptatem ab consectetur dolorum id, soluta sunt at culpa commodi totam quod natus qui!",
                            Flag = "40c26490-d17d-443b-9e81-31d5b154b5de",
                            IsDeleted = false,
                            Name = "Product 12",
                            NewPrice = 0m,
                            OldPrice = 340588m,
                            RatinAVG = 0,
                            SubCategoryId = 3
                        },
                        new
                        {
                            Id = 13,
                            CreateBy = "Sistem",
                            CreateDate = "30.05.2025 11:42:44",
                            Description = "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quas nihil laboriosam voluptatem ab consectetur dolorum id, soluta sunt at culpa commodi totam quod natus qui!",
                            Flag = "104bc445-4c42-4318-a677-6e8373f775e0",
                            IsDeleted = false,
                            Name = "Product 13",
                            NewPrice = 0m,
                            OldPrice = 340588m,
                            RatinAVG = 0,
                            SubCategoryId = 4
                        },
                        new
                        {
                            Id = 14,
                            CreateBy = "Sistem",
                            CreateDate = "30.05.2025 11:42:44",
                            Description = "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quas nihil laboriosam voluptatem ab consectetur dolorum id, soluta sunt at culpa commodi totam quod natus qui!",
                            Flag = "540d39ce-d99f-4d5f-b1be-3e234b6110e7",
                            IsDeleted = false,
                            Name = "Product 14",
                            NewPrice = 0m,
                            OldPrice = 340588m,
                            RatinAVG = 0,
                            SubCategoryId = 4
                        },
                        new
                        {
                            Id = 15,
                            CreateBy = "Sistem",
                            CreateDate = "30.05.2025 11:42:44",
                            Description = "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quas nihil laboriosam voluptatem ab consectetur dolorum id, soluta sunt at culpa commodi totam quod natus qui!",
                            Flag = "c2ce25b6-058b-48b2-b3a6-aa9e347bc07d",
                            IsDeleted = false,
                            Name = "Product 15",
                            NewPrice = 0m,
                            OldPrice = 340588m,
                            RatinAVG = 0,
                            SubCategoryId = 4
                        },
                        new
                        {
                            Id = 16,
                            CreateBy = "Sistem",
                            CreateDate = "30.05.2025 11:42:44",
                            Description = "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quas nihil laboriosam voluptatem ab consectetur dolorum id, soluta sunt at culpa commodi totam quod natus qui!",
                            Flag = "8589a612-866d-474c-b7fd-fa8d7c9e3afb",
                            IsDeleted = false,
                            Name = "Product 16",
                            NewPrice = 0m,
                            OldPrice = 340588m,
                            RatinAVG = 0,
                            SubCategoryId = 4
                        },
                        new
                        {
                            Id = 17,
                            CreateBy = "Sistem",
                            CreateDate = "30.05.2025 11:42:44",
                            Description = "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quas nihil laboriosam voluptatem ab consectetur dolorum id, soluta sunt at culpa commodi totam quod natus qui!",
                            Flag = "06ae746c-e70f-46d6-826f-552c5c320b34",
                            IsDeleted = false,
                            Name = "Product 17",
                            NewPrice = 0m,
                            OldPrice = 340588m,
                            RatinAVG = 0,
                            SubCategoryId = 5
                        },
                        new
                        {
                            Id = 18,
                            CreateBy = "Sistem",
                            CreateDate = "30.05.2025 11:42:44",
                            Description = "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quas nihil laboriosam voluptatem ab consectetur dolorum id, soluta sunt at culpa commodi totam quod natus qui!",
                            Flag = "1ca9c449-d4fe-4562-a679-6efc87544907",
                            IsDeleted = false,
                            Name = "Product 18",
                            NewPrice = 0m,
                            OldPrice = 340588m,
                            RatinAVG = 0,
                            SubCategoryId = 5
                        },
                        new
                        {
                            Id = 19,
                            CreateBy = "Sistem",
                            CreateDate = "30.05.2025 11:42:44",
                            Description = "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quas nihil laboriosam voluptatem ab consectetur dolorum id, soluta sunt at culpa commodi totam quod natus qui!",
                            Flag = "0b98c728-5ec0-4306-af05-15e4b2b2b8fa",
                            IsDeleted = false,
                            Name = "Product 19",
                            NewPrice = 0m,
                            OldPrice = 340588m,
                            RatinAVG = 0,
                            SubCategoryId = 5
                        },
                        new
                        {
                            Id = 20,
                            CreateBy = "Sistem",
                            CreateDate = "30.05.2025 11:42:44",
                            Description = "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quas nihil laboriosam voluptatem ab consectetur dolorum id, soluta sunt at culpa commodi totam quod natus qui!",
                            Flag = "8a48f642-6833-40f8-a224-3868b9e95a26",
                            IsDeleted = false,
                            Name = "Product 20",
                            NewPrice = 0m,
                            OldPrice = 340588m,
                            RatinAVG = 0,
                            SubCategoryId = 5
                        },
                        new
                        {
                            Id = 21,
                            CreateBy = "Sistem",
                            CreateDate = "30.05.2025 11:42:44",
                            Description = "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quas nihil laboriosam voluptatem ab consectetur dolorum id, soluta sunt at culpa commodi totam quod natus qui!",
                            Flag = "9e4f342e-b6ae-4cef-aa26-d5ec727c3c4e",
                            IsDeleted = false,
                            Name = "Product 21",
                            NewPrice = 0m,
                            OldPrice = 340588m,
                            RatinAVG = 0,
                            SubCategoryId = 6
                        },
                        new
                        {
                            Id = 22,
                            CreateBy = "Sistem",
                            CreateDate = "30.05.2025 11:42:44",
                            Description = "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quas nihil laboriosam voluptatem ab consectetur dolorum id, soluta sunt at culpa commodi totam quod natus qui!",
                            Flag = "9d585335-9781-4386-98e5-b541f551428c",
                            IsDeleted = false,
                            Name = "Product 22",
                            NewPrice = 0m,
                            OldPrice = 340588m,
                            RatinAVG = 0,
                            SubCategoryId = 6
                        },
                        new
                        {
                            Id = 23,
                            CreateBy = "Sistem",
                            CreateDate = "30.05.2025 11:42:44",
                            Description = "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quas nihil laboriosam voluptatem ab consectetur dolorum id, soluta sunt at culpa commodi totam quod natus qui!",
                            Flag = "e6072e4c-10d6-408d-974c-e4d75e5d93d3",
                            IsDeleted = false,
                            Name = "Product 23",
                            NewPrice = 0m,
                            OldPrice = 340588m,
                            RatinAVG = 0,
                            SubCategoryId = 6
                        },
                        new
                        {
                            Id = 24,
                            CreateBy = "Sistem",
                            CreateDate = "30.05.2025 11:42:44",
                            Description = "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quas nihil laboriosam voluptatem ab consectetur dolorum id, soluta sunt at culpa commodi totam quod natus qui!",
                            Flag = "39fd37a4-636d-42ce-9a2a-0e04db56e5fc",
                            IsDeleted = false,
                            Name = "Product 24",
                            NewPrice = 0m,
                            OldPrice = 340588m,
                            RatinAVG = 0,
                            SubCategoryId = 6
                        },
                        new
                        {
                            Id = 25,
                            CreateBy = "Sistem",
                            CreateDate = "30.05.2025 11:42:44",
                            Description = "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quas nihil laboriosam voluptatem ab consectetur dolorum id, soluta sunt at culpa commodi totam quod natus qui!",
                            Flag = "62861c62-a5f3-4f72-bc56-dc93c2df8e98",
                            IsDeleted = false,
                            Name = "Product 25",
                            NewPrice = 0m,
                            OldPrice = 340588m,
                            RatinAVG = 0,
                            SubCategoryId = 6
                        });
                });

            modelBuilder.Entity("eticaret.Domain.Core.Entities.Ratin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Ratin");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Rating = 1
                        },
                        new
                        {
                            Id = 2,
                            Rating = 2
                        },
                        new
                        {
                            Id = 3,
                            Rating = 3
                        },
                        new
                        {
                            Id = 4,
                            Rating = 4
                        },
                        new
                        {
                            Id = 5,
                            Rating = 5
                        });
                });

            modelBuilder.Entity("eticaret.Domain.Core.Entities.RatinProduct", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("RatinId")
                        .HasColumnType("int");

                    b.HasKey("Id", "UserId");

                    b.HasIndex("ProductId");

                    b.HasIndex("RatinId");

                    b.HasIndex("UserId");

                    b.ToTable("RatinProduct");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            UserId = 1,
                            ProductId = 1,
                            RatinId = 1
                        },
                        new
                        {
                            Id = 2,
                            UserId = 1,
                            ProductId = 2,
                            RatinId = 2
                        },
                        new
                        {
                            Id = 3,
                            UserId = 1,
                            ProductId = 3,
                            RatinId = 3
                        },
                        new
                        {
                            Id = 4,
                            UserId = 1,
                            ProductId = 4,
                            RatinId = 4
                        },
                        new
                        {
                            Id = 5,
                            UserId = 1,
                            ProductId = 5,
                            RatinId = 5
                        });
                });

            modelBuilder.Entity("eticaret.Domain.Core.Entities.SubCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Flag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("SubCategory");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            CreateBy = "Sistem",
                            CreateDate = "30.05.2025 11:42:44",
                            Flag = "3711fd3d-f8a9-4fbd-bbd9-402e8d584825",
                            IsDeleted = false,
                            Name = "Çanta"
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 2,
                            CreateBy = "Sistem",
                            CreateDate = "30.05.2025 11:42:44",
                            Flag = "87ce9d47-75b4-45ff-bbc0-c8b94d62db1c",
                            IsDeleted = false,
                            Name = "Halı"
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 3,
                            CreateBy = "Sistem",
                            CreateDate = "30.05.2025 11:42:44",
                            Flag = "b202bec5-71a3-430a-bd50-188a8c1a394c",
                            IsDeleted = false,
                            Name = "Aksesuar"
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 4,
                            CreateBy = "Sistem",
                            CreateDate = "30.05.2025 11:42:44",
                            Flag = "f0eed007-411d-478d-8a1f-3afed88a70d7",
                            IsDeleted = false,
                            Name = "Spor"
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 5,
                            CreateBy = "Sistem",
                            CreateDate = "30.05.2025 11:42:44",
                            Flag = "2b54f64c-7813-4e19-aa6c-debba4f3b63a",
                            IsDeleted = false,
                            Name = "Giyim"
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 6,
                            CreateBy = "Sistem",
                            CreateDate = "30.05.2025 11:42:44",
                            Flag = "cdcf0fc4-cda5-47cd-91bf-9d48b34ac66b",
                            IsDeleted = false,
                            Name = "Outdoor"
                        });
                });

            modelBuilder.Entity("eticaret.Domain.Core.Entities.Subscribe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Subscribe");
                });

            modelBuilder.Entity("eticaret.Domain.Entities.About", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Flag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Slogan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Abouts");
                });

            modelBuilder.Entity("eticaret.Domain.Entities.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Flag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("eticaret.Domain.Entities.Users.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Flag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ConcurrencyStamp = "924B836D-B087-4D37-A52D-210ABD72CD96",
                            CreateBy = "Sistem",
                            CreateDate = "30.05.2025 11:42:44",
                            Flag = "46D16588-9420-4F85-A768-D21419075284",
                            IsDeleted = false,
                            Name = "superuser",
                            NormalizedName = "SUPERUSER"
                        },
                        new
                        {
                            Id = 2,
                            ConcurrencyStamp = "232D9C58-01CE-466A-90D0-EB7039C75465",
                            CreateBy = "Sistem",
                            CreateDate = "30.05.2025 11:42:44",
                            Flag = "70449BCD-A6DC-4601-867E-35AD80657B28",
                            IsDeleted = false,
                            Name = "admin",
                            NormalizedName = "ADMIN"
                        });
                });

            modelBuilder.Entity("eticaret.Domain.Entities.Users.RoleClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("eticaret.Domain.Entities.Users.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("Flag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SurName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "30c992c6-39e1-4a61-bf4c-fb579893f77f",
                            CreateBy = "Sistem",
                            CreateDate = "30.05.2025 11:42:44",
                            Email = "stoy@windowslive.com",
                            EmailConfirmed = false,
                            Flag = "D90E65E6-9611-4B5F-9F24-BBD468398D51",
                            IsDeleted = false,
                            IsLocked = false,
                            LockoutEnabled = false,
                            Name = "Serkan",
                            NormalizedEmail = "STOY@WINDOWSLIVE.COM",
                            NormalizedUserName = "STOY",
                            PasswordHash = "AQAAAAIAAYagAAAAEK+x30Dmcw2bRFrUnQn9dqxkkc5U/xLOz0z9FCL0hMYR+gPPQd/PDmevlhYbyWciUg==",
                            PhoneNumber = "0(533) 656 30 95",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "63742240-5787-4E6A-8AE2-FE8BA5381630",
                            SurName = "TOY",
                            TC = "28301227926",
                            TwoFactorEnabled = false,
                            UserName = "stoy"
                        });
                });

            modelBuilder.Entity("eticaret.Domain.Entities.Users.UserClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Flag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("eticaret.Domain.Entities.Users.UserLogin", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("eticaret.Domain.Entities.Users.UserRole", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 1,
                            RoleId = 2
                        });
                });

            modelBuilder.Entity("eticaret.Domain.Entities.Users.UserToken", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Flag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("eticaret.Domain.Core.Entities.BlogInfo", b =>
                {
                    b.HasOne("eticaret.Domain.Entities.Users.User", "User")
                        .WithMany("BlogInfos")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("eticaret.Domain.Core.Entities.BlogInfoAndComment", b =>
                {
                    b.HasOne("eticaret.Domain.Core.Entities.BlogInfo", "BlogInfo")
                        .WithMany("BlogInfoAndComment")
                        .HasForeignKey("BlogInfoId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("eticaret.Domain.Core.Entities.Comments", "Comment")
                        .WithMany("BlogInfoAndComment")
                        .HasForeignKey("CommentId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("eticaret.Domain.Entities.Users.User", "User")
                        .WithMany("BlogInfoAndComment")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("BlogInfo");

                    b.Navigation("Comment");

                    b.Navigation("User");
                });

            modelBuilder.Entity("eticaret.Domain.Core.Entities.ColorProduct", b =>
                {
                    b.HasOne("eticaret.Domain.Core.Entities.Colors", "Colors")
                        .WithMany("ColorProduct")
                        .HasForeignKey("ColorsId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("eticaret.Domain.Core.Entities.Product", "Product")
                        .WithMany("ColorProduct")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Colors");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("eticaret.Domain.Core.Entities.Comments", b =>
                {
                    b.HasOne("eticaret.Domain.Core.Entities.Comments", "Reply")
                        .WithMany("Replys")
                        .HasForeignKey("CommentsId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Reply");
                });

            modelBuilder.Entity("eticaret.Domain.Core.Entities.Image", b =>
                {
                    b.HasOne("eticaret.Domain.Core.Entities.Product", "Product")
                        .WithMany("Images")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("eticaret.Domain.Core.Entities.Product", b =>
                {
                    b.HasOne("eticaret.Domain.Core.Entities.SubCategory", "SubCategory")
                        .WithMany("Products")
                        .HasForeignKey("SubCategoryId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("SubCategory");
                });

            modelBuilder.Entity("eticaret.Domain.Core.Entities.RatinProduct", b =>
                {
                    b.HasOne("eticaret.Domain.Core.Entities.Product", "Product")
                        .WithMany("RatinProducts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("eticaret.Domain.Core.Entities.Ratin", "Ratin")
                        .WithMany("RatinProducts")
                        .HasForeignKey("RatinId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("eticaret.Domain.Entities.Users.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Ratin");

                    b.Navigation("User");
                });

            modelBuilder.Entity("eticaret.Domain.Core.Entities.SubCategory", b =>
                {
                    b.HasOne("eticaret.Domain.Core.Entities.Category", "Category")
                        .WithMany("SubCategorys")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("eticaret.Domain.Entities.Address", b =>
                {
                    b.HasOne("eticaret.Domain.Entities.Users.User", "User")
                        .WithMany("Address")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("eticaret.Domain.Entities.Users.RoleClaim", b =>
                {
                    b.HasOne("eticaret.Domain.Entities.Users.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("eticaret.Domain.Entities.Users.UserClaim", b =>
                {
                    b.HasOne("eticaret.Domain.Entities.Users.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("eticaret.Domain.Entities.Users.UserLogin", b =>
                {
                    b.HasOne("eticaret.Domain.Entities.Users.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("eticaret.Domain.Entities.Users.UserRole", b =>
                {
                    b.HasOne("eticaret.Domain.Entities.Users.Role", null)
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eticaret.Domain.Entities.Users.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("eticaret.Domain.Entities.Users.UserToken", b =>
                {
                    b.HasOne("eticaret.Domain.Entities.Users.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("eticaret.Domain.Core.Entities.BlogInfo", b =>
                {
                    b.Navigation("BlogInfoAndComment");
                });

            modelBuilder.Entity("eticaret.Domain.Core.Entities.Category", b =>
                {
                    b.Navigation("SubCategorys");
                });

            modelBuilder.Entity("eticaret.Domain.Core.Entities.Colors", b =>
                {
                    b.Navigation("ColorProduct");
                });

            modelBuilder.Entity("eticaret.Domain.Core.Entities.Comments", b =>
                {
                    b.Navigation("BlogInfoAndComment");

                    b.Navigation("Replys");
                });

            modelBuilder.Entity("eticaret.Domain.Core.Entities.Product", b =>
                {
                    b.Navigation("ColorProduct");

                    b.Navigation("Images");

                    b.Navigation("RatinProducts");
                });

            modelBuilder.Entity("eticaret.Domain.Core.Entities.Ratin", b =>
                {
                    b.Navigation("RatinProducts");
                });

            modelBuilder.Entity("eticaret.Domain.Core.Entities.SubCategory", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("eticaret.Domain.Entities.Users.Role", b =>
                {
                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("eticaret.Domain.Entities.Users.User", b =>
                {
                    b.Navigation("Address");

                    b.Navigation("BlogInfoAndComment");

                    b.Navigation("BlogInfos");
                });
#pragma warning restore 612, 618
        }
    }
}
