// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using eticaret.Domain.Database.Context;

#nullable disable

namespace eticaret.Migrations
{
    [DbContext(typeof(CommerceContext))]
    partial class CommerceContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("eticaret.Domain.Core.Entities.BlogInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("BlogInfo");
                });

            modelBuilder.Entity("eticaret.Domain.Core.Entities.BlogInfoAndComment", b =>
                {
                    b.Property<int>("BlogInfoId")
                        .HasColumnType("int");

                    b.Property<int>("CommentId")
                        .HasColumnType("int");

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("BlogInfoId", "CommentId");

                    b.HasIndex("CommentId");

                    b.HasIndex("UserId");

                    b.ToTable("BlogInfoAndComment");
                });

            modelBuilder.Entity("eticaret.Domain.Core.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Flag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Category");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateBy = "Sistem",
                            CreateDate = "14.07.2025 11:22:03",
                            Flag = "247b6434-753f-482d-b203-93d1d19d6f4c",
                            IsDeleted = false,
                            Name = "Category 1"
                        },
                        new
                        {
                            Id = 2,
                            CreateBy = "Sistem",
                            CreateDate = "14.07.2025 11:22:03",
                            Flag = "35f3d685-22d4-44d2-a8c8-068c2ea6058b",
                            IsDeleted = false,
                            Name = "Category 2"
                        },
                        new
                        {
                            Id = 3,
                            CreateBy = "Sistem",
                            CreateDate = "14.07.2025 11:22:03",
                            Flag = "a275f21e-7586-414f-8237-26be58c6f2de",
                            IsDeleted = false,
                            Name = "Category 3"
                        },
                        new
                        {
                            Id = 4,
                            CreateBy = "Sistem",
                            CreateDate = "14.07.2025 11:22:03",
                            Flag = "8f67fc3b-7a46-4ae0-8601-b46d818b4c2c",
                            IsDeleted = false,
                            Name = "Category 4"
                        },
                        new
                        {
                            Id = 5,
                            CreateBy = "Sistem",
                            CreateDate = "14.07.2025 11:22:03",
                            Flag = "62cdfb8f-5825-4cf2-88f8-079533563c40",
                            IsDeleted = false,
                            Name = "Category 5"
                        },
                        new
                        {
                            Id = 6,
                            CreateBy = "Sistem",
                            CreateDate = "14.07.2025 11:22:03",
                            Flag = "cf6ec546-159b-4614-8789-668f021a47e5",
                            IsDeleted = false,
                            Name = "Category 6"
                        });
                });

            modelBuilder.Entity("eticaret.Domain.Core.Entities.ColorProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ColorsId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ColorsId");

                    b.HasIndex("ProductId");

                    b.ToTable("ColorProduct");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ColorsId = 1,
                            ProductId = 1
                        },
                        new
                        {
                            Id = 2,
                            ColorsId = 2,
                            ProductId = 2
                        },
                        new
                        {
                            Id = 3,
                            ColorsId = 3,
                            ProductId = 3
                        },
                        new
                        {
                            Id = 4,
                            ColorsId = 4,
                            ProductId = 4
                        },
                        new
                        {
                            Id = 5,
                            ColorsId = 5,
                            ProductId = 5
                        },
                        new
                        {
                            Id = 6,
                            ColorsId = 6,
                            ProductId = 6
                        },
                        new
                        {
                            Id = 7,
                            ColorsId = 7,
                            ProductId = 7
                        },
                        new
                        {
                            Id = 8,
                            ColorsId = 8,
                            ProductId = 8
                        },
                        new
                        {
                            Id = 9,
                            ColorsId = 9,
                            ProductId = 9
                        },
                        new
                        {
                            Id = 10,
                            ColorsId = 10,
                            ProductId = 10
                        },
                        new
                        {
                            Id = 11,
                            ColorsId = 11,
                            ProductId = 11
                        },
                        new
                        {
                            Id = 12,
                            ColorsId = 12,
                            ProductId = 12
                        },
                        new
                        {
                            Id = 13,
                            ColorsId = 13,
                            ProductId = 13
                        },
                        new
                        {
                            Id = 14,
                            ColorsId = 14,
                            ProductId = 14
                        },
                        new
                        {
                            Id = 15,
                            ColorsId = 1,
                            ProductId = 15
                        },
                        new
                        {
                            Id = 16,
                            ColorsId = 2,
                            ProductId = 16
                        },
                        new
                        {
                            Id = 17,
                            ColorsId = 3,
                            ProductId = 17
                        },
                        new
                        {
                            Id = 18,
                            ColorsId = 4,
                            ProductId = 18
                        },
                        new
                        {
                            Id = 19,
                            ColorsId = 5,
                            ProductId = 19
                        },
                        new
                        {
                            Id = 20,
                            ColorsId = 6,
                            ProductId = 20
                        },
                        new
                        {
                            Id = 21,
                            ColorsId = 7,
                            ProductId = 21
                        },
                        new
                        {
                            Id = 22,
                            ColorsId = 8,
                            ProductId = 22
                        },
                        new
                        {
                            Id = 23,
                            ColorsId = 9,
                            ProductId = 23
                        },
                        new
                        {
                            Id = 24,
                            ColorsId = 10,
                            ProductId = 24
                        },
                        new
                        {
                            Id = 25,
                            ColorsId = 11,
                            ProductId = 25
                        });
                });

            modelBuilder.Entity("eticaret.Domain.Core.Entities.Colors", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Colorvalue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Color");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Colorvalue = "#f0f8ff",
                            CreateBy = "System",
                            CreateDate = "14.07.2025 11:22:03",
                            IsDeleted = false,
                            Name = "Alice Blue"
                        },
                        new
                        {
                            Id = 2,
                            Colorvalue = "#faebd7",
                            CreateBy = "System",
                            CreateDate = "14.07.2025 11:22:03",
                            IsDeleted = false,
                            Name = "Antik Beyaz"
                        },
                        new
                        {
                            Id = 3,
                            Colorvalue = "#00ffff",
                            CreateBy = "System",
                            CreateDate = "14.07.2025 11:22:03",
                            IsDeleted = false,
                            Name = "Aqua"
                        },
                        new
                        {
                            Id = 4,
                            Colorvalue = "#7fffd4",
                            CreateBy = "System",
                            CreateDate = "14.07.2025 11:22:03",
                            IsDeleted = false,
                            Name = "Akuamarin"
                        },
                        new
                        {
                            Id = 5,
                            Colorvalue = "#f0ffff",
                            CreateBy = "System",
                            CreateDate = "14.07.2025 11:22:03",
                            IsDeleted = false,
                            Name = "Masmavi"
                        },
                        new
                        {
                            Id = 6,
                            Colorvalue = "#f5f5dc",
                            CreateBy = "System",
                            CreateDate = "14.07.2025 11:22:03",
                            IsDeleted = false,
                            Name = "Bej"
                        },
                        new
                        {
                            Id = 7,
                            Colorvalue = "#ffe4c4",
                            CreateBy = "System",
                            CreateDate = "14.07.2025 11:22:03",
                            IsDeleted = false,
                            Name = "BISQUE"
                        },
                        new
                        {
                            Id = 8,
                            Colorvalue = "#000000",
                            CreateBy = "System",
                            CreateDate = "14.07.2025 11:22:03",
                            IsDeleted = false,
                            Name = "Siyah"
                        },
                        new
                        {
                            Id = 9,
                            Colorvalue = "#ffebcd",
                            CreateBy = "System",
                            CreateDate = "14.07.2025 11:22:03",
                            IsDeleted = false,
                            Name = "Blanchedalmond"
                        },
                        new
                        {
                            Id = 10,
                            Colorvalue = "#0000ff",
                            CreateBy = "System",
                            CreateDate = "14.07.2025 11:22:03",
                            IsDeleted = false,
                            Name = "Mavi"
                        },
                        new
                        {
                            Id = 11,
                            Colorvalue = "#8a2be2",
                            CreateBy = "System",
                            CreateDate = "14.07.2025 11:22:03",
                            IsDeleted = false,
                            Name = "Mavi Menekşe"
                        },
                        new
                        {
                            Id = 12,
                            Colorvalue = "#a52a2a",
                            CreateBy = "System",
                            CreateDate = "14.07.2025 11:22:03",
                            IsDeleted = false,
                            Name = "Kahverengi"
                        },
                        new
                        {
                            Id = 13,
                            Colorvalue = "#deb887",
                            CreateBy = "System",
                            CreateDate = "14.07.2025 11:22:03",
                            IsDeleted = false,
                            Name = "Burlywood"
                        },
                        new
                        {
                            Id = 14,
                            Colorvalue = "#5f9ea0",
                            CreateBy = "System",
                            CreateDate = "14.07.2025 11:22:03",
                            IsDeleted = false,
                            Name = "CadetBlue"
                        });
                });

            modelBuilder.Entity("eticaret.Domain.Core.Entities.Comments", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CommentsId")
                        .HasColumnType("int");

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CommentsId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("eticaret.Domain.Core.Entities.Favorites", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId");

                    b.ToTable("Favorites");
                });

            modelBuilder.Entity("eticaret.Domain.Core.Entities.Image", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Flag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsShowcase")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("Image");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateBy = "Sistem",
                            CreateDate = "14.07.2025 11:22:03",
                            Flag = "6085c51a-0357-478f-a982-0a8df1116efa",
                            IsDeleted = false,
                            IsShowcase = true,
                            Name = "1.jpg",
                            ProductId = 1
                        },
                        new
                        {
                            Id = 2,
                            CreateBy = "Sistem",
                            CreateDate = "14.07.2025 11:22:03",
                            Flag = "b5ca94f0-601b-458f-bea9-8922f3dfda78",
                            IsDeleted = false,
                            IsShowcase = true,
                            Name = "back-1.jpg",
                            ProductId = 2
                        },
                        new
                        {
                            Id = 3,
                            CreateBy = "Sistem",
                            CreateDate = "14.07.2025 11:22:03",
                            Flag = "66a7b273-9325-4027-9f51-2b3ef2b489ef",
                            IsDeleted = false,
                            IsShowcase = true,
                            Name = "2.jpg",
                            ProductId = 3
                        },
                        new
                        {
                            Id = 4,
                            CreateBy = "Sistem",
                            CreateDate = "14.07.2025 11:22:03",
                            Flag = "a855f940-edf6-4e52-8dc1-ca91bdd87380",
                            IsDeleted = false,
                            IsShowcase = true,
                            Name = "back-2.jpg",
                            ProductId = 4
                        },
                        new
                        {
                            Id = 5,
                            CreateBy = "Sistem",
                            CreateDate = "14.07.2025 11:22:03",
                            Flag = "ab239a04-d24d-4fb9-ac36-c9328857c879",
                            IsDeleted = false,
                            IsShowcase = true,
                            Name = "3.jpg",
                            ProductId = 5
                        },
                        new
                        {
                            Id = 6,
                            CreateBy = "Sistem",
                            CreateDate = "14.07.2025 11:22:03",
                            Flag = "41300d95-48ba-440b-8218-f931340a4044",
                            IsDeleted = false,
                            IsShowcase = true,
                            Name = "back-3.jpg",
                            ProductId = 6
                        },
                        new
                        {
                            Id = 7,
                            CreateBy = "Sistem",
                            CreateDate = "14.07.2025 11:22:03",
                            Flag = "aa08e8d8-ef0b-4f5c-b1d0-20c4758956a1",
                            IsDeleted = false,
                            IsShowcase = true,
                            Name = "4.jpg",
                            ProductId = 7
                        },
                        new
                        {
                            Id = 8,
                            CreateBy = "Sistem",
                            CreateDate = "14.07.2025 11:22:03",
                            Flag = "375c1fc1-fe13-459d-bed2-69819a38bb5a",
                            IsDeleted = false,
                            IsShowcase = true,
                            Name = "back-4.jpg",
                            ProductId = 8
                        },
                        new
                        {
                            Id = 9,
                            CreateBy = "Sistem",
                            CreateDate = "14.07.2025 11:22:03",
                            Flag = "27f6520a-133e-466b-990a-c5e533658e38",
                            IsDeleted = false,
                            IsShowcase = true,
                            Name = "5.jpg",
                            ProductId = 9
                        },
                        new
                        {
                            Id = 10,
                            CreateBy = "Sistem",
                            CreateDate = "14.07.2025 11:22:03",
                            Flag = "6e509723-be0c-46be-988d-c2702a8f4895",
                            IsDeleted = false,
                            IsShowcase = true,
                            Name = "back-5.jpg",
                            ProductId = 10
                        },
                        new
                        {
                            Id = 11,
                            CreateBy = "Sistem",
                            CreateDate = "14.07.2025 11:22:03",
                            Flag = "59cd5e13-8d29-452a-a2a3-0081368bd37a",
                            IsDeleted = false,
                            IsShowcase = true,
                            Name = "6.jpg",
                            ProductId = 11
                        },
                        new
                        {
                            Id = 12,
                            CreateBy = "Sistem",
                            CreateDate = "14.07.2025 11:22:03",
                            Flag = "dc508daf-087d-4fb2-85cc-a7fd96d86442",
                            IsDeleted = false,
                            IsShowcase = true,
                            Name = "back-6.jpg",
                            ProductId = 12
                        },
                        new
                        {
                            Id = 13,
                            CreateBy = "Sistem",
                            CreateDate = "14.07.2025 11:22:03",
                            Flag = "f42f38fd-bfb5-4f07-a8ab-0d613980d092",
                            IsDeleted = false,
                            IsShowcase = true,
                            Name = "7.jpg",
                            ProductId = 13
                        },
                        new
                        {
                            Id = 14,
                            CreateBy = "Sistem",
                            CreateDate = "14.07.2025 11:22:03",
                            Flag = "74f120a4-d96c-465e-91d7-75645bc4a971",
                            IsDeleted = false,
                            IsShowcase = true,
                            Name = "back-7.jpg",
                            ProductId = 14
                        },
                        new
                        {
                            Id = 15,
                            CreateBy = "Sistem",
                            CreateDate = "14.07.2025 11:22:03",
                            Flag = "3c9d38b4-96b4-4d47-a41f-a20ec7e6d0c3",
                            IsDeleted = false,
                            IsShowcase = true,
                            Name = "8.jpg",
                            ProductId = 14
                        },
                        new
                        {
                            Id = 16,
                            CreateBy = "Sistem",
                            CreateDate = "14.07.2025 11:22:03",
                            Flag = "616a13c9-5508-47d4-9dad-135f28f003ee",
                            IsDeleted = false,
                            IsShowcase = true,
                            Name = "back-8.jpg",
                            ProductId = 16
                        },
                        new
                        {
                            Id = 17,
                            CreateBy = "Sistem",
                            CreateDate = "14.07.2025 11:22:03",
                            Flag = "a7626332-ef71-465c-b59d-c1e56a361779",
                            IsDeleted = false,
                            IsShowcase = true,
                            Name = "1.jpg",
                            ProductId = 17
                        },
                        new
                        {
                            Id = 18,
                            CreateBy = "Sistem",
                            CreateDate = "14.07.2025 11:22:03",
                            Flag = "c211d8e7-9840-47e0-9bf5-c57362f539cd",
                            IsDeleted = false,
                            IsShowcase = true,
                            Name = "back-1.jpg",
                            ProductId = 18
                        },
                        new
                        {
                            Id = 19,
                            CreateBy = "Sistem",
                            CreateDate = "14.07.2025 11:22:03",
                            Flag = "3de63a2e-3a57-4056-a633-8bd0a5a8ee3d",
                            IsDeleted = false,
                            IsShowcase = true,
                            Name = "2.jpg",
                            ProductId = 19
                        },
                        new
                        {
                            Id = 20,
                            CreateBy = "Sistem",
                            CreateDate = "14.07.2025 11:22:03",
                            Flag = "789052c3-9867-4701-ae26-e6f0a43e207a",
                            IsDeleted = false,
                            IsShowcase = false,
                            Name = "back-2.jpg",
                            ProductId = 20
                        },
                        new
                        {
                            Id = 21,
                            CreateBy = "Sistem",
                            CreateDate = "14.07.2025 11:22:03",
                            Flag = "552741ae-c1eb-4914-af52-5afc5b23283d",
                            IsDeleted = false,
                            IsShowcase = true,
                            Name = "3.jpg",
                            ProductId = 21
                        },
                        new
                        {
                            Id = 22,
                            CreateBy = "Sistem",
                            CreateDate = "14.07.2025 11:22:03",
                            Flag = "a4b14fb4-4d77-4787-a394-5469ff72c057",
                            IsDeleted = false,
                            IsShowcase = false,
                            Name = "back-3.jpg",
                            ProductId = 22
                        },
                        new
                        {
                            Id = 23,
                            CreateBy = "Sistem",
                            CreateDate = "14.07.2025 11:22:03",
                            Flag = "523e38dc-ff6c-4cfe-b041-2c28e7211d67",
                            IsDeleted = false,
                            IsShowcase = true,
                            Name = "4.jpg",
                            ProductId = 23
                        },
                        new
                        {
                            Id = 24,
                            CreateBy = "Sistem",
                            CreateDate = "14.07.2025 11:22:03",
                            Flag = "bf62639f-d87a-4afe-b638-3cad6353ae3e",
                            IsDeleted = false,
                            IsShowcase = false,
                            Name = "back-4.jpg",
                            ProductId = 24
                        },
                        new
                        {
                            Id = 25,
                            CreateBy = "Sistem",
                            CreateDate = "14.07.2025 11:22:03",
                            Flag = "bf34d8fa-57a0-49be-8997-a8c021824bf4",
                            IsDeleted = false,
                            IsShowcase = false,
                            Name = "5.jpg",
                            ProductId = 25
                        });
                });

            modelBuilder.Entity("eticaret.Domain.Core.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Flag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("NewPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("OldPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("RatinAVG")
                        .HasColumnType("int");

                    b.Property<int>("SubCategoryId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SubCategoryId");

                    b.ToTable("Product");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateBy = "Sistem",
                            CreateDate = "14.07.2025 11:22:03",
                            Description = "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quas nihil laboriosam voluptatem ab consectetur dolorum id, soluta sunt at culpa commodi totam quod natus qui!",
                            Flag = "e63c0d13-f212-4c9a-a6de-cf8ff0b7b97a",
                            IsDeleted = false,
                            Name = "Product 1",
                            NewPrice = 0m,
                            OldPrice = 340588m,
                            RatinAVG = 0,
                            SubCategoryId = 1
                        },
                        new
                        {
                            Id = 2,
                            CreateBy = "Sistem",
                            CreateDate = "14.07.2025 11:22:03",
                            Description = "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quas nihil laboriosam voluptatem ab consectetur dolorum id, soluta sunt at culpa commodi totam quod natus qui!",
                            Flag = "dd897d6d-13b6-4c83-ae63-8904ae8e9b88",
                            IsDeleted = false,
                            Name = "Product 2",
                            NewPrice = 0m,
                            OldPrice = 340588m,
                            RatinAVG = 0,
                            SubCategoryId = 1
                        },
                        new
                        {
                            Id = 3,
                            CreateBy = "Sistem",
                            CreateDate = "14.07.2025 11:22:03",
                            Description = "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quas nihil laboriosam voluptatem ab consectetur dolorum id, soluta sunt at culpa commodi totam quod natus qui!",
                            Flag = "353671f3-bb02-4ad6-b3aa-e9a9fcca25ed",
                            IsDeleted = false,
                            Name = "Product 3",
                            NewPrice = 0m,
                            OldPrice = 340588m,
                            RatinAVG = 0,
                            SubCategoryId = 1
                        },
                        new
                        {
                            Id = 4,
                            CreateBy = "Sistem",
                            CreateDate = "14.07.2025 11:22:03",
                            Description = "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quas nihil laboriosam voluptatem ab consectetur dolorum id, soluta sunt at culpa commodi totam quod natus qui!",
                            Flag = "c015d879-0b6e-4883-a0d4-e200809e3dc1",
                            IsDeleted = false,
                            Name = "Product 4",
                            NewPrice = 0m,
                            OldPrice = 340588m,
                            RatinAVG = 0,
                            SubCategoryId = 1
                        },
                        new
                        {
                            Id = 5,
                            CreateBy = "Sistem",
                            CreateDate = "14.07.2025 11:22:03",
                            Description = "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quas nihil laboriosam voluptatem ab consectetur dolorum id, soluta sunt at culpa commodi totam quod natus qui!",
                            Flag = "c28a06ba-e09a-46f0-8f82-19eb61c93987",
                            IsDeleted = false,
                            Name = "Product 5",
                            NewPrice = 0m,
                            OldPrice = 340588m,
                            RatinAVG = 0,
                            SubCategoryId = 2
                        },
                        new
                        {
                            Id = 6,
                            CreateBy = "Sistem",
                            CreateDate = "14.07.2025 11:22:03",
                            Description = "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quas nihil laboriosam voluptatem ab consectetur dolorum id, soluta sunt at culpa commodi totam quod natus qui!",
                            Flag = "02c0d7ab-5d3a-4348-a6f1-86e08c624aee",
                            IsDeleted = false,
                            Name = "Product 6",
                            NewPrice = 0m,
                            OldPrice = 340588m,
                            RatinAVG = 0,
                            SubCategoryId = 2
                        },
                        new
                        {
                            Id = 7,
                            CreateBy = "Sistem",
                            CreateDate = "14.07.2025 11:22:03",
                            Description = "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quas nihil laboriosam voluptatem ab consectetur dolorum id, soluta sunt at culpa commodi totam quod natus qui!",
                            Flag = "3769dbbe-da1c-48ab-9b7f-9adfc7917a03",
                            IsDeleted = false,
                            Name = "Product 7",
                            NewPrice = 0m,
                            OldPrice = 340588m,
                            RatinAVG = 0,
                            SubCategoryId = 2
                        },
                        new
                        {
                            Id = 8,
                            CreateBy = "Sistem",
                            CreateDate = "14.07.2025 11:22:03",
                            Description = "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quas nihil laboriosam voluptatem ab consectetur dolorum id, soluta sunt at culpa commodi totam quod natus qui!",
                            Flag = "f4936b62-993d-495c-81be-4759f6f4960b",
                            IsDeleted = false,
                            Name = "Product 8",
                            NewPrice = 0m,
                            OldPrice = 340588m,
                            RatinAVG = 0,
                            SubCategoryId = 2
                        },
                        new
                        {
                            Id = 9,
                            CreateBy = "Sistem",
                            CreateDate = "14.07.2025 11:22:03",
                            Description = "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quas nihil laboriosam voluptatem ab consectetur dolorum id, soluta sunt at culpa commodi totam quod natus qui!",
                            Flag = "187d3c85-710d-4d05-a3ab-10058dac1290",
                            IsDeleted = false,
                            Name = "Product 9",
                            NewPrice = 0m,
                            OldPrice = 340588m,
                            RatinAVG = 0,
                            SubCategoryId = 3
                        },
                        new
                        {
                            Id = 10,
                            CreateBy = "Sistem",
                            CreateDate = "14.07.2025 11:22:03",
                            Description = "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quas nihil laboriosam voluptatem ab consectetur dolorum id, soluta sunt at culpa commodi totam quod natus qui!",
                            Flag = "54c96915-a129-48dc-88a9-d7b669815e41",
                            IsDeleted = false,
                            Name = "Product 10",
                            NewPrice = 0m,
                            OldPrice = 340588m,
                            RatinAVG = 0,
                            SubCategoryId = 3
                        },
                        new
                        {
                            Id = 11,
                            CreateBy = "Sistem",
                            CreateDate = "14.07.2025 11:22:03",
                            Description = "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quas nihil laboriosam voluptatem ab consectetur dolorum id, soluta sunt at culpa commodi totam quod natus qui!",
                            Flag = "feee6ab0-06ad-4275-8986-f6793dab6d98",
                            IsDeleted = false,
                            Name = "Product 11",
                            NewPrice = 0m,
                            OldPrice = 340588m,
                            RatinAVG = 0,
                            SubCategoryId = 3
                        },
                        new
                        {
                            Id = 12,
                            CreateBy = "Sistem",
                            CreateDate = "14.07.2025 11:22:03",
                            Description = "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quas nihil laboriosam voluptatem ab consectetur dolorum id, soluta sunt at culpa commodi totam quod natus qui!",
                            Flag = "0c277e14-8964-4315-a2b2-c95f2ab901d1",
                            IsDeleted = false,
                            Name = "Product 12",
                            NewPrice = 0m,
                            OldPrice = 340588m,
                            RatinAVG = 0,
                            SubCategoryId = 3
                        },
                        new
                        {
                            Id = 13,
                            CreateBy = "Sistem",
                            CreateDate = "14.07.2025 11:22:03",
                            Description = "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quas nihil laboriosam voluptatem ab consectetur dolorum id, soluta sunt at culpa commodi totam quod natus qui!",
                            Flag = "1bc824de-17a2-4f7c-ad1c-d36172e87ca1",
                            IsDeleted = false,
                            Name = "Product 13",
                            NewPrice = 0m,
                            OldPrice = 340588m,
                            RatinAVG = 0,
                            SubCategoryId = 4
                        },
                        new
                        {
                            Id = 14,
                            CreateBy = "Sistem",
                            CreateDate = "14.07.2025 11:22:03",
                            Description = "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quas nihil laboriosam voluptatem ab consectetur dolorum id, soluta sunt at culpa commodi totam quod natus qui!",
                            Flag = "90ce7334-b58c-454f-9ea8-d6b782f9bdbe",
                            IsDeleted = false,
                            Name = "Product 14",
                            NewPrice = 0m,
                            OldPrice = 340588m,
                            RatinAVG = 0,
                            SubCategoryId = 4
                        },
                        new
                        {
                            Id = 15,
                            CreateBy = "Sistem",
                            CreateDate = "14.07.2025 11:22:03",
                            Description = "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quas nihil laboriosam voluptatem ab consectetur dolorum id, soluta sunt at culpa commodi totam quod natus qui!",
                            Flag = "d017b373-9d59-42a0-9cb3-2bce13764191",
                            IsDeleted = false,
                            Name = "Product 15",
                            NewPrice = 0m,
                            OldPrice = 340588m,
                            RatinAVG = 0,
                            SubCategoryId = 4
                        },
                        new
                        {
                            Id = 16,
                            CreateBy = "Sistem",
                            CreateDate = "14.07.2025 11:22:03",
                            Description = "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quas nihil laboriosam voluptatem ab consectetur dolorum id, soluta sunt at culpa commodi totam quod natus qui!",
                            Flag = "87f0c89d-f853-44f1-9f77-e5863beb057a",
                            IsDeleted = false,
                            Name = "Product 16",
                            NewPrice = 0m,
                            OldPrice = 340588m,
                            RatinAVG = 0,
                            SubCategoryId = 4
                        },
                        new
                        {
                            Id = 17,
                            CreateBy = "Sistem",
                            CreateDate = "14.07.2025 11:22:03",
                            Description = "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quas nihil laboriosam voluptatem ab consectetur dolorum id, soluta sunt at culpa commodi totam quod natus qui!",
                            Flag = "7fe4a85d-687c-4963-ac28-9d7f08c60165",
                            IsDeleted = false,
                            Name = "Product 17",
                            NewPrice = 0m,
                            OldPrice = 340588m,
                            RatinAVG = 0,
                            SubCategoryId = 5
                        },
                        new
                        {
                            Id = 18,
                            CreateBy = "Sistem",
                            CreateDate = "14.07.2025 11:22:03",
                            Description = "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quas nihil laboriosam voluptatem ab consectetur dolorum id, soluta sunt at culpa commodi totam quod natus qui!",
                            Flag = "d904f5e7-ec40-425e-a011-0d2f06570be9",
                            IsDeleted = false,
                            Name = "Product 18",
                            NewPrice = 0m,
                            OldPrice = 340588m,
                            RatinAVG = 0,
                            SubCategoryId = 5
                        },
                        new
                        {
                            Id = 19,
                            CreateBy = "Sistem",
                            CreateDate = "14.07.2025 11:22:03",
                            Description = "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quas nihil laboriosam voluptatem ab consectetur dolorum id, soluta sunt at culpa commodi totam quod natus qui!",
                            Flag = "f42bb311-3ef0-45cd-afb5-9faf4d67b18b",
                            IsDeleted = false,
                            Name = "Product 19",
                            NewPrice = 0m,
                            OldPrice = 340588m,
                            RatinAVG = 0,
                            SubCategoryId = 5
                        },
                        new
                        {
                            Id = 20,
                            CreateBy = "Sistem",
                            CreateDate = "14.07.2025 11:22:03",
                            Description = "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quas nihil laboriosam voluptatem ab consectetur dolorum id, soluta sunt at culpa commodi totam quod natus qui!",
                            Flag = "4b369d33-e414-4e90-a5eb-b5c9f1146202",
                            IsDeleted = false,
                            Name = "Product 20",
                            NewPrice = 0m,
                            OldPrice = 340588m,
                            RatinAVG = 0,
                            SubCategoryId = 5
                        },
                        new
                        {
                            Id = 21,
                            CreateBy = "Sistem",
                            CreateDate = "14.07.2025 11:22:03",
                            Description = "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quas nihil laboriosam voluptatem ab consectetur dolorum id, soluta sunt at culpa commodi totam quod natus qui!",
                            Flag = "305d28ae-88ae-4dc2-ac48-83a637cf3b00",
                            IsDeleted = false,
                            Name = "Product 21",
                            NewPrice = 0m,
                            OldPrice = 340588m,
                            RatinAVG = 0,
                            SubCategoryId = 6
                        },
                        new
                        {
                            Id = 22,
                            CreateBy = "Sistem",
                            CreateDate = "14.07.2025 11:22:03",
                            Description = "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quas nihil laboriosam voluptatem ab consectetur dolorum id, soluta sunt at culpa commodi totam quod natus qui!",
                            Flag = "f67333d1-9de6-40ea-aaa5-95f4c7abf010",
                            IsDeleted = false,
                            Name = "Product 22",
                            NewPrice = 0m,
                            OldPrice = 340588m,
                            RatinAVG = 0,
                            SubCategoryId = 6
                        },
                        new
                        {
                            Id = 23,
                            CreateBy = "Sistem",
                            CreateDate = "14.07.2025 11:22:03",
                            Description = "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quas nihil laboriosam voluptatem ab consectetur dolorum id, soluta sunt at culpa commodi totam quod natus qui!",
                            Flag = "9b8ead54-e861-404b-ad2e-8bdc780fa789",
                            IsDeleted = false,
                            Name = "Product 23",
                            NewPrice = 0m,
                            OldPrice = 340588m,
                            RatinAVG = 0,
                            SubCategoryId = 6
                        },
                        new
                        {
                            Id = 24,
                            CreateBy = "Sistem",
                            CreateDate = "14.07.2025 11:22:03",
                            Description = "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quas nihil laboriosam voluptatem ab consectetur dolorum id, soluta sunt at culpa commodi totam quod natus qui!",
                            Flag = "07a98d0a-a8cc-4752-9b36-764c3b84c087",
                            IsDeleted = false,
                            Name = "Product 24",
                            NewPrice = 0m,
                            OldPrice = 340588m,
                            RatinAVG = 0,
                            SubCategoryId = 6
                        },
                        new
                        {
                            Id = 25,
                            CreateBy = "Sistem",
                            CreateDate = "14.07.2025 11:22:03",
                            Description = "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quas nihil laboriosam voluptatem ab consectetur dolorum id, soluta sunt at culpa commodi totam quod natus qui!",
                            Flag = "a43fe53a-f0dd-4a5f-8929-cac617ac5873",
                            IsDeleted = false,
                            Name = "Product 25",
                            NewPrice = 0m,
                            OldPrice = 340588m,
                            RatinAVG = 0,
                            SubCategoryId = 6
                        });
                });

            modelBuilder.Entity("eticaret.Domain.Core.Entities.Ratin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Ratin");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Rating = 1
                        },
                        new
                        {
                            Id = 2,
                            Rating = 2
                        },
                        new
                        {
                            Id = 3,
                            Rating = 3
                        },
                        new
                        {
                            Id = 4,
                            Rating = 4
                        },
                        new
                        {
                            Id = 5,
                            Rating = 5
                        });
                });

            modelBuilder.Entity("eticaret.Domain.Core.Entities.RatinProduct", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("RatinId")
                        .HasColumnType("int");

                    b.HasKey("Id", "UserId");

                    b.HasIndex("ProductId");

                    b.HasIndex("RatinId");

                    b.HasIndex("UserId");

                    b.ToTable("RatinProduct");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            UserId = 1,
                            ProductId = 1,
                            RatinId = 1
                        },
                        new
                        {
                            Id = 2,
                            UserId = 1,
                            ProductId = 2,
                            RatinId = 2
                        },
                        new
                        {
                            Id = 3,
                            UserId = 1,
                            ProductId = 3,
                            RatinId = 3
                        },
                        new
                        {
                            Id = 4,
                            UserId = 1,
                            ProductId = 4,
                            RatinId = 4
                        },
                        new
                        {
                            Id = 5,
                            UserId = 1,
                            ProductId = 5,
                            RatinId = 5
                        });
                });

            modelBuilder.Entity("eticaret.Domain.Core.Entities.SubCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Flag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("SubCategory");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            CreateBy = "Sistem",
                            CreateDate = "14.07.2025 11:22:03",
                            Flag = "1ae8729e-1077-4222-ab60-20c0f1a80869",
                            IsDeleted = false,
                            Name = "Çanta"
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 2,
                            CreateBy = "Sistem",
                            CreateDate = "14.07.2025 11:22:03",
                            Flag = "2a42a75a-0815-4ec9-9e6e-b3cc2562724a",
                            IsDeleted = false,
                            Name = "Halı"
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 3,
                            CreateBy = "Sistem",
                            CreateDate = "14.07.2025 11:22:03",
                            Flag = "a93a5351-4fef-425c-bb5f-e9af71c1d328",
                            IsDeleted = false,
                            Name = "Aksesuar"
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 4,
                            CreateBy = "Sistem",
                            CreateDate = "14.07.2025 11:22:03",
                            Flag = "64dbf9cf-de25-4380-9bfa-ff2e9aa5ff7a",
                            IsDeleted = false,
                            Name = "Spor"
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 5,
                            CreateBy = "Sistem",
                            CreateDate = "14.07.2025 11:22:03",
                            Flag = "3a85f136-6297-43f1-8f42-310eda5aa670",
                            IsDeleted = false,
                            Name = "Giyim"
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 6,
                            CreateBy = "Sistem",
                            CreateDate = "14.07.2025 11:22:03",
                            Flag = "38249cc0-8c29-4e94-9b97-7efc7981354f",
                            IsDeleted = false,
                            Name = "Outdoor"
                        });
                });

            modelBuilder.Entity("eticaret.Domain.Core.Entities.Subscribe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Subscribe");
                });

            modelBuilder.Entity("eticaret.Domain.Entities.About", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Flag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Slogan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Abouts");
                });

            modelBuilder.Entity("eticaret.Domain.Entities.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Flag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("eticaret.Domain.Entities.Users.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Flag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ConcurrencyStamp = "924B836D-B087-4D37-A52D-210ABD72CD96",
                            CreateBy = "Sistem",
                            CreateDate = "14.07.2025 11:22:03",
                            Flag = "46D16588-9420-4F85-A768-D21419075284",
                            IsDeleted = false,
                            Name = "superuser",
                            NormalizedName = "SUPERUSER"
                        },
                        new
                        {
                            Id = 2,
                            ConcurrencyStamp = "232D9C58-01CE-466A-90D0-EB7039C75465",
                            CreateBy = "Sistem",
                            CreateDate = "14.07.2025 11:22:03",
                            Flag = "70449BCD-A6DC-4601-867E-35AD80657B28",
                            IsDeleted = false,
                            Name = "admin",
                            NormalizedName = "ADMIN"
                        });
                });

            modelBuilder.Entity("eticaret.Domain.Entities.Users.RoleClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("eticaret.Domain.Entities.Users.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("Flag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SurName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "925e1fa4-a007-41ff-b3a7-261661a45f86",
                            CreateBy = "Sistem",
                            CreateDate = "14.07.2025 11:22:03",
                            Email = "stoy@windowslive.com",
                            EmailConfirmed = false,
                            Flag = "D90E65E6-9611-4B5F-9F24-BBD468398D51",
                            IsDeleted = false,
                            IsLocked = false,
                            LockoutEnabled = false,
                            Name = "Serkan",
                            NormalizedEmail = "STOY@WINDOWSLIVE.COM",
                            NormalizedUserName = "STOY",
                            PasswordHash = "AQAAAAIAAYagAAAAELga/iPQdPArImSYAlvq1IMibzhij+6sgg750widykNNCNhdxXY3bCXdxrebJppP4w==",
                            PhoneNumber = "0(533) 656 30 95",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "63742240-5787-4E6A-8AE2-FE8BA5381630",
                            SurName = "TOY",
                            TC = "28301227926",
                            TwoFactorEnabled = false,
                            UserName = "stoy"
                        });
                });

            modelBuilder.Entity("eticaret.Domain.Entities.Users.UserClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Flag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("eticaret.Domain.Entities.Users.UserLogin", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("eticaret.Domain.Entities.Users.UserRole", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 1,
                            RoleId = 2
                        });
                });

            modelBuilder.Entity("eticaret.Domain.Entities.Users.UserToken", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Flag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("eticaret.Domain.Core.Entities.BlogInfo", b =>
                {
                    b.HasOne("eticaret.Domain.Entities.Users.User", "User")
                        .WithMany("BlogInfos")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("eticaret.Domain.Core.Entities.BlogInfoAndComment", b =>
                {
                    b.HasOne("eticaret.Domain.Core.Entities.BlogInfo", "BlogInfo")
                        .WithMany("BlogInfoAndComment")
                        .HasForeignKey("BlogInfoId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("eticaret.Domain.Core.Entities.Comments", "Comment")
                        .WithMany("BlogInfoAndComment")
                        .HasForeignKey("CommentId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("eticaret.Domain.Entities.Users.User", "User")
                        .WithMany("BlogInfoAndComment")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("BlogInfo");

                    b.Navigation("Comment");

                    b.Navigation("User");
                });

            modelBuilder.Entity("eticaret.Domain.Core.Entities.ColorProduct", b =>
                {
                    b.HasOne("eticaret.Domain.Core.Entities.Colors", "Colors")
                        .WithMany("ColorProduct")
                        .HasForeignKey("ColorsId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("eticaret.Domain.Core.Entities.Product", "Product")
                        .WithMany("ColorProduct")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Colors");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("eticaret.Domain.Core.Entities.Comments", b =>
                {
                    b.HasOne("eticaret.Domain.Core.Entities.Comments", "Reply")
                        .WithMany("Replys")
                        .HasForeignKey("CommentsId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Reply");
                });

            modelBuilder.Entity("eticaret.Domain.Core.Entities.Favorites", b =>
                {
                    b.HasOne("eticaret.Domain.Core.Entities.Product", "Product")
                        .WithMany("Favorites")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("eticaret.Domain.Entities.Users.User", "User")
                        .WithMany("Favorites")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("eticaret.Domain.Core.Entities.Image", b =>
                {
                    b.HasOne("eticaret.Domain.Core.Entities.Product", "Product")
                        .WithMany("Images")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("eticaret.Domain.Core.Entities.Product", b =>
                {
                    b.HasOne("eticaret.Domain.Core.Entities.SubCategory", "SubCategory")
                        .WithMany("Products")
                        .HasForeignKey("SubCategoryId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("SubCategory");
                });

            modelBuilder.Entity("eticaret.Domain.Core.Entities.RatinProduct", b =>
                {
                    b.HasOne("eticaret.Domain.Core.Entities.Product", "Product")
                        .WithMany("RatinProducts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("eticaret.Domain.Core.Entities.Ratin", "Ratin")
                        .WithMany("RatinProducts")
                        .HasForeignKey("RatinId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("eticaret.Domain.Entities.Users.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Ratin");

                    b.Navigation("User");
                });

            modelBuilder.Entity("eticaret.Domain.Core.Entities.SubCategory", b =>
                {
                    b.HasOne("eticaret.Domain.Core.Entities.Category", "Category")
                        .WithMany("SubCategorys")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("eticaret.Domain.Entities.Address", b =>
                {
                    b.HasOne("eticaret.Domain.Entities.Users.User", "User")
                        .WithMany("Address")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("eticaret.Domain.Entities.Users.RoleClaim", b =>
                {
                    b.HasOne("eticaret.Domain.Entities.Users.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("eticaret.Domain.Entities.Users.UserClaim", b =>
                {
                    b.HasOne("eticaret.Domain.Entities.Users.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("eticaret.Domain.Entities.Users.UserLogin", b =>
                {
                    b.HasOne("eticaret.Domain.Entities.Users.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("eticaret.Domain.Entities.Users.UserRole", b =>
                {
                    b.HasOne("eticaret.Domain.Entities.Users.Role", null)
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eticaret.Domain.Entities.Users.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("eticaret.Domain.Entities.Users.UserToken", b =>
                {
                    b.HasOne("eticaret.Domain.Entities.Users.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("eticaret.Domain.Core.Entities.BlogInfo", b =>
                {
                    b.Navigation("BlogInfoAndComment");
                });

            modelBuilder.Entity("eticaret.Domain.Core.Entities.Category", b =>
                {
                    b.Navigation("SubCategorys");
                });

            modelBuilder.Entity("eticaret.Domain.Core.Entities.Colors", b =>
                {
                    b.Navigation("ColorProduct");
                });

            modelBuilder.Entity("eticaret.Domain.Core.Entities.Comments", b =>
                {
                    b.Navigation("BlogInfoAndComment");

                    b.Navigation("Replys");
                });

            modelBuilder.Entity("eticaret.Domain.Core.Entities.Product", b =>
                {
                    b.Navigation("ColorProduct");

                    b.Navigation("Favorites");

                    b.Navigation("Images");

                    b.Navigation("RatinProducts");
                });

            modelBuilder.Entity("eticaret.Domain.Core.Entities.Ratin", b =>
                {
                    b.Navigation("RatinProducts");
                });

            modelBuilder.Entity("eticaret.Domain.Core.Entities.SubCategory", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("eticaret.Domain.Entities.Users.Role", b =>
                {
                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("eticaret.Domain.Entities.Users.User", b =>
                {
                    b.Navigation("Address");

                    b.Navigation("BlogInfoAndComment");

                    b.Navigation("BlogInfos");

                    b.Navigation("Favorites");
                });
#pragma warning restore 612, 618
        }
    }
}
