// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using eticaret.Domain.Database.Context;

#nullable disable

namespace eticaret.Migrations
{
    [DbContext(typeof(CommerceContext))]
    partial class CommerceContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("eticaret.Domain.Core.Entities.Basket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId");

                    b.ToTable("Baskets");
                });

            modelBuilder.Entity("eticaret.Domain.Core.Entities.BlogInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("BlogInfo");
                });

            modelBuilder.Entity("eticaret.Domain.Core.Entities.BlogInfoAndComment", b =>
                {
                    b.Property<int>("BlogInfoId")
                        .HasColumnType("int");

                    b.Property<int>("CommentId")
                        .HasColumnType("int");

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("BlogInfoId", "CommentId");

                    b.HasIndex("CommentId");

                    b.HasIndex("UserId");

                    b.ToTable("BlogInfoAndComment");
                });

            modelBuilder.Entity("eticaret.Domain.Core.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Flag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Category");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateBy = "Sistem",
                            CreateDate = "11.08.2025 09:15:50",
                            Flag = "69734691-a1b9-42ea-a5b3-0922388a7119",
                            IsDeleted = false,
                            Name = "Category 1"
                        },
                        new
                        {
                            Id = 2,
                            CreateBy = "Sistem",
                            CreateDate = "11.08.2025 09:15:50",
                            Flag = "2b990931-4de8-4f55-9476-0f78a6dca5db",
                            IsDeleted = false,
                            Name = "Category 2"
                        },
                        new
                        {
                            Id = 3,
                            CreateBy = "Sistem",
                            CreateDate = "11.08.2025 09:15:50",
                            Flag = "8618b244-9f73-4024-aa3a-6e4f2edfc5a0",
                            IsDeleted = false,
                            Name = "Category 3"
                        },
                        new
                        {
                            Id = 4,
                            CreateBy = "Sistem",
                            CreateDate = "11.08.2025 09:15:50",
                            Flag = "60a711dc-5409-4822-859a-dae02409a510",
                            IsDeleted = false,
                            Name = "Category 4"
                        },
                        new
                        {
                            Id = 5,
                            CreateBy = "Sistem",
                            CreateDate = "11.08.2025 09:15:50",
                            Flag = "b0b7b0c9-1048-44e5-ae84-8b54a234b454",
                            IsDeleted = false,
                            Name = "Category 5"
                        },
                        new
                        {
                            Id = 6,
                            CreateBy = "Sistem",
                            CreateDate = "11.08.2025 09:15:50",
                            Flag = "a0b99be4-f169-4d50-a2eb-6792a1cb5781",
                            IsDeleted = false,
                            Name = "Category 6"
                        });
                });

            modelBuilder.Entity("eticaret.Domain.Core.Entities.ColorProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ColorsId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ColorsId");

                    b.HasIndex("ProductId");

                    b.ToTable("ColorProduct");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ColorsId = 1,
                            ProductId = 1
                        },
                        new
                        {
                            Id = 2,
                            ColorsId = 2,
                            ProductId = 2
                        },
                        new
                        {
                            Id = 3,
                            ColorsId = 3,
                            ProductId = 3
                        },
                        new
                        {
                            Id = 4,
                            ColorsId = 4,
                            ProductId = 4
                        },
                        new
                        {
                            Id = 5,
                            ColorsId = 5,
                            ProductId = 5
                        },
                        new
                        {
                            Id = 6,
                            ColorsId = 6,
                            ProductId = 6
                        },
                        new
                        {
                            Id = 7,
                            ColorsId = 7,
                            ProductId = 7
                        },
                        new
                        {
                            Id = 8,
                            ColorsId = 8,
                            ProductId = 8
                        },
                        new
                        {
                            Id = 9,
                            ColorsId = 9,
                            ProductId = 9
                        },
                        new
                        {
                            Id = 10,
                            ColorsId = 10,
                            ProductId = 10
                        },
                        new
                        {
                            Id = 11,
                            ColorsId = 11,
                            ProductId = 11
                        },
                        new
                        {
                            Id = 12,
                            ColorsId = 12,
                            ProductId = 12
                        },
                        new
                        {
                            Id = 13,
                            ColorsId = 13,
                            ProductId = 13
                        },
                        new
                        {
                            Id = 14,
                            ColorsId = 14,
                            ProductId = 14
                        },
                        new
                        {
                            Id = 15,
                            ColorsId = 1,
                            ProductId = 15
                        },
                        new
                        {
                            Id = 16,
                            ColorsId = 2,
                            ProductId = 16
                        },
                        new
                        {
                            Id = 17,
                            ColorsId = 3,
                            ProductId = 17
                        },
                        new
                        {
                            Id = 18,
                            ColorsId = 4,
                            ProductId = 18
                        },
                        new
                        {
                            Id = 19,
                            ColorsId = 5,
                            ProductId = 19
                        },
                        new
                        {
                            Id = 20,
                            ColorsId = 6,
                            ProductId = 20
                        },
                        new
                        {
                            Id = 21,
                            ColorsId = 7,
                            ProductId = 21
                        },
                        new
                        {
                            Id = 22,
                            ColorsId = 8,
                            ProductId = 22
                        },
                        new
                        {
                            Id = 23,
                            ColorsId = 9,
                            ProductId = 23
                        },
                        new
                        {
                            Id = 24,
                            ColorsId = 10,
                            ProductId = 24
                        },
                        new
                        {
                            Id = 25,
                            ColorsId = 11,
                            ProductId = 25
                        });
                });

            modelBuilder.Entity("eticaret.Domain.Core.Entities.Colors", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Colorvalue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Color");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Colorvalue = "#f0f8ff",
                            CreateBy = "System",
                            CreateDate = "11.08.2025 09:15:50",
                            IsDeleted = false,
                            Name = "Alice Blue"
                        },
                        new
                        {
                            Id = 2,
                            Colorvalue = "#faebd7",
                            CreateBy = "System",
                            CreateDate = "11.08.2025 09:15:50",
                            IsDeleted = false,
                            Name = "Antik Beyaz"
                        },
                        new
                        {
                            Id = 3,
                            Colorvalue = "#00ffff",
                            CreateBy = "System",
                            CreateDate = "11.08.2025 09:15:50",
                            IsDeleted = false,
                            Name = "Aqua"
                        },
                        new
                        {
                            Id = 4,
                            Colorvalue = "#7fffd4",
                            CreateBy = "System",
                            CreateDate = "11.08.2025 09:15:50",
                            IsDeleted = false,
                            Name = "Akuamarin"
                        },
                        new
                        {
                            Id = 5,
                            Colorvalue = "#f0ffff",
                            CreateBy = "System",
                            CreateDate = "11.08.2025 09:15:50",
                            IsDeleted = false,
                            Name = "Masmavi"
                        },
                        new
                        {
                            Id = 6,
                            Colorvalue = "#f5f5dc",
                            CreateBy = "System",
                            CreateDate = "11.08.2025 09:15:50",
                            IsDeleted = false,
                            Name = "Bej"
                        },
                        new
                        {
                            Id = 7,
                            Colorvalue = "#ffe4c4",
                            CreateBy = "System",
                            CreateDate = "11.08.2025 09:15:50",
                            IsDeleted = false,
                            Name = "BISQUE"
                        },
                        new
                        {
                            Id = 8,
                            Colorvalue = "#000000",
                            CreateBy = "System",
                            CreateDate = "11.08.2025 09:15:50",
                            IsDeleted = false,
                            Name = "Siyah"
                        },
                        new
                        {
                            Id = 9,
                            Colorvalue = "#ffebcd",
                            CreateBy = "System",
                            CreateDate = "11.08.2025 09:15:50",
                            IsDeleted = false,
                            Name = "Blanchedalmond"
                        },
                        new
                        {
                            Id = 10,
                            Colorvalue = "#0000ff",
                            CreateBy = "System",
                            CreateDate = "11.08.2025 09:15:50",
                            IsDeleted = false,
                            Name = "Mavi"
                        },
                        new
                        {
                            Id = 11,
                            Colorvalue = "#8a2be2",
                            CreateBy = "System",
                            CreateDate = "11.08.2025 09:15:50",
                            IsDeleted = false,
                            Name = "Mavi Menekşe"
                        },
                        new
                        {
                            Id = 12,
                            Colorvalue = "#a52a2a",
                            CreateBy = "System",
                            CreateDate = "11.08.2025 09:15:50",
                            IsDeleted = false,
                            Name = "Kahverengi"
                        },
                        new
                        {
                            Id = 13,
                            Colorvalue = "#deb887",
                            CreateBy = "System",
                            CreateDate = "11.08.2025 09:15:50",
                            IsDeleted = false,
                            Name = "Burlywood"
                        },
                        new
                        {
                            Id = 14,
                            Colorvalue = "#5f9ea0",
                            CreateBy = "System",
                            CreateDate = "11.08.2025 09:15:50",
                            IsDeleted = false,
                            Name = "CadetBlue"
                        });
                });

            modelBuilder.Entity("eticaret.Domain.Core.Entities.Comments", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CommentsId")
                        .HasColumnType("int");

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CommentsId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("eticaret.Domain.Core.Entities.Favorites", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId");

                    b.ToTable("Favorites");
                });

            modelBuilder.Entity("eticaret.Domain.Core.Entities.Image", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Flag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsShowcase")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("Image");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateBy = "Sistem",
                            CreateDate = "11.08.2025 09:15:50",
                            Flag = "1968234e-c68d-4261-8184-9eccd903f769",
                            IsDeleted = false,
                            IsShowcase = true,
                            Name = "1.jpg",
                            ProductId = 1
                        },
                        new
                        {
                            Id = 2,
                            CreateBy = "Sistem",
                            CreateDate = "11.08.2025 09:15:50",
                            Flag = "112858c7-3cc6-4e57-be48-fe578f4f1190",
                            IsDeleted = false,
                            IsShowcase = true,
                            Name = "back-1.jpg",
                            ProductId = 2
                        },
                        new
                        {
                            Id = 3,
                            CreateBy = "Sistem",
                            CreateDate = "11.08.2025 09:15:50",
                            Flag = "865e3e35-2d12-4aba-a9ce-17a26546c1a4",
                            IsDeleted = false,
                            IsShowcase = true,
                            Name = "2.jpg",
                            ProductId = 3
                        },
                        new
                        {
                            Id = 4,
                            CreateBy = "Sistem",
                            CreateDate = "11.08.2025 09:15:50",
                            Flag = "a5f75ae0-737d-4351-93cc-c23c62833c4e",
                            IsDeleted = false,
                            IsShowcase = true,
                            Name = "back-2.jpg",
                            ProductId = 4
                        },
                        new
                        {
                            Id = 5,
                            CreateBy = "Sistem",
                            CreateDate = "11.08.2025 09:15:50",
                            Flag = "cd9d162e-3280-420b-b2ee-3b1dccdb1477",
                            IsDeleted = false,
                            IsShowcase = true,
                            Name = "3.jpg",
                            ProductId = 5
                        },
                        new
                        {
                            Id = 6,
                            CreateBy = "Sistem",
                            CreateDate = "11.08.2025 09:15:50",
                            Flag = "f63af4a7-964b-41e2-a10c-8bdb6b424409",
                            IsDeleted = false,
                            IsShowcase = true,
                            Name = "back-3.jpg",
                            ProductId = 6
                        },
                        new
                        {
                            Id = 7,
                            CreateBy = "Sistem",
                            CreateDate = "11.08.2025 09:15:50",
                            Flag = "66d20e36-1a85-48ac-89bb-99a7b8ac03e6",
                            IsDeleted = false,
                            IsShowcase = true,
                            Name = "4.jpg",
                            ProductId = 7
                        },
                        new
                        {
                            Id = 8,
                            CreateBy = "Sistem",
                            CreateDate = "11.08.2025 09:15:50",
                            Flag = "6c4e5880-0351-43a5-a7a2-0c61cce08fb5",
                            IsDeleted = false,
                            IsShowcase = true,
                            Name = "back-4.jpg",
                            ProductId = 8
                        },
                        new
                        {
                            Id = 9,
                            CreateBy = "Sistem",
                            CreateDate = "11.08.2025 09:15:50",
                            Flag = "c035391b-1284-49bc-9636-4d7dcb9f9adc",
                            IsDeleted = false,
                            IsShowcase = true,
                            Name = "5.jpg",
                            ProductId = 9
                        },
                        new
                        {
                            Id = 10,
                            CreateBy = "Sistem",
                            CreateDate = "11.08.2025 09:15:50",
                            Flag = "9d0bc288-6694-4a58-b27e-f18554237ccc",
                            IsDeleted = false,
                            IsShowcase = true,
                            Name = "back-5.jpg",
                            ProductId = 10
                        },
                        new
                        {
                            Id = 11,
                            CreateBy = "Sistem",
                            CreateDate = "11.08.2025 09:15:50",
                            Flag = "e506e1c7-4939-47b9-9653-bcde9a113dcb",
                            IsDeleted = false,
                            IsShowcase = true,
                            Name = "6.jpg",
                            ProductId = 11
                        },
                        new
                        {
                            Id = 12,
                            CreateBy = "Sistem",
                            CreateDate = "11.08.2025 09:15:50",
                            Flag = "c6d0995c-497d-4ed0-beef-5869fa6f254c",
                            IsDeleted = false,
                            IsShowcase = true,
                            Name = "back-6.jpg",
                            ProductId = 12
                        },
                        new
                        {
                            Id = 13,
                            CreateBy = "Sistem",
                            CreateDate = "11.08.2025 09:15:50",
                            Flag = "85e9d318-86a2-4837-b3d7-8a5b12ad4b02",
                            IsDeleted = false,
                            IsShowcase = true,
                            Name = "7.jpg",
                            ProductId = 13
                        },
                        new
                        {
                            Id = 14,
                            CreateBy = "Sistem",
                            CreateDate = "11.08.2025 09:15:50",
                            Flag = "ba42998a-6e5d-43c4-b61d-8117512217ed",
                            IsDeleted = false,
                            IsShowcase = true,
                            Name = "back-7.jpg",
                            ProductId = 14
                        },
                        new
                        {
                            Id = 15,
                            CreateBy = "Sistem",
                            CreateDate = "11.08.2025 09:15:50",
                            Flag = "fdc33eec-1abd-4e2f-a8bd-caa903a421db",
                            IsDeleted = false,
                            IsShowcase = true,
                            Name = "8.jpg",
                            ProductId = 14
                        },
                        new
                        {
                            Id = 16,
                            CreateBy = "Sistem",
                            CreateDate = "11.08.2025 09:15:50",
                            Flag = "1cd3c8f8-3403-489f-a0a4-5b50a94d8a9d",
                            IsDeleted = false,
                            IsShowcase = true,
                            Name = "back-8.jpg",
                            ProductId = 16
                        },
                        new
                        {
                            Id = 17,
                            CreateBy = "Sistem",
                            CreateDate = "11.08.2025 09:15:50",
                            Flag = "503b1832-cf53-4fa1-b429-dad8202a0d06",
                            IsDeleted = false,
                            IsShowcase = true,
                            Name = "1.jpg",
                            ProductId = 17
                        },
                        new
                        {
                            Id = 18,
                            CreateBy = "Sistem",
                            CreateDate = "11.08.2025 09:15:50",
                            Flag = "88a286ad-6278-4b2e-83f2-dce723106b14",
                            IsDeleted = false,
                            IsShowcase = true,
                            Name = "back-1.jpg",
                            ProductId = 18
                        },
                        new
                        {
                            Id = 19,
                            CreateBy = "Sistem",
                            CreateDate = "11.08.2025 09:15:50",
                            Flag = "2cde1ff3-c333-4de4-96b8-7cf84571a3a9",
                            IsDeleted = false,
                            IsShowcase = true,
                            Name = "2.jpg",
                            ProductId = 19
                        },
                        new
                        {
                            Id = 20,
                            CreateBy = "Sistem",
                            CreateDate = "11.08.2025 09:15:50",
                            Flag = "211c4e70-07a8-477b-94de-d96f23f210f4",
                            IsDeleted = false,
                            IsShowcase = false,
                            Name = "back-2.jpg",
                            ProductId = 20
                        },
                        new
                        {
                            Id = 21,
                            CreateBy = "Sistem",
                            CreateDate = "11.08.2025 09:15:50",
                            Flag = "0fae48b9-429c-4c9c-9d1e-daea47ad5e40",
                            IsDeleted = false,
                            IsShowcase = true,
                            Name = "3.jpg",
                            ProductId = 21
                        },
                        new
                        {
                            Id = 22,
                            CreateBy = "Sistem",
                            CreateDate = "11.08.2025 09:15:50",
                            Flag = "9bddf67a-4355-461f-ba3f-d34ecd27fd04",
                            IsDeleted = false,
                            IsShowcase = false,
                            Name = "back-3.jpg",
                            ProductId = 22
                        },
                        new
                        {
                            Id = 23,
                            CreateBy = "Sistem",
                            CreateDate = "11.08.2025 09:15:50",
                            Flag = "db58852f-5d3b-44ca-b7d4-fe300a74aff3",
                            IsDeleted = false,
                            IsShowcase = true,
                            Name = "4.jpg",
                            ProductId = 23
                        },
                        new
                        {
                            Id = 24,
                            CreateBy = "Sistem",
                            CreateDate = "11.08.2025 09:15:50",
                            Flag = "d931cf26-f403-4bce-aeb9-390d32461413",
                            IsDeleted = false,
                            IsShowcase = false,
                            Name = "back-4.jpg",
                            ProductId = 24
                        },
                        new
                        {
                            Id = 25,
                            CreateBy = "Sistem",
                            CreateDate = "11.08.2025 09:15:50",
                            Flag = "715f6fc1-9029-4442-811b-745e94a40bce",
                            IsDeleted = false,
                            IsShowcase = false,
                            Name = "5.jpg",
                            ProductId = 25
                        });
                });

            modelBuilder.Entity("eticaret.Domain.Core.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Flag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("NewPrice")
                        .HasColumnType("money");

                    b.Property<decimal>("OldPrice")
                        .HasColumnType("money");

                    b.Property<int>("RatinAVG")
                        .HasColumnType("int");

                    b.Property<int>("SubCategoryId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SubCategoryId");

                    b.ToTable("Product");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateBy = "Sistem",
                            CreateDate = "11.08.2025 09:15:50",
                            Description = "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quas nihil laboriosam voluptatem ab consectetur dolorum id, soluta sunt at culpa commodi totam quod natus qui!",
                            Flag = "11cedb7f-846a-4ac5-bf97-b0148b5abf28",
                            IsDeleted = false,
                            Name = "Product 1",
                            NewPrice = 0m,
                            OldPrice = 340588m,
                            RatinAVG = 0,
                            SubCategoryId = 1
                        },
                        new
                        {
                            Id = 2,
                            CreateBy = "Sistem",
                            CreateDate = "11.08.2025 09:15:50",
                            Description = "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quas nihil laboriosam voluptatem ab consectetur dolorum id, soluta sunt at culpa commodi totam quod natus qui!",
                            Flag = "c4391c87-48c3-4301-89f6-bc8303979a57",
                            IsDeleted = false,
                            Name = "Product 2",
                            NewPrice = 0m,
                            OldPrice = 340588m,
                            RatinAVG = 0,
                            SubCategoryId = 1
                        },
                        new
                        {
                            Id = 3,
                            CreateBy = "Sistem",
                            CreateDate = "11.08.2025 09:15:50",
                            Description = "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quas nihil laboriosam voluptatem ab consectetur dolorum id, soluta sunt at culpa commodi totam quod natus qui!",
                            Flag = "3e5bcd52-ec5e-4bda-942e-0991722e19a5",
                            IsDeleted = false,
                            Name = "Product 3",
                            NewPrice = 0m,
                            OldPrice = 340588m,
                            RatinAVG = 0,
                            SubCategoryId = 1
                        },
                        new
                        {
                            Id = 4,
                            CreateBy = "Sistem",
                            CreateDate = "11.08.2025 09:15:50",
                            Description = "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quas nihil laboriosam voluptatem ab consectetur dolorum id, soluta sunt at culpa commodi totam quod natus qui!",
                            Flag = "68019a47-a81c-4bca-b5c6-dbe430e2f7ec",
                            IsDeleted = false,
                            Name = "Product 4",
                            NewPrice = 0m,
                            OldPrice = 340588m,
                            RatinAVG = 0,
                            SubCategoryId = 1
                        },
                        new
                        {
                            Id = 5,
                            CreateBy = "Sistem",
                            CreateDate = "11.08.2025 09:15:50",
                            Description = "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quas nihil laboriosam voluptatem ab consectetur dolorum id, soluta sunt at culpa commodi totam quod natus qui!",
                            Flag = "dfd13e2d-ad60-4ec4-b993-6859a47373b8",
                            IsDeleted = false,
                            Name = "Product 5",
                            NewPrice = 0m,
                            OldPrice = 340588m,
                            RatinAVG = 0,
                            SubCategoryId = 2
                        },
                        new
                        {
                            Id = 6,
                            CreateBy = "Sistem",
                            CreateDate = "11.08.2025 09:15:50",
                            Description = "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quas nihil laboriosam voluptatem ab consectetur dolorum id, soluta sunt at culpa commodi totam quod natus qui!",
                            Flag = "1c411803-60ef-4c28-8d04-082456dca7dd",
                            IsDeleted = false,
                            Name = "Product 6",
                            NewPrice = 0m,
                            OldPrice = 340588m,
                            RatinAVG = 0,
                            SubCategoryId = 2
                        },
                        new
                        {
                            Id = 7,
                            CreateBy = "Sistem",
                            CreateDate = "11.08.2025 09:15:50",
                            Description = "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quas nihil laboriosam voluptatem ab consectetur dolorum id, soluta sunt at culpa commodi totam quod natus qui!",
                            Flag = "b6c18ad1-f9da-4176-9869-c992ece0318c",
                            IsDeleted = false,
                            Name = "Product 7",
                            NewPrice = 0m,
                            OldPrice = 340588m,
                            RatinAVG = 0,
                            SubCategoryId = 2
                        },
                        new
                        {
                            Id = 8,
                            CreateBy = "Sistem",
                            CreateDate = "11.08.2025 09:15:50",
                            Description = "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quas nihil laboriosam voluptatem ab consectetur dolorum id, soluta sunt at culpa commodi totam quod natus qui!",
                            Flag = "290e197a-ac44-4885-a7e7-1339eaff5151",
                            IsDeleted = false,
                            Name = "Product 8",
                            NewPrice = 0m,
                            OldPrice = 340588m,
                            RatinAVG = 0,
                            SubCategoryId = 2
                        },
                        new
                        {
                            Id = 9,
                            CreateBy = "Sistem",
                            CreateDate = "11.08.2025 09:15:50",
                            Description = "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quas nihil laboriosam voluptatem ab consectetur dolorum id, soluta sunt at culpa commodi totam quod natus qui!",
                            Flag = "d6d65bb3-5c4a-40ff-b4ca-3a24b80ee7f1",
                            IsDeleted = false,
                            Name = "Product 9",
                            NewPrice = 0m,
                            OldPrice = 340588m,
                            RatinAVG = 0,
                            SubCategoryId = 3
                        },
                        new
                        {
                            Id = 10,
                            CreateBy = "Sistem",
                            CreateDate = "11.08.2025 09:15:50",
                            Description = "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quas nihil laboriosam voluptatem ab consectetur dolorum id, soluta sunt at culpa commodi totam quod natus qui!",
                            Flag = "08ea9170-d2fb-4743-a6df-195567e35475",
                            IsDeleted = false,
                            Name = "Product 10",
                            NewPrice = 0m,
                            OldPrice = 340588m,
                            RatinAVG = 0,
                            SubCategoryId = 3
                        },
                        new
                        {
                            Id = 11,
                            CreateBy = "Sistem",
                            CreateDate = "11.08.2025 09:15:50",
                            Description = "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quas nihil laboriosam voluptatem ab consectetur dolorum id, soluta sunt at culpa commodi totam quod natus qui!",
                            Flag = "63308a09-2b68-4321-8f11-bb34772a1269",
                            IsDeleted = false,
                            Name = "Product 11",
                            NewPrice = 0m,
                            OldPrice = 340588m,
                            RatinAVG = 0,
                            SubCategoryId = 3
                        },
                        new
                        {
                            Id = 12,
                            CreateBy = "Sistem",
                            CreateDate = "11.08.2025 09:15:50",
                            Description = "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quas nihil laboriosam voluptatem ab consectetur dolorum id, soluta sunt at culpa commodi totam quod natus qui!",
                            Flag = "caae9ea8-2269-48a7-bc67-e995692c3315",
                            IsDeleted = false,
                            Name = "Product 12",
                            NewPrice = 0m,
                            OldPrice = 340588m,
                            RatinAVG = 0,
                            SubCategoryId = 3
                        },
                        new
                        {
                            Id = 13,
                            CreateBy = "Sistem",
                            CreateDate = "11.08.2025 09:15:50",
                            Description = "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quas nihil laboriosam voluptatem ab consectetur dolorum id, soluta sunt at culpa commodi totam quod natus qui!",
                            Flag = "dd038741-0633-42c1-af09-4e98c02ee93e",
                            IsDeleted = false,
                            Name = "Product 13",
                            NewPrice = 0m,
                            OldPrice = 340588m,
                            RatinAVG = 0,
                            SubCategoryId = 4
                        },
                        new
                        {
                            Id = 14,
                            CreateBy = "Sistem",
                            CreateDate = "11.08.2025 09:15:50",
                            Description = "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quas nihil laboriosam voluptatem ab consectetur dolorum id, soluta sunt at culpa commodi totam quod natus qui!",
                            Flag = "98f24730-683b-45c8-ac6f-33180c21227a",
                            IsDeleted = false,
                            Name = "Product 14",
                            NewPrice = 0m,
                            OldPrice = 340588m,
                            RatinAVG = 0,
                            SubCategoryId = 4
                        },
                        new
                        {
                            Id = 15,
                            CreateBy = "Sistem",
                            CreateDate = "11.08.2025 09:15:50",
                            Description = "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quas nihil laboriosam voluptatem ab consectetur dolorum id, soluta sunt at culpa commodi totam quod natus qui!",
                            Flag = "c875e7e2-4a63-43b2-8b1c-8416bb186f79",
                            IsDeleted = false,
                            Name = "Product 15",
                            NewPrice = 0m,
                            OldPrice = 340588m,
                            RatinAVG = 0,
                            SubCategoryId = 4
                        },
                        new
                        {
                            Id = 16,
                            CreateBy = "Sistem",
                            CreateDate = "11.08.2025 09:15:50",
                            Description = "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quas nihil laboriosam voluptatem ab consectetur dolorum id, soluta sunt at culpa commodi totam quod natus qui!",
                            Flag = "df1ed8b2-14c6-4ea7-8f57-1bf3ed3b38fe",
                            IsDeleted = false,
                            Name = "Product 16",
                            NewPrice = 0m,
                            OldPrice = 340588m,
                            RatinAVG = 0,
                            SubCategoryId = 4
                        },
                        new
                        {
                            Id = 17,
                            CreateBy = "Sistem",
                            CreateDate = "11.08.2025 09:15:50",
                            Description = "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quas nihil laboriosam voluptatem ab consectetur dolorum id, soluta sunt at culpa commodi totam quod natus qui!",
                            Flag = "1afa27b1-c1ff-465b-aace-fce0dfedd917",
                            IsDeleted = false,
                            Name = "Product 17",
                            NewPrice = 0m,
                            OldPrice = 340588m,
                            RatinAVG = 0,
                            SubCategoryId = 5
                        },
                        new
                        {
                            Id = 18,
                            CreateBy = "Sistem",
                            CreateDate = "11.08.2025 09:15:50",
                            Description = "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quas nihil laboriosam voluptatem ab consectetur dolorum id, soluta sunt at culpa commodi totam quod natus qui!",
                            Flag = "5420fdf0-d769-4724-a5ac-cd02d84d0b8a",
                            IsDeleted = false,
                            Name = "Product 18",
                            NewPrice = 0m,
                            OldPrice = 340588m,
                            RatinAVG = 0,
                            SubCategoryId = 5
                        },
                        new
                        {
                            Id = 19,
                            CreateBy = "Sistem",
                            CreateDate = "11.08.2025 09:15:50",
                            Description = "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quas nihil laboriosam voluptatem ab consectetur dolorum id, soluta sunt at culpa commodi totam quod natus qui!",
                            Flag = "b4ba755f-5a96-493e-af9c-c7db1c6ec608",
                            IsDeleted = false,
                            Name = "Product 19",
                            NewPrice = 0m,
                            OldPrice = 340588m,
                            RatinAVG = 0,
                            SubCategoryId = 5
                        },
                        new
                        {
                            Id = 20,
                            CreateBy = "Sistem",
                            CreateDate = "11.08.2025 09:15:50",
                            Description = "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quas nihil laboriosam voluptatem ab consectetur dolorum id, soluta sunt at culpa commodi totam quod natus qui!",
                            Flag = "b2e83d2d-c068-421f-b04a-e34d3316bc56",
                            IsDeleted = false,
                            Name = "Product 20",
                            NewPrice = 0m,
                            OldPrice = 340588m,
                            RatinAVG = 0,
                            SubCategoryId = 5
                        },
                        new
                        {
                            Id = 21,
                            CreateBy = "Sistem",
                            CreateDate = "11.08.2025 09:15:50",
                            Description = "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quas nihil laboriosam voluptatem ab consectetur dolorum id, soluta sunt at culpa commodi totam quod natus qui!",
                            Flag = "a31bf637-a503-41e8-a53e-a8f5bd0dc81b",
                            IsDeleted = false,
                            Name = "Product 21",
                            NewPrice = 0m,
                            OldPrice = 340588m,
                            RatinAVG = 0,
                            SubCategoryId = 6
                        },
                        new
                        {
                            Id = 22,
                            CreateBy = "Sistem",
                            CreateDate = "11.08.2025 09:15:50",
                            Description = "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quas nihil laboriosam voluptatem ab consectetur dolorum id, soluta sunt at culpa commodi totam quod natus qui!",
                            Flag = "608d4a8c-656a-4913-b994-6df7d652e5df",
                            IsDeleted = false,
                            Name = "Product 22",
                            NewPrice = 0m,
                            OldPrice = 340588m,
                            RatinAVG = 0,
                            SubCategoryId = 6
                        },
                        new
                        {
                            Id = 23,
                            CreateBy = "Sistem",
                            CreateDate = "11.08.2025 09:15:50",
                            Description = "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quas nihil laboriosam voluptatem ab consectetur dolorum id, soluta sunt at culpa commodi totam quod natus qui!",
                            Flag = "a02e081b-6e67-4188-9fc8-f3bc5fe7cbcb",
                            IsDeleted = false,
                            Name = "Product 23",
                            NewPrice = 0m,
                            OldPrice = 340588m,
                            RatinAVG = 0,
                            SubCategoryId = 6
                        },
                        new
                        {
                            Id = 24,
                            CreateBy = "Sistem",
                            CreateDate = "11.08.2025 09:15:50",
                            Description = "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quas nihil laboriosam voluptatem ab consectetur dolorum id, soluta sunt at culpa commodi totam quod natus qui!",
                            Flag = "65eaea1c-8cae-4c3b-82e0-0c9d4490e3d4",
                            IsDeleted = false,
                            Name = "Product 24",
                            NewPrice = 0m,
                            OldPrice = 340588m,
                            RatinAVG = 0,
                            SubCategoryId = 6
                        },
                        new
                        {
                            Id = 25,
                            CreateBy = "Sistem",
                            CreateDate = "11.08.2025 09:15:50",
                            Description = "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quas nihil laboriosam voluptatem ab consectetur dolorum id, soluta sunt at culpa commodi totam quod natus qui!",
                            Flag = "0c7101aa-0e3a-4128-b842-6e755f2b3b25",
                            IsDeleted = false,
                            Name = "Product 25",
                            NewPrice = 0m,
                            OldPrice = 340588m,
                            RatinAVG = 0,
                            SubCategoryId = 6
                        });
                });

            modelBuilder.Entity("eticaret.Domain.Core.Entities.Ratin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Ratin");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Rating = 1
                        },
                        new
                        {
                            Id = 2,
                            Rating = 2
                        },
                        new
                        {
                            Id = 3,
                            Rating = 3
                        },
                        new
                        {
                            Id = 4,
                            Rating = 4
                        },
                        new
                        {
                            Id = 5,
                            Rating = 5
                        });
                });

            modelBuilder.Entity("eticaret.Domain.Core.Entities.RatinProduct", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("RatinId")
                        .HasColumnType("int");

                    b.HasKey("Id", "UserId");

                    b.HasIndex("ProductId");

                    b.HasIndex("RatinId");

                    b.HasIndex("UserId");

                    b.ToTable("RatinProduct");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            UserId = 1,
                            ProductId = 1,
                            RatinId = 1
                        },
                        new
                        {
                            Id = 2,
                            UserId = 1,
                            ProductId = 2,
                            RatinId = 2
                        },
                        new
                        {
                            Id = 3,
                            UserId = 1,
                            ProductId = 3,
                            RatinId = 3
                        },
                        new
                        {
                            Id = 4,
                            UserId = 1,
                            ProductId = 4,
                            RatinId = 4
                        },
                        new
                        {
                            Id = 5,
                            UserId = 1,
                            ProductId = 5,
                            RatinId = 5
                        });
                });

            modelBuilder.Entity("eticaret.Domain.Core.Entities.SubCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Flag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("SubCategory");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            CreateBy = "Sistem",
                            CreateDate = "11.08.2025 09:15:50",
                            Flag = "b37b1f2a-4ef8-4258-8e82-7b1e87b56a09",
                            IsDeleted = false,
                            Name = "Çanta"
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 2,
                            CreateBy = "Sistem",
                            CreateDate = "11.08.2025 09:15:50",
                            Flag = "06f810f9-6e78-4692-bba2-fc04b5f2691a",
                            IsDeleted = false,
                            Name = "Halı"
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 3,
                            CreateBy = "Sistem",
                            CreateDate = "11.08.2025 09:15:50",
                            Flag = "7822b31c-11e9-48ec-9c02-a3bb92a40cb2",
                            IsDeleted = false,
                            Name = "Aksesuar"
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 4,
                            CreateBy = "Sistem",
                            CreateDate = "11.08.2025 09:15:50",
                            Flag = "6a1ab3b3-67ad-4619-b48a-06fada2086ea",
                            IsDeleted = false,
                            Name = "Spor"
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 5,
                            CreateBy = "Sistem",
                            CreateDate = "11.08.2025 09:15:50",
                            Flag = "b9e605f7-ae2c-49aa-a4ba-e2cc1fdc52b9",
                            IsDeleted = false,
                            Name = "Giyim"
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 6,
                            CreateBy = "Sistem",
                            CreateDate = "11.08.2025 09:15:50",
                            Flag = "76407f95-8890-490c-9e5c-013debc133e8",
                            IsDeleted = false,
                            Name = "Outdoor"
                        });
                });

            modelBuilder.Entity("eticaret.Domain.Core.Entities.Subscribe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Subscribe");
                });

            modelBuilder.Entity("eticaret.Domain.Entities.About", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Flag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Slogan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Abouts");
                });

            modelBuilder.Entity("eticaret.Domain.Entities.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Flag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("eticaret.Domain.Entities.Users.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Flag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ConcurrencyStamp = "924B836D-B087-4D37-A52D-210ABD72CD96",
                            CreateBy = "Sistem",
                            CreateDate = "11.08.2025 09:15:50",
                            Flag = "46D16588-9420-4F85-A768-D21419075284",
                            IsDeleted = false,
                            Name = "superuser",
                            NormalizedName = "SUPERUSER"
                        },
                        new
                        {
                            Id = 2,
                            ConcurrencyStamp = "232D9C58-01CE-466A-90D0-EB7039C75465",
                            CreateBy = "Sistem",
                            CreateDate = "11.08.2025 09:15:50",
                            Flag = "70449BCD-A6DC-4601-867E-35AD80657B28",
                            IsDeleted = false,
                            Name = "admin",
                            NormalizedName = "ADMIN"
                        });
                });

            modelBuilder.Entity("eticaret.Domain.Entities.Users.RoleClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("eticaret.Domain.Entities.Users.UserApp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("Flag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SurName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "b5a47dc9-d091-4921-9e77-7c7ad34bfd6c",
                            CreateBy = "Sistem",
                            CreateDate = "11.08.2025 09:15:50",
                            Email = "stoy@windowslive.com",
                            EmailConfirmed = false,
                            Flag = "D90E65E6-9611-4B5F-9F24-BBD468398D51",
                            IsDeleted = false,
                            IsLocked = false,
                            LockoutEnabled = false,
                            Name = "Serkan",
                            NormalizedEmail = "STOY@WINDOWSLIVE.COM",
                            NormalizedUserName = "STOY",
                            PasswordHash = "AQAAAAIAAYagAAAAENbdk82pu9A4EP6sm8eawpwsJvZNcNWF9jdFSG6s2bw+6WRTNtI9Q+e9UL74K6V5Gw==",
                            PhoneNumber = "0(533) 656 30 95",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "63742240-5787-4E6A-8AE2-FE8BA5381630",
                            SurName = "TOY",
                            TC = "28301227926",
                            TwoFactorEnabled = false,
                            UserName = "stoy"
                        });
                });

            modelBuilder.Entity("eticaret.Domain.Entities.Users.UserClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Flag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("eticaret.Domain.Entities.Users.UserLogin", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("eticaret.Domain.Entities.Users.UserRole", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 1,
                            RoleId = 2
                        });
                });

            modelBuilder.Entity("eticaret.Domain.Entities.Users.UserToken", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Flag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("eticaret.Domain.Core.Entities.Basket", b =>
                {
                    b.HasOne("eticaret.Domain.Core.Entities.Product", "Product")
                        .WithMany("Baskets")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("eticaret.Domain.Entities.Users.UserApp", "User")
                        .WithMany("Baskets")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("eticaret.Domain.Core.Entities.BlogInfo", b =>
                {
                    b.HasOne("eticaret.Domain.Entities.Users.UserApp", "User")
                        .WithMany("BlogInfos")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("eticaret.Domain.Core.Entities.BlogInfoAndComment", b =>
                {
                    b.HasOne("eticaret.Domain.Core.Entities.BlogInfo", "BlogInfo")
                        .WithMany("BlogInfoAndComment")
                        .HasForeignKey("BlogInfoId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("eticaret.Domain.Core.Entities.Comments", "Comment")
                        .WithMany("BlogInfoAndComment")
                        .HasForeignKey("CommentId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("eticaret.Domain.Entities.Users.UserApp", "User")
                        .WithMany("BlogInfoAndComment")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("BlogInfo");

                    b.Navigation("Comment");

                    b.Navigation("User");
                });

            modelBuilder.Entity("eticaret.Domain.Core.Entities.ColorProduct", b =>
                {
                    b.HasOne("eticaret.Domain.Core.Entities.Colors", "Colors")
                        .WithMany("ColorProduct")
                        .HasForeignKey("ColorsId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("eticaret.Domain.Core.Entities.Product", "Product")
                        .WithMany("ColorProduct")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Colors");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("eticaret.Domain.Core.Entities.Comments", b =>
                {
                    b.HasOne("eticaret.Domain.Core.Entities.Comments", "Reply")
                        .WithMany("Replys")
                        .HasForeignKey("CommentsId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Reply");
                });

            modelBuilder.Entity("eticaret.Domain.Core.Entities.Favorites", b =>
                {
                    b.HasOne("eticaret.Domain.Core.Entities.Product", "Product")
                        .WithMany("Favorites")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("eticaret.Domain.Entities.Users.UserApp", "User")
                        .WithMany("Favorites")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("eticaret.Domain.Core.Entities.Image", b =>
                {
                    b.HasOne("eticaret.Domain.Core.Entities.Product", "Product")
                        .WithMany("Images")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("eticaret.Domain.Core.Entities.Product", b =>
                {
                    b.HasOne("eticaret.Domain.Core.Entities.SubCategory", "SubCategory")
                        .WithMany("Products")
                        .HasForeignKey("SubCategoryId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("SubCategory");
                });

            modelBuilder.Entity("eticaret.Domain.Core.Entities.RatinProduct", b =>
                {
                    b.HasOne("eticaret.Domain.Core.Entities.Product", "Product")
                        .WithMany("RatinProducts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("eticaret.Domain.Core.Entities.Ratin", "Ratin")
                        .WithMany("RatinProducts")
                        .HasForeignKey("RatinId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("eticaret.Domain.Entities.Users.UserApp", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Ratin");

                    b.Navigation("User");
                });

            modelBuilder.Entity("eticaret.Domain.Core.Entities.SubCategory", b =>
                {
                    b.HasOne("eticaret.Domain.Core.Entities.Category", "Category")
                        .WithMany("SubCategorys")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("eticaret.Domain.Entities.Address", b =>
                {
                    b.HasOne("eticaret.Domain.Entities.Users.UserApp", "User")
                        .WithMany("Address")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("eticaret.Domain.Entities.Users.RoleClaim", b =>
                {
                    b.HasOne("eticaret.Domain.Entities.Users.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("eticaret.Domain.Entities.Users.UserClaim", b =>
                {
                    b.HasOne("eticaret.Domain.Entities.Users.UserApp", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("eticaret.Domain.Entities.Users.UserLogin", b =>
                {
                    b.HasOne("eticaret.Domain.Entities.Users.UserApp", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("eticaret.Domain.Entities.Users.UserRole", b =>
                {
                    b.HasOne("eticaret.Domain.Entities.Users.Role", null)
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eticaret.Domain.Entities.Users.UserApp", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("eticaret.Domain.Entities.Users.UserToken", b =>
                {
                    b.HasOne("eticaret.Domain.Entities.Users.UserApp", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("eticaret.Domain.Core.Entities.BlogInfo", b =>
                {
                    b.Navigation("BlogInfoAndComment");
                });

            modelBuilder.Entity("eticaret.Domain.Core.Entities.Category", b =>
                {
                    b.Navigation("SubCategorys");
                });

            modelBuilder.Entity("eticaret.Domain.Core.Entities.Colors", b =>
                {
                    b.Navigation("ColorProduct");
                });

            modelBuilder.Entity("eticaret.Domain.Core.Entities.Comments", b =>
                {
                    b.Navigation("BlogInfoAndComment");

                    b.Navigation("Replys");
                });

            modelBuilder.Entity("eticaret.Domain.Core.Entities.Product", b =>
                {
                    b.Navigation("Baskets");

                    b.Navigation("ColorProduct");

                    b.Navigation("Favorites");

                    b.Navigation("Images");

                    b.Navigation("RatinProducts");
                });

            modelBuilder.Entity("eticaret.Domain.Core.Entities.Ratin", b =>
                {
                    b.Navigation("RatinProducts");
                });

            modelBuilder.Entity("eticaret.Domain.Core.Entities.SubCategory", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("eticaret.Domain.Entities.Users.Role", b =>
                {
                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("eticaret.Domain.Entities.Users.UserApp", b =>
                {
                    b.Navigation("Address");

                    b.Navigation("Baskets");

                    b.Navigation("BlogInfoAndComment");

                    b.Navigation("BlogInfos");

                    b.Navigation("Favorites");
                });
#pragma warning restore 612, 618
        }
    }
}
