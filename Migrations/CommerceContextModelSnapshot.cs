// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using eticaret.Domain.Database.Context;

#nullable disable

namespace eticaret.Migrations
{
    [DbContext(typeof(CommerceContext))]
    partial class CommerceContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("eticaret.Domain.Core.Entities.Basket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId");

                    b.ToTable("Baskets");
                });

            modelBuilder.Entity("eticaret.Domain.Core.Entities.BlogInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("BlogInfo");
                });

            modelBuilder.Entity("eticaret.Domain.Core.Entities.BlogInfoAndComment", b =>
                {
                    b.Property<int>("BlogInfoId")
                        .HasColumnType("int");

                    b.Property<int>("CommentId")
                        .HasColumnType("int");

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("BlogInfoId", "CommentId");

                    b.HasIndex("CommentId");

                    b.HasIndex("UserId");

                    b.ToTable("BlogInfoAndComment");
                });

            modelBuilder.Entity("eticaret.Domain.Core.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Flag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Category");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateBy = "Sistem",
                            CreateDate = "11.08.2025 09:23:08",
                            Flag = "9c320416-a2c6-479c-95f0-23a18f0bfea0",
                            IsDeleted = false,
                            Name = "Category 1"
                        },
                        new
                        {
                            Id = 2,
                            CreateBy = "Sistem",
                            CreateDate = "11.08.2025 09:23:08",
                            Flag = "cba80507-e7df-48bd-b9f6-71a8fe251293",
                            IsDeleted = false,
                            Name = "Category 2"
                        },
                        new
                        {
                            Id = 3,
                            CreateBy = "Sistem",
                            CreateDate = "11.08.2025 09:23:08",
                            Flag = "0534b80d-b1df-4cde-8c62-c6485225bf59",
                            IsDeleted = false,
                            Name = "Category 3"
                        },
                        new
                        {
                            Id = 4,
                            CreateBy = "Sistem",
                            CreateDate = "11.08.2025 09:23:08",
                            Flag = "5e4cea32-b575-4e06-a040-a308932f5911",
                            IsDeleted = false,
                            Name = "Category 4"
                        },
                        new
                        {
                            Id = 5,
                            CreateBy = "Sistem",
                            CreateDate = "11.08.2025 09:23:08",
                            Flag = "69d1c986-eb47-4889-822f-71d4ef9d65b4",
                            IsDeleted = false,
                            Name = "Category 5"
                        },
                        new
                        {
                            Id = 6,
                            CreateBy = "Sistem",
                            CreateDate = "11.08.2025 09:23:08",
                            Flag = "59dbd5f2-3bb9-489f-b430-32db890d28d2",
                            IsDeleted = false,
                            Name = "Category 6"
                        });
                });

            modelBuilder.Entity("eticaret.Domain.Core.Entities.ColorProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ColorsId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ColorsId");

                    b.HasIndex("ProductId");

                    b.ToTable("ColorProduct");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ColorsId = 1,
                            ProductId = 1
                        },
                        new
                        {
                            Id = 2,
                            ColorsId = 2,
                            ProductId = 2
                        },
                        new
                        {
                            Id = 3,
                            ColorsId = 3,
                            ProductId = 3
                        },
                        new
                        {
                            Id = 4,
                            ColorsId = 4,
                            ProductId = 4
                        },
                        new
                        {
                            Id = 5,
                            ColorsId = 5,
                            ProductId = 5
                        },
                        new
                        {
                            Id = 6,
                            ColorsId = 6,
                            ProductId = 6
                        },
                        new
                        {
                            Id = 7,
                            ColorsId = 7,
                            ProductId = 7
                        },
                        new
                        {
                            Id = 8,
                            ColorsId = 8,
                            ProductId = 8
                        },
                        new
                        {
                            Id = 9,
                            ColorsId = 9,
                            ProductId = 9
                        },
                        new
                        {
                            Id = 10,
                            ColorsId = 10,
                            ProductId = 10
                        },
                        new
                        {
                            Id = 11,
                            ColorsId = 11,
                            ProductId = 11
                        },
                        new
                        {
                            Id = 12,
                            ColorsId = 12,
                            ProductId = 12
                        },
                        new
                        {
                            Id = 13,
                            ColorsId = 13,
                            ProductId = 13
                        },
                        new
                        {
                            Id = 14,
                            ColorsId = 14,
                            ProductId = 14
                        },
                        new
                        {
                            Id = 15,
                            ColorsId = 1,
                            ProductId = 15
                        },
                        new
                        {
                            Id = 16,
                            ColorsId = 2,
                            ProductId = 16
                        },
                        new
                        {
                            Id = 17,
                            ColorsId = 3,
                            ProductId = 17
                        },
                        new
                        {
                            Id = 18,
                            ColorsId = 4,
                            ProductId = 18
                        },
                        new
                        {
                            Id = 19,
                            ColorsId = 5,
                            ProductId = 19
                        },
                        new
                        {
                            Id = 20,
                            ColorsId = 6,
                            ProductId = 20
                        },
                        new
                        {
                            Id = 21,
                            ColorsId = 7,
                            ProductId = 21
                        },
                        new
                        {
                            Id = 22,
                            ColorsId = 8,
                            ProductId = 22
                        },
                        new
                        {
                            Id = 23,
                            ColorsId = 9,
                            ProductId = 23
                        },
                        new
                        {
                            Id = 24,
                            ColorsId = 10,
                            ProductId = 24
                        },
                        new
                        {
                            Id = 25,
                            ColorsId = 11,
                            ProductId = 25
                        });
                });

            modelBuilder.Entity("eticaret.Domain.Core.Entities.Colors", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Colorvalue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Color");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Colorvalue = "#f0f8ff",
                            CreateBy = "System",
                            CreateDate = "11.08.2025 09:23:08",
                            IsDeleted = false,
                            Name = "Alice Blue"
                        },
                        new
                        {
                            Id = 2,
                            Colorvalue = "#faebd7",
                            CreateBy = "System",
                            CreateDate = "11.08.2025 09:23:08",
                            IsDeleted = false,
                            Name = "Antik Beyaz"
                        },
                        new
                        {
                            Id = 3,
                            Colorvalue = "#00ffff",
                            CreateBy = "System",
                            CreateDate = "11.08.2025 09:23:08",
                            IsDeleted = false,
                            Name = "Aqua"
                        },
                        new
                        {
                            Id = 4,
                            Colorvalue = "#7fffd4",
                            CreateBy = "System",
                            CreateDate = "11.08.2025 09:23:08",
                            IsDeleted = false,
                            Name = "Akuamarin"
                        },
                        new
                        {
                            Id = 5,
                            Colorvalue = "#f0ffff",
                            CreateBy = "System",
                            CreateDate = "11.08.2025 09:23:08",
                            IsDeleted = false,
                            Name = "Masmavi"
                        },
                        new
                        {
                            Id = 6,
                            Colorvalue = "#f5f5dc",
                            CreateBy = "System",
                            CreateDate = "11.08.2025 09:23:08",
                            IsDeleted = false,
                            Name = "Bej"
                        },
                        new
                        {
                            Id = 7,
                            Colorvalue = "#ffe4c4",
                            CreateBy = "System",
                            CreateDate = "11.08.2025 09:23:08",
                            IsDeleted = false,
                            Name = "BISQUE"
                        },
                        new
                        {
                            Id = 8,
                            Colorvalue = "#000000",
                            CreateBy = "System",
                            CreateDate = "11.08.2025 09:23:08",
                            IsDeleted = false,
                            Name = "Siyah"
                        },
                        new
                        {
                            Id = 9,
                            Colorvalue = "#ffebcd",
                            CreateBy = "System",
                            CreateDate = "11.08.2025 09:23:08",
                            IsDeleted = false,
                            Name = "Blanchedalmond"
                        },
                        new
                        {
                            Id = 10,
                            Colorvalue = "#0000ff",
                            CreateBy = "System",
                            CreateDate = "11.08.2025 09:23:08",
                            IsDeleted = false,
                            Name = "Mavi"
                        },
                        new
                        {
                            Id = 11,
                            Colorvalue = "#8a2be2",
                            CreateBy = "System",
                            CreateDate = "11.08.2025 09:23:08",
                            IsDeleted = false,
                            Name = "Mavi Menekşe"
                        },
                        new
                        {
                            Id = 12,
                            Colorvalue = "#a52a2a",
                            CreateBy = "System",
                            CreateDate = "11.08.2025 09:23:08",
                            IsDeleted = false,
                            Name = "Kahverengi"
                        },
                        new
                        {
                            Id = 13,
                            Colorvalue = "#deb887",
                            CreateBy = "System",
                            CreateDate = "11.08.2025 09:23:08",
                            IsDeleted = false,
                            Name = "Burlywood"
                        },
                        new
                        {
                            Id = 14,
                            Colorvalue = "#5f9ea0",
                            CreateBy = "System",
                            CreateDate = "11.08.2025 09:23:08",
                            IsDeleted = false,
                            Name = "CadetBlue"
                        });
                });

            modelBuilder.Entity("eticaret.Domain.Core.Entities.Comments", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CommentsId")
                        .HasColumnType("int");

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CommentsId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("eticaret.Domain.Core.Entities.Favorites", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId");

                    b.ToTable("Favorites");
                });

            modelBuilder.Entity("eticaret.Domain.Core.Entities.Image", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Flag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsShowcase")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("Image");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateBy = "Sistem",
                            CreateDate = "11.08.2025 09:23:08",
                            Flag = "59420984-c652-47ef-bbdb-aaa06e26eb3c",
                            IsDeleted = false,
                            IsShowcase = true,
                            Name = "1.jpg",
                            ProductId = 1
                        },
                        new
                        {
                            Id = 2,
                            CreateBy = "Sistem",
                            CreateDate = "11.08.2025 09:23:08",
                            Flag = "6fe5c7a9-c574-458f-afa2-f24367ea8b9b",
                            IsDeleted = false,
                            IsShowcase = true,
                            Name = "back-1.jpg",
                            ProductId = 2
                        },
                        new
                        {
                            Id = 3,
                            CreateBy = "Sistem",
                            CreateDate = "11.08.2025 09:23:08",
                            Flag = "e82c447c-a763-4aaa-b435-9063218a62f5",
                            IsDeleted = false,
                            IsShowcase = true,
                            Name = "2.jpg",
                            ProductId = 3
                        },
                        new
                        {
                            Id = 4,
                            CreateBy = "Sistem",
                            CreateDate = "11.08.2025 09:23:08",
                            Flag = "0411b692-c7e5-4703-b49c-25587cd8ec6e",
                            IsDeleted = false,
                            IsShowcase = true,
                            Name = "back-2.jpg",
                            ProductId = 4
                        },
                        new
                        {
                            Id = 5,
                            CreateBy = "Sistem",
                            CreateDate = "11.08.2025 09:23:08",
                            Flag = "7e1b3b73-26db-4354-914c-cf8d507e6786",
                            IsDeleted = false,
                            IsShowcase = true,
                            Name = "3.jpg",
                            ProductId = 5
                        },
                        new
                        {
                            Id = 6,
                            CreateBy = "Sistem",
                            CreateDate = "11.08.2025 09:23:08",
                            Flag = "c2bd24ff-dfd0-4cd5-a350-4e7f54b1c04d",
                            IsDeleted = false,
                            IsShowcase = true,
                            Name = "back-3.jpg",
                            ProductId = 6
                        },
                        new
                        {
                            Id = 7,
                            CreateBy = "Sistem",
                            CreateDate = "11.08.2025 09:23:08",
                            Flag = "c5348416-1ab1-4b18-91b2-9eb70511c582",
                            IsDeleted = false,
                            IsShowcase = true,
                            Name = "4.jpg",
                            ProductId = 7
                        },
                        new
                        {
                            Id = 8,
                            CreateBy = "Sistem",
                            CreateDate = "11.08.2025 09:23:08",
                            Flag = "807dff3f-8061-4251-a236-91081963b172",
                            IsDeleted = false,
                            IsShowcase = true,
                            Name = "back-4.jpg",
                            ProductId = 8
                        },
                        new
                        {
                            Id = 9,
                            CreateBy = "Sistem",
                            CreateDate = "11.08.2025 09:23:08",
                            Flag = "149c3809-1ead-4138-b588-8bfc78c75786",
                            IsDeleted = false,
                            IsShowcase = true,
                            Name = "5.jpg",
                            ProductId = 9
                        },
                        new
                        {
                            Id = 10,
                            CreateBy = "Sistem",
                            CreateDate = "11.08.2025 09:23:08",
                            Flag = "54ac4b71-1b7b-4db0-b075-b942b97fdcd3",
                            IsDeleted = false,
                            IsShowcase = true,
                            Name = "back-5.jpg",
                            ProductId = 10
                        },
                        new
                        {
                            Id = 11,
                            CreateBy = "Sistem",
                            CreateDate = "11.08.2025 09:23:08",
                            Flag = "d83f0f17-ea99-4500-b6f7-fa7bed5ceb86",
                            IsDeleted = false,
                            IsShowcase = true,
                            Name = "6.jpg",
                            ProductId = 11
                        },
                        new
                        {
                            Id = 12,
                            CreateBy = "Sistem",
                            CreateDate = "11.08.2025 09:23:08",
                            Flag = "66c27148-82b9-4c88-8b37-9f8a0ca76a29",
                            IsDeleted = false,
                            IsShowcase = true,
                            Name = "back-6.jpg",
                            ProductId = 12
                        },
                        new
                        {
                            Id = 13,
                            CreateBy = "Sistem",
                            CreateDate = "11.08.2025 09:23:08",
                            Flag = "932c6541-6a5c-4c29-ad0b-285560d7ca0c",
                            IsDeleted = false,
                            IsShowcase = true,
                            Name = "7.jpg",
                            ProductId = 13
                        },
                        new
                        {
                            Id = 14,
                            CreateBy = "Sistem",
                            CreateDate = "11.08.2025 09:23:08",
                            Flag = "91f1f04c-3191-4d53-adaf-b86cd7de3a66",
                            IsDeleted = false,
                            IsShowcase = true,
                            Name = "back-7.jpg",
                            ProductId = 14
                        },
                        new
                        {
                            Id = 15,
                            CreateBy = "Sistem",
                            CreateDate = "11.08.2025 09:23:08",
                            Flag = "67f2532c-00b2-4daf-98e3-7dfb431671ee",
                            IsDeleted = false,
                            IsShowcase = true,
                            Name = "8.jpg",
                            ProductId = 14
                        },
                        new
                        {
                            Id = 16,
                            CreateBy = "Sistem",
                            CreateDate = "11.08.2025 09:23:08",
                            Flag = "c8854a50-d089-46c4-8ef4-3e96ed35a8d3",
                            IsDeleted = false,
                            IsShowcase = true,
                            Name = "back-8.jpg",
                            ProductId = 16
                        },
                        new
                        {
                            Id = 17,
                            CreateBy = "Sistem",
                            CreateDate = "11.08.2025 09:23:08",
                            Flag = "91c27f5f-d098-4478-8ae2-ae47126bbf7d",
                            IsDeleted = false,
                            IsShowcase = true,
                            Name = "1.jpg",
                            ProductId = 17
                        },
                        new
                        {
                            Id = 18,
                            CreateBy = "Sistem",
                            CreateDate = "11.08.2025 09:23:08",
                            Flag = "661855b9-6897-48d9-a1d8-b3e5941607d9",
                            IsDeleted = false,
                            IsShowcase = true,
                            Name = "back-1.jpg",
                            ProductId = 18
                        },
                        new
                        {
                            Id = 19,
                            CreateBy = "Sistem",
                            CreateDate = "11.08.2025 09:23:08",
                            Flag = "f24fce2c-c2c0-4e56-b792-23aa2378ed70",
                            IsDeleted = false,
                            IsShowcase = true,
                            Name = "2.jpg",
                            ProductId = 19
                        },
                        new
                        {
                            Id = 20,
                            CreateBy = "Sistem",
                            CreateDate = "11.08.2025 09:23:08",
                            Flag = "e43c1688-3b11-4571-9b67-86b2c0cb73b1",
                            IsDeleted = false,
                            IsShowcase = false,
                            Name = "back-2.jpg",
                            ProductId = 20
                        },
                        new
                        {
                            Id = 21,
                            CreateBy = "Sistem",
                            CreateDate = "11.08.2025 09:23:08",
                            Flag = "4c4d3de1-48de-45e4-8148-6973a0f762d2",
                            IsDeleted = false,
                            IsShowcase = true,
                            Name = "3.jpg",
                            ProductId = 21
                        },
                        new
                        {
                            Id = 22,
                            CreateBy = "Sistem",
                            CreateDate = "11.08.2025 09:23:08",
                            Flag = "37edb853-7006-4dc6-afb9-76c85d833cd8",
                            IsDeleted = false,
                            IsShowcase = false,
                            Name = "back-3.jpg",
                            ProductId = 22
                        },
                        new
                        {
                            Id = 23,
                            CreateBy = "Sistem",
                            CreateDate = "11.08.2025 09:23:08",
                            Flag = "077cb992-7bba-4606-960e-172d61dcaf62",
                            IsDeleted = false,
                            IsShowcase = true,
                            Name = "4.jpg",
                            ProductId = 23
                        },
                        new
                        {
                            Id = 24,
                            CreateBy = "Sistem",
                            CreateDate = "11.08.2025 09:23:08",
                            Flag = "456e7956-0571-44aa-aadd-c6fb1a2f2d7a",
                            IsDeleted = false,
                            IsShowcase = false,
                            Name = "back-4.jpg",
                            ProductId = 24
                        },
                        new
                        {
                            Id = 25,
                            CreateBy = "Sistem",
                            CreateDate = "11.08.2025 09:23:08",
                            Flag = "9d7a260e-dcbc-49e0-8e1c-659c2704307b",
                            IsDeleted = false,
                            IsShowcase = false,
                            Name = "5.jpg",
                            ProductId = 25
                        });
                });

            modelBuilder.Entity("eticaret.Domain.Core.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Flag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("NewPrice")
                        .HasColumnType("money");

                    b.Property<decimal>("OldPrice")
                        .HasColumnType("money");

                    b.Property<int>("RatinAVG")
                        .HasColumnType("int");

                    b.Property<int>("SubCategoryId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SubCategoryId");

                    b.ToTable("Product");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateBy = "Sistem",
                            CreateDate = "11.08.2025 09:23:08",
                            Description = "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quas nihil laboriosam voluptatem ab consectetur dolorum id, soluta sunt at culpa commodi totam quod natus qui!",
                            Flag = "9d4e62df-9175-4984-960d-80a0812c8a6a",
                            IsDeleted = false,
                            Name = "Product 1",
                            NewPrice = 0m,
                            OldPrice = 340588m,
                            RatinAVG = 0,
                            SubCategoryId = 1
                        },
                        new
                        {
                            Id = 2,
                            CreateBy = "Sistem",
                            CreateDate = "11.08.2025 09:23:08",
                            Description = "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quas nihil laboriosam voluptatem ab consectetur dolorum id, soluta sunt at culpa commodi totam quod natus qui!",
                            Flag = "0bc7635f-2070-4d0c-b282-115b454fca66",
                            IsDeleted = false,
                            Name = "Product 2",
                            NewPrice = 0m,
                            OldPrice = 340588m,
                            RatinAVG = 0,
                            SubCategoryId = 1
                        },
                        new
                        {
                            Id = 3,
                            CreateBy = "Sistem",
                            CreateDate = "11.08.2025 09:23:08",
                            Description = "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quas nihil laboriosam voluptatem ab consectetur dolorum id, soluta sunt at culpa commodi totam quod natus qui!",
                            Flag = "d2702462-afeb-4c47-9066-26c473764430",
                            IsDeleted = false,
                            Name = "Product 3",
                            NewPrice = 0m,
                            OldPrice = 340588m,
                            RatinAVG = 0,
                            SubCategoryId = 1
                        },
                        new
                        {
                            Id = 4,
                            CreateBy = "Sistem",
                            CreateDate = "11.08.2025 09:23:08",
                            Description = "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quas nihil laboriosam voluptatem ab consectetur dolorum id, soluta sunt at culpa commodi totam quod natus qui!",
                            Flag = "dcad7001-09b4-42ac-a90b-5d7c8698dc78",
                            IsDeleted = false,
                            Name = "Product 4",
                            NewPrice = 0m,
                            OldPrice = 340588m,
                            RatinAVG = 0,
                            SubCategoryId = 1
                        },
                        new
                        {
                            Id = 5,
                            CreateBy = "Sistem",
                            CreateDate = "11.08.2025 09:23:08",
                            Description = "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quas nihil laboriosam voluptatem ab consectetur dolorum id, soluta sunt at culpa commodi totam quod natus qui!",
                            Flag = "c46dc62e-87d9-41b0-8789-f24e820c6f6f",
                            IsDeleted = false,
                            Name = "Product 5",
                            NewPrice = 0m,
                            OldPrice = 340588m,
                            RatinAVG = 0,
                            SubCategoryId = 2
                        },
                        new
                        {
                            Id = 6,
                            CreateBy = "Sistem",
                            CreateDate = "11.08.2025 09:23:08",
                            Description = "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quas nihil laboriosam voluptatem ab consectetur dolorum id, soluta sunt at culpa commodi totam quod natus qui!",
                            Flag = "d2f5d365-28a5-47ec-889e-5b8137349e84",
                            IsDeleted = false,
                            Name = "Product 6",
                            NewPrice = 0m,
                            OldPrice = 340588m,
                            RatinAVG = 0,
                            SubCategoryId = 2
                        },
                        new
                        {
                            Id = 7,
                            CreateBy = "Sistem",
                            CreateDate = "11.08.2025 09:23:08",
                            Description = "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quas nihil laboriosam voluptatem ab consectetur dolorum id, soluta sunt at culpa commodi totam quod natus qui!",
                            Flag = "4120b2b0-b4ae-436b-99d4-be53aa40939f",
                            IsDeleted = false,
                            Name = "Product 7",
                            NewPrice = 0m,
                            OldPrice = 340588m,
                            RatinAVG = 0,
                            SubCategoryId = 2
                        },
                        new
                        {
                            Id = 8,
                            CreateBy = "Sistem",
                            CreateDate = "11.08.2025 09:23:08",
                            Description = "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quas nihil laboriosam voluptatem ab consectetur dolorum id, soluta sunt at culpa commodi totam quod natus qui!",
                            Flag = "80680cbd-f330-413f-8e09-8453090b1ce5",
                            IsDeleted = false,
                            Name = "Product 8",
                            NewPrice = 0m,
                            OldPrice = 340588m,
                            RatinAVG = 0,
                            SubCategoryId = 2
                        },
                        new
                        {
                            Id = 9,
                            CreateBy = "Sistem",
                            CreateDate = "11.08.2025 09:23:08",
                            Description = "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quas nihil laboriosam voluptatem ab consectetur dolorum id, soluta sunt at culpa commodi totam quod natus qui!",
                            Flag = "0585a39b-e66e-4db9-8983-b815b12e19e7",
                            IsDeleted = false,
                            Name = "Product 9",
                            NewPrice = 0m,
                            OldPrice = 340588m,
                            RatinAVG = 0,
                            SubCategoryId = 3
                        },
                        new
                        {
                            Id = 10,
                            CreateBy = "Sistem",
                            CreateDate = "11.08.2025 09:23:08",
                            Description = "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quas nihil laboriosam voluptatem ab consectetur dolorum id, soluta sunt at culpa commodi totam quod natus qui!",
                            Flag = "ff53177a-44a6-4543-8848-b9aa5c56fb4d",
                            IsDeleted = false,
                            Name = "Product 10",
                            NewPrice = 0m,
                            OldPrice = 340588m,
                            RatinAVG = 0,
                            SubCategoryId = 3
                        },
                        new
                        {
                            Id = 11,
                            CreateBy = "Sistem",
                            CreateDate = "11.08.2025 09:23:08",
                            Description = "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quas nihil laboriosam voluptatem ab consectetur dolorum id, soluta sunt at culpa commodi totam quod natus qui!",
                            Flag = "188c646a-b883-4699-bfcb-adeda4d82cb9",
                            IsDeleted = false,
                            Name = "Product 11",
                            NewPrice = 0m,
                            OldPrice = 340588m,
                            RatinAVG = 0,
                            SubCategoryId = 3
                        },
                        new
                        {
                            Id = 12,
                            CreateBy = "Sistem",
                            CreateDate = "11.08.2025 09:23:08",
                            Description = "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quas nihil laboriosam voluptatem ab consectetur dolorum id, soluta sunt at culpa commodi totam quod natus qui!",
                            Flag = "212fd48a-5bf5-42fa-89b7-b3fb7d3a6fe4",
                            IsDeleted = false,
                            Name = "Product 12",
                            NewPrice = 0m,
                            OldPrice = 340588m,
                            RatinAVG = 0,
                            SubCategoryId = 3
                        },
                        new
                        {
                            Id = 13,
                            CreateBy = "Sistem",
                            CreateDate = "11.08.2025 09:23:08",
                            Description = "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quas nihil laboriosam voluptatem ab consectetur dolorum id, soluta sunt at culpa commodi totam quod natus qui!",
                            Flag = "8a9d2d8e-4da0-4a37-8c14-690aa3798517",
                            IsDeleted = false,
                            Name = "Product 13",
                            NewPrice = 0m,
                            OldPrice = 340588m,
                            RatinAVG = 0,
                            SubCategoryId = 4
                        },
                        new
                        {
                            Id = 14,
                            CreateBy = "Sistem",
                            CreateDate = "11.08.2025 09:23:08",
                            Description = "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quas nihil laboriosam voluptatem ab consectetur dolorum id, soluta sunt at culpa commodi totam quod natus qui!",
                            Flag = "fd2be4ca-5521-4242-8ca7-bb9caadc50d0",
                            IsDeleted = false,
                            Name = "Product 14",
                            NewPrice = 0m,
                            OldPrice = 340588m,
                            RatinAVG = 0,
                            SubCategoryId = 4
                        },
                        new
                        {
                            Id = 15,
                            CreateBy = "Sistem",
                            CreateDate = "11.08.2025 09:23:08",
                            Description = "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quas nihil laboriosam voluptatem ab consectetur dolorum id, soluta sunt at culpa commodi totam quod natus qui!",
                            Flag = "65f88da2-85b0-4dce-a898-6a093b244b61",
                            IsDeleted = false,
                            Name = "Product 15",
                            NewPrice = 0m,
                            OldPrice = 340588m,
                            RatinAVG = 0,
                            SubCategoryId = 4
                        },
                        new
                        {
                            Id = 16,
                            CreateBy = "Sistem",
                            CreateDate = "11.08.2025 09:23:08",
                            Description = "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quas nihil laboriosam voluptatem ab consectetur dolorum id, soluta sunt at culpa commodi totam quod natus qui!",
                            Flag = "331724dd-7f43-4917-97f3-25ceb000ca59",
                            IsDeleted = false,
                            Name = "Product 16",
                            NewPrice = 0m,
                            OldPrice = 340588m,
                            RatinAVG = 0,
                            SubCategoryId = 4
                        },
                        new
                        {
                            Id = 17,
                            CreateBy = "Sistem",
                            CreateDate = "11.08.2025 09:23:08",
                            Description = "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quas nihil laboriosam voluptatem ab consectetur dolorum id, soluta sunt at culpa commodi totam quod natus qui!",
                            Flag = "65769b8f-e572-44be-ad47-a1054de245ed",
                            IsDeleted = false,
                            Name = "Product 17",
                            NewPrice = 0m,
                            OldPrice = 340588m,
                            RatinAVG = 0,
                            SubCategoryId = 5
                        },
                        new
                        {
                            Id = 18,
                            CreateBy = "Sistem",
                            CreateDate = "11.08.2025 09:23:08",
                            Description = "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quas nihil laboriosam voluptatem ab consectetur dolorum id, soluta sunt at culpa commodi totam quod natus qui!",
                            Flag = "8f8bcb67-412b-4a4c-a7be-1f200a8d491a",
                            IsDeleted = false,
                            Name = "Product 18",
                            NewPrice = 0m,
                            OldPrice = 340588m,
                            RatinAVG = 0,
                            SubCategoryId = 5
                        },
                        new
                        {
                            Id = 19,
                            CreateBy = "Sistem",
                            CreateDate = "11.08.2025 09:23:08",
                            Description = "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quas nihil laboriosam voluptatem ab consectetur dolorum id, soluta sunt at culpa commodi totam quod natus qui!",
                            Flag = "d5b1637f-00f3-4c19-b270-aa80f99fbe8b",
                            IsDeleted = false,
                            Name = "Product 19",
                            NewPrice = 0m,
                            OldPrice = 340588m,
                            RatinAVG = 0,
                            SubCategoryId = 5
                        },
                        new
                        {
                            Id = 20,
                            CreateBy = "Sistem",
                            CreateDate = "11.08.2025 09:23:08",
                            Description = "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quas nihil laboriosam voluptatem ab consectetur dolorum id, soluta sunt at culpa commodi totam quod natus qui!",
                            Flag = "82d28afe-33e8-411d-a1bb-6f3536c7f668",
                            IsDeleted = false,
                            Name = "Product 20",
                            NewPrice = 0m,
                            OldPrice = 340588m,
                            RatinAVG = 0,
                            SubCategoryId = 5
                        },
                        new
                        {
                            Id = 21,
                            CreateBy = "Sistem",
                            CreateDate = "11.08.2025 09:23:08",
                            Description = "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quas nihil laboriosam voluptatem ab consectetur dolorum id, soluta sunt at culpa commodi totam quod natus qui!",
                            Flag = "69fbd8c3-33cb-4e61-bbd9-b6be97b8977f",
                            IsDeleted = false,
                            Name = "Product 21",
                            NewPrice = 0m,
                            OldPrice = 340588m,
                            RatinAVG = 0,
                            SubCategoryId = 6
                        },
                        new
                        {
                            Id = 22,
                            CreateBy = "Sistem",
                            CreateDate = "11.08.2025 09:23:08",
                            Description = "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quas nihil laboriosam voluptatem ab consectetur dolorum id, soluta sunt at culpa commodi totam quod natus qui!",
                            Flag = "251be3c4-ad17-404c-b63f-6881f9a9a934",
                            IsDeleted = false,
                            Name = "Product 22",
                            NewPrice = 0m,
                            OldPrice = 340588m,
                            RatinAVG = 0,
                            SubCategoryId = 6
                        },
                        new
                        {
                            Id = 23,
                            CreateBy = "Sistem",
                            CreateDate = "11.08.2025 09:23:08",
                            Description = "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quas nihil laboriosam voluptatem ab consectetur dolorum id, soluta sunt at culpa commodi totam quod natus qui!",
                            Flag = "0df04428-d1eb-457f-a223-ee4c7c3b43b1",
                            IsDeleted = false,
                            Name = "Product 23",
                            NewPrice = 0m,
                            OldPrice = 340588m,
                            RatinAVG = 0,
                            SubCategoryId = 6
                        },
                        new
                        {
                            Id = 24,
                            CreateBy = "Sistem",
                            CreateDate = "11.08.2025 09:23:08",
                            Description = "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quas nihil laboriosam voluptatem ab consectetur dolorum id, soluta sunt at culpa commodi totam quod natus qui!",
                            Flag = "defd9c4b-ed35-4703-b845-c940631baf16",
                            IsDeleted = false,
                            Name = "Product 24",
                            NewPrice = 0m,
                            OldPrice = 340588m,
                            RatinAVG = 0,
                            SubCategoryId = 6
                        },
                        new
                        {
                            Id = 25,
                            CreateBy = "Sistem",
                            CreateDate = "11.08.2025 09:23:08",
                            Description = "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quas nihil laboriosam voluptatem ab consectetur dolorum id, soluta sunt at culpa commodi totam quod natus qui!",
                            Flag = "9de27e5c-35ae-47aa-ba63-46842fc85242",
                            IsDeleted = false,
                            Name = "Product 25",
                            NewPrice = 0m,
                            OldPrice = 340588m,
                            RatinAVG = 0,
                            SubCategoryId = 6
                        });
                });

            modelBuilder.Entity("eticaret.Domain.Core.Entities.Ratin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Ratin");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Rating = 1
                        },
                        new
                        {
                            Id = 2,
                            Rating = 2
                        },
                        new
                        {
                            Id = 3,
                            Rating = 3
                        },
                        new
                        {
                            Id = 4,
                            Rating = 4
                        },
                        new
                        {
                            Id = 5,
                            Rating = 5
                        });
                });

            modelBuilder.Entity("eticaret.Domain.Core.Entities.RatinProduct", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("RatinId")
                        .HasColumnType("int");

                    b.HasKey("Id", "UserId");

                    b.HasIndex("ProductId");

                    b.HasIndex("RatinId");

                    b.HasIndex("UserId");

                    b.ToTable("RatinProduct");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            UserId = 1,
                            ProductId = 1,
                            RatinId = 1
                        },
                        new
                        {
                            Id = 2,
                            UserId = 1,
                            ProductId = 2,
                            RatinId = 2
                        },
                        new
                        {
                            Id = 3,
                            UserId = 1,
                            ProductId = 3,
                            RatinId = 3
                        },
                        new
                        {
                            Id = 4,
                            UserId = 1,
                            ProductId = 4,
                            RatinId = 4
                        },
                        new
                        {
                            Id = 5,
                            UserId = 1,
                            ProductId = 5,
                            RatinId = 5
                        });
                });

            modelBuilder.Entity("eticaret.Domain.Core.Entities.SubCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Flag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("SubCategory");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            CreateBy = "Sistem",
                            CreateDate = "11.08.2025 09:23:08",
                            Flag = "5a2806be-ec85-4039-838f-359f8de2f60e",
                            IsDeleted = false,
                            Name = "Çanta"
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 2,
                            CreateBy = "Sistem",
                            CreateDate = "11.08.2025 09:23:08",
                            Flag = "b11d8362-cb98-48c7-8357-9aae0bebdefb",
                            IsDeleted = false,
                            Name = "Halı"
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 3,
                            CreateBy = "Sistem",
                            CreateDate = "11.08.2025 09:23:08",
                            Flag = "d4a2397c-b6fd-43d6-8bec-9fff2e6cf7c9",
                            IsDeleted = false,
                            Name = "Aksesuar"
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 4,
                            CreateBy = "Sistem",
                            CreateDate = "11.08.2025 09:23:08",
                            Flag = "ed581ac6-4c83-42f9-9b5e-e51919fb0035",
                            IsDeleted = false,
                            Name = "Spor"
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 5,
                            CreateBy = "Sistem",
                            CreateDate = "11.08.2025 09:23:08",
                            Flag = "d95b1d26-daa2-457a-a5ed-2d366fc6b89c",
                            IsDeleted = false,
                            Name = "Giyim"
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 6,
                            CreateBy = "Sistem",
                            CreateDate = "11.08.2025 09:23:08",
                            Flag = "d48aebee-82fe-41c5-b5bf-dc536edc7944",
                            IsDeleted = false,
                            Name = "Outdoor"
                        });
                });

            modelBuilder.Entity("eticaret.Domain.Core.Entities.Subscribe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Subscribe");
                });

            modelBuilder.Entity("eticaret.Domain.Entities.About", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Flag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Slogan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Abouts");
                });

            modelBuilder.Entity("eticaret.Domain.Entities.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Flag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("eticaret.Domain.Entities.Users.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Flag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ConcurrencyStamp = "924B836D-B087-4D37-A52D-210ABD72CD96",
                            CreateBy = "Sistem",
                            CreateDate = "11.08.2025 09:23:08",
                            Flag = "46D16588-9420-4F85-A768-D21419075284",
                            IsDeleted = false,
                            Name = "superuser",
                            NormalizedName = "SUPERUSER"
                        },
                        new
                        {
                            Id = 2,
                            ConcurrencyStamp = "232D9C58-01CE-466A-90D0-EB7039C75465",
                            CreateBy = "Sistem",
                            CreateDate = "11.08.2025 09:23:08",
                            Flag = "70449BCD-A6DC-4601-867E-35AD80657B28",
                            IsDeleted = false,
                            Name = "admin",
                            NormalizedName = "ADMIN"
                        });
                });

            modelBuilder.Entity("eticaret.Domain.Entities.Users.RoleClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("eticaret.Domain.Entities.Users.UserApp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("Flag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SurName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "02f6bb5c-0cfb-4162-9101-30afa9501a4b",
                            CreateBy = "Sistem",
                            CreateDate = "11.08.2025 09:23:08",
                            Email = "stoy@windowslive.com",
                            EmailConfirmed = false,
                            Flag = "D90E65E6-9611-4B5F-9F24-BBD468398D51",
                            IsDeleted = false,
                            IsLocked = false,
                            LockoutEnabled = false,
                            Name = "Serkan",
                            NormalizedEmail = "STOY@WINDOWSLIVE.COM",
                            NormalizedUserName = "STOY",
                            PasswordHash = "AQAAAAIAAYagAAAAECKRTHrCDgcs9JTRbJuE7XC9LYLsx1bDEb6MC06TEr/q95a8Qnw16OIdk1D5EtOPuw==",
                            PhoneNumber = "0(533) 656 30 95",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "63742240-5787-4E6A-8AE2-FE8BA5381630",
                            SurName = "TOY",
                            TC = "28301227926",
                            TwoFactorEnabled = false,
                            UserName = "stoy"
                        });
                });

            modelBuilder.Entity("eticaret.Domain.Entities.Users.UserClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Flag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("eticaret.Domain.Entities.Users.UserLogin", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("eticaret.Domain.Entities.Users.UserRole", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 1,
                            RoleId = 2
                        });
                });

            modelBuilder.Entity("eticaret.Domain.Entities.Users.UserToken", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Flag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("eticaret.Domain.Core.Entities.Basket", b =>
                {
                    b.HasOne("eticaret.Domain.Core.Entities.Product", "Product")
                        .WithMany("Baskets")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("eticaret.Domain.Entities.Users.UserApp", "User")
                        .WithMany("Baskets")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("eticaret.Domain.Core.Entities.BlogInfo", b =>
                {
                    b.HasOne("eticaret.Domain.Entities.Users.UserApp", "User")
                        .WithMany("BlogInfos")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("eticaret.Domain.Core.Entities.BlogInfoAndComment", b =>
                {
                    b.HasOne("eticaret.Domain.Core.Entities.BlogInfo", "BlogInfo")
                        .WithMany("BlogInfoAndComment")
                        .HasForeignKey("BlogInfoId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("eticaret.Domain.Core.Entities.Comments", "Comment")
                        .WithMany("BlogInfoAndComment")
                        .HasForeignKey("CommentId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("eticaret.Domain.Entities.Users.UserApp", "User")
                        .WithMany("BlogInfoAndComment")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("BlogInfo");

                    b.Navigation("Comment");

                    b.Navigation("User");
                });

            modelBuilder.Entity("eticaret.Domain.Core.Entities.ColorProduct", b =>
                {
                    b.HasOne("eticaret.Domain.Core.Entities.Colors", "Colors")
                        .WithMany("ColorProduct")
                        .HasForeignKey("ColorsId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("eticaret.Domain.Core.Entities.Product", "Product")
                        .WithMany("ColorProduct")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Colors");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("eticaret.Domain.Core.Entities.Comments", b =>
                {
                    b.HasOne("eticaret.Domain.Core.Entities.Comments", "Reply")
                        .WithMany("Replys")
                        .HasForeignKey("CommentsId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Reply");
                });

            modelBuilder.Entity("eticaret.Domain.Core.Entities.Favorites", b =>
                {
                    b.HasOne("eticaret.Domain.Core.Entities.Product", "Product")
                        .WithMany("Favorites")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("eticaret.Domain.Entities.Users.UserApp", "User")
                        .WithMany("Favorites")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("eticaret.Domain.Core.Entities.Image", b =>
                {
                    b.HasOne("eticaret.Domain.Core.Entities.Product", "Product")
                        .WithMany("Images")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("eticaret.Domain.Core.Entities.Product", b =>
                {
                    b.HasOne("eticaret.Domain.Core.Entities.SubCategory", "SubCategory")
                        .WithMany("Products")
                        .HasForeignKey("SubCategoryId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("SubCategory");
                });

            modelBuilder.Entity("eticaret.Domain.Core.Entities.RatinProduct", b =>
                {
                    b.HasOne("eticaret.Domain.Core.Entities.Product", "Product")
                        .WithMany("RatinProducts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("eticaret.Domain.Core.Entities.Ratin", "Ratin")
                        .WithMany("RatinProducts")
                        .HasForeignKey("RatinId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("eticaret.Domain.Entities.Users.UserApp", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Ratin");

                    b.Navigation("User");
                });

            modelBuilder.Entity("eticaret.Domain.Core.Entities.SubCategory", b =>
                {
                    b.HasOne("eticaret.Domain.Core.Entities.Category", "Category")
                        .WithMany("SubCategorys")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("eticaret.Domain.Entities.Address", b =>
                {
                    b.HasOne("eticaret.Domain.Entities.Users.UserApp", "User")
                        .WithMany("Address")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("eticaret.Domain.Entities.Users.RoleClaim", b =>
                {
                    b.HasOne("eticaret.Domain.Entities.Users.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("eticaret.Domain.Entities.Users.UserClaim", b =>
                {
                    b.HasOne("eticaret.Domain.Entities.Users.UserApp", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("eticaret.Domain.Entities.Users.UserLogin", b =>
                {
                    b.HasOne("eticaret.Domain.Entities.Users.UserApp", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("eticaret.Domain.Entities.Users.UserRole", b =>
                {
                    b.HasOne("eticaret.Domain.Entities.Users.Role", null)
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eticaret.Domain.Entities.Users.UserApp", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("eticaret.Domain.Entities.Users.UserToken", b =>
                {
                    b.HasOne("eticaret.Domain.Entities.Users.UserApp", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("eticaret.Domain.Core.Entities.BlogInfo", b =>
                {
                    b.Navigation("BlogInfoAndComment");
                });

            modelBuilder.Entity("eticaret.Domain.Core.Entities.Category", b =>
                {
                    b.Navigation("SubCategorys");
                });

            modelBuilder.Entity("eticaret.Domain.Core.Entities.Colors", b =>
                {
                    b.Navigation("ColorProduct");
                });

            modelBuilder.Entity("eticaret.Domain.Core.Entities.Comments", b =>
                {
                    b.Navigation("BlogInfoAndComment");

                    b.Navigation("Replys");
                });

            modelBuilder.Entity("eticaret.Domain.Core.Entities.Product", b =>
                {
                    b.Navigation("Baskets");

                    b.Navigation("ColorProduct");

                    b.Navigation("Favorites");

                    b.Navigation("Images");

                    b.Navigation("RatinProducts");
                });

            modelBuilder.Entity("eticaret.Domain.Core.Entities.Ratin", b =>
                {
                    b.Navigation("RatinProducts");
                });

            modelBuilder.Entity("eticaret.Domain.Core.Entities.SubCategory", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("eticaret.Domain.Entities.Users.Role", b =>
                {
                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("eticaret.Domain.Entities.Users.UserApp", b =>
                {
                    b.Navigation("Address");

                    b.Navigation("Baskets");

                    b.Navigation("BlogInfoAndComment");

                    b.Navigation("BlogInfos");

                    b.Navigation("Favorites");
                });
#pragma warning restore 612, 618
        }
    }
}
