// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using eticaret.Domain.Database.Context;

#nullable disable

namespace eticaret.Migrations
{
    [DbContext(typeof(CommerceContext))]
    [Migration("20250430081423_ImageIsNull")]
    partial class ImageIsNull
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("eticaret.Domain.Core.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Flag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Category");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateBy = "Sistem",
                            CreateDate = "30.04.2025 11:14:22",
                            Flag = "bc74cef0-9844-4a1e-9a25-9bb98430a1a3",
                            IsDeleted = false,
                            Name = "Category 1"
                        },
                        new
                        {
                            Id = 2,
                            CreateBy = "Sistem",
                            CreateDate = "30.04.2025 11:14:22",
                            Flag = "54b34e5e-5413-4c22-81fd-231c7c60220b",
                            IsDeleted = false,
                            Name = "Category 2"
                        },
                        new
                        {
                            Id = 3,
                            CreateBy = "Sistem",
                            CreateDate = "30.04.2025 11:14:22",
                            Flag = "fb6a5f9e-743e-46ce-9ce8-5eac25f31848",
                            IsDeleted = false,
                            Name = "Category 3"
                        },
                        new
                        {
                            Id = 4,
                            CreateBy = "Sistem",
                            CreateDate = "30.04.2025 11:14:22",
                            Flag = "cbbdb639-ed42-4ab5-b642-cff0fe332b3d",
                            IsDeleted = false,
                            Name = "Category 4"
                        },
                        new
                        {
                            Id = 5,
                            CreateBy = "Sistem",
                            CreateDate = "30.04.2025 11:14:22",
                            Flag = "3492e1d4-25db-4041-bed9-16aa8a383632",
                            IsDeleted = false,
                            Name = "Category 5"
                        },
                        new
                        {
                            Id = 6,
                            CreateBy = "Sistem",
                            CreateDate = "30.04.2025 11:14:22",
                            Flag = "c8cf0ef9-4b4a-4ad0-a919-bb27fe2675b1",
                            IsDeleted = false,
                            Name = "Category 6"
                        });
                });

            modelBuilder.Entity("eticaret.Domain.Core.Entities.CategoryProduct", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.HasKey("ProductId", "CategoryId");

                    b.HasIndex("CategoryId");

                    b.ToTable("CategoryProduct");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            CategoryId = 1
                        },
                        new
                        {
                            ProductId = 2,
                            CategoryId = 1
                        },
                        new
                        {
                            ProductId = 3,
                            CategoryId = 1
                        },
                        new
                        {
                            ProductId = 4,
                            CategoryId = 1
                        },
                        new
                        {
                            ProductId = 5,
                            CategoryId = 1
                        },
                        new
                        {
                            ProductId = 1,
                            CategoryId = 2
                        },
                        new
                        {
                            ProductId = 2,
                            CategoryId = 2
                        },
                        new
                        {
                            ProductId = 3,
                            CategoryId = 2
                        },
                        new
                        {
                            ProductId = 4,
                            CategoryId = 2
                        },
                        new
                        {
                            ProductId = 5,
                            CategoryId = 2
                        },
                        new
                        {
                            ProductId = 6,
                            CategoryId = 2
                        },
                        new
                        {
                            ProductId = 7,
                            CategoryId = 3
                        },
                        new
                        {
                            ProductId = 8,
                            CategoryId = 3
                        },
                        new
                        {
                            ProductId = 9,
                            CategoryId = 3
                        },
                        new
                        {
                            ProductId = 10,
                            CategoryId = 4
                        },
                        new
                        {
                            ProductId = 11,
                            CategoryId = 4
                        },
                        new
                        {
                            ProductId = 12,
                            CategoryId = 4
                        },
                        new
                        {
                            ProductId = 13,
                            CategoryId = 4
                        },
                        new
                        {
                            ProductId = 14,
                            CategoryId = 5
                        },
                        new
                        {
                            ProductId = 15,
                            CategoryId = 5
                        },
                        new
                        {
                            ProductId = 17,
                            CategoryId = 6
                        },
                        new
                        {
                            ProductId = 18,
                            CategoryId = 6
                        },
                        new
                        {
                            ProductId = 19,
                            CategoryId = 6
                        },
                        new
                        {
                            ProductId = 20,
                            CategoryId = 5
                        },
                        new
                        {
                            ProductId = 21,
                            CategoryId = 6
                        },
                        new
                        {
                            ProductId = 21,
                            CategoryId = 5
                        },
                        new
                        {
                            ProductId = 22,
                            CategoryId = 5
                        },
                        new
                        {
                            ProductId = 22,
                            CategoryId = 6
                        },
                        new
                        {
                            ProductId = 23,
                            CategoryId = 6
                        },
                        new
                        {
                            ProductId = 23,
                            CategoryId = 5
                        },
                        new
                        {
                            ProductId = 24,
                            CategoryId = 5
                        },
                        new
                        {
                            ProductId = 24,
                            CategoryId = 6
                        },
                        new
                        {
                            ProductId = 25,
                            CategoryId = 6
                        });
                });

            modelBuilder.Entity("eticaret.Domain.Core.Entities.Image", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Flag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsShowcase")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("Image");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateBy = "Sistem",
                            CreateDate = "30.04.2025 11:14:22",
                            Flag = "3e8a63be-7f64-436b-8885-e398db4c8460",
                            IsDeleted = false,
                            IsShowcase = true,
                            Name = "1.jpg",
                            ProductId = 1
                        },
                        new
                        {
                            Id = 2,
                            CreateBy = "Sistem",
                            CreateDate = "30.04.2025 11:14:22",
                            Flag = "e2a97640-6c81-417f-9373-f2ed94522b0f",
                            IsDeleted = false,
                            IsShowcase = true,
                            Name = "back-1.jpg",
                            ProductId = 1
                        },
                        new
                        {
                            Id = 3,
                            CreateBy = "Sistem",
                            CreateDate = "30.04.2025 11:14:22",
                            Flag = "c6fb5a41-f7f0-4ca1-9b3b-09d6ba741e51",
                            IsDeleted = false,
                            IsShowcase = true,
                            Name = "2.jpg",
                            ProductId = 2
                        },
                        new
                        {
                            Id = 4,
                            CreateBy = "Sistem",
                            CreateDate = "30.04.2025 11:14:22",
                            Flag = "1c00f13f-9fde-4497-aae1-8fa1fc257b85",
                            IsDeleted = false,
                            IsShowcase = true,
                            Name = "back-2.jpg",
                            ProductId = 2
                        },
                        new
                        {
                            Id = 5,
                            CreateBy = "Sistem",
                            CreateDate = "30.04.2025 11:14:22",
                            Flag = "1f531bcf-884e-4465-8d76-76798b890065",
                            IsDeleted = false,
                            IsShowcase = true,
                            Name = "3.jpg",
                            ProductId = 3
                        },
                        new
                        {
                            Id = 6,
                            CreateBy = "Sistem",
                            CreateDate = "30.04.2025 11:14:22",
                            Flag = "d2afb9a6-3c88-4cac-beef-c35316de5abc",
                            IsDeleted = false,
                            IsShowcase = true,
                            Name = "back-3.jpg",
                            ProductId = 3
                        },
                        new
                        {
                            Id = 7,
                            CreateBy = "Sistem",
                            CreateDate = "30.04.2025 11:14:22",
                            Flag = "b442d499-9d3c-49df-820e-2c3fbbcf0a37",
                            IsDeleted = false,
                            IsShowcase = true,
                            Name = "4.jpg",
                            ProductId = 4
                        },
                        new
                        {
                            Id = 8,
                            CreateBy = "Sistem",
                            CreateDate = "30.04.2025 11:14:22",
                            Flag = "40d09ef5-7d00-4983-bb76-8c338335923f",
                            IsDeleted = false,
                            IsShowcase = true,
                            Name = "back-4.jpg",
                            ProductId = 4
                        },
                        new
                        {
                            Id = 9,
                            CreateBy = "Sistem",
                            CreateDate = "30.04.2025 11:14:22",
                            Flag = "60b731b4-6f1f-485d-8d8e-478d54abd84f",
                            IsDeleted = false,
                            IsShowcase = true,
                            Name = "5.jpg",
                            ProductId = 5
                        },
                        new
                        {
                            Id = 10,
                            CreateBy = "Sistem",
                            CreateDate = "30.04.2025 11:14:22",
                            Flag = "49c50208-a084-4f79-b2e7-fcaaf3d1bd4b",
                            IsDeleted = false,
                            IsShowcase = true,
                            Name = "back-5.jpg",
                            ProductId = 5
                        },
                        new
                        {
                            Id = 11,
                            CreateBy = "Sistem",
                            CreateDate = "30.04.2025 11:14:22",
                            Flag = "81f1ab1d-cae2-44c0-9436-afaea7574077",
                            IsDeleted = false,
                            IsShowcase = true,
                            Name = "6.jpg",
                            ProductId = 6
                        },
                        new
                        {
                            Id = 12,
                            CreateBy = "Sistem",
                            CreateDate = "30.04.2025 11:14:22",
                            Flag = "82ac715a-5024-46c3-ba11-2c1e3c9af0c8",
                            IsDeleted = false,
                            IsShowcase = true,
                            Name = "back-6.jpg",
                            ProductId = 6
                        },
                        new
                        {
                            Id = 13,
                            CreateBy = "Sistem",
                            CreateDate = "30.04.2025 11:14:22",
                            Flag = "658bfa2f-779f-489c-bc73-1fd4b34d243a",
                            IsDeleted = false,
                            IsShowcase = true,
                            Name = "7.jpg",
                            ProductId = 7
                        },
                        new
                        {
                            Id = 14,
                            CreateBy = "Sistem",
                            CreateDate = "30.04.2025 11:14:22",
                            Flag = "b00e8a75-74d9-441c-a9cb-9c53d302c475",
                            IsDeleted = false,
                            IsShowcase = true,
                            Name = "back-7.jpg",
                            ProductId = 7
                        },
                        new
                        {
                            Id = 15,
                            CreateBy = "Sistem",
                            CreateDate = "30.04.2025 11:14:22",
                            Flag = "089f4a77-6561-49af-91ce-3985343e374a",
                            IsDeleted = false,
                            IsShowcase = true,
                            Name = "8.jpg",
                            ProductId = 8
                        },
                        new
                        {
                            Id = 16,
                            CreateBy = "Sistem",
                            CreateDate = "30.04.2025 11:14:22",
                            Flag = "cb20bdfe-14bf-43db-9575-48dc39ee2a6d",
                            IsDeleted = false,
                            IsShowcase = true,
                            Name = "back-8.jpg",
                            ProductId = 8
                        },
                        new
                        {
                            Id = 17,
                            CreateBy = "Sistem",
                            CreateDate = "30.04.2025 11:14:22",
                            Flag = "6461a1e8-5d6c-4f11-83ec-50661627ac71",
                            IsDeleted = false,
                            IsShowcase = true,
                            Name = "1.jpg",
                            ProductId = 9
                        },
                        new
                        {
                            Id = 18,
                            CreateBy = "Sistem",
                            CreateDate = "30.04.2025 11:14:22",
                            Flag = "cc5ced82-37d3-48f6-b172-861065707922",
                            IsDeleted = false,
                            IsShowcase = true,
                            Name = "back-1.jpg",
                            ProductId = 9
                        },
                        new
                        {
                            Id = 19,
                            CreateBy = "Sistem",
                            CreateDate = "30.04.2025 11:14:22",
                            Flag = "9eaac5b7-71ff-4922-bede-ce54accfefc6",
                            IsDeleted = false,
                            IsShowcase = true,
                            Name = "2.jpg",
                            ProductId = 10
                        },
                        new
                        {
                            Id = 20,
                            CreateBy = "Sistem",
                            CreateDate = "30.04.2025 11:14:22",
                            Flag = "5972b832-12fb-4a25-9eb7-82107b9841da",
                            IsDeleted = false,
                            IsShowcase = true,
                            Name = "back-2.jpg",
                            ProductId = 10
                        },
                        new
                        {
                            Id = 21,
                            CreateBy = "Sistem",
                            CreateDate = "30.04.2025 11:14:22",
                            Flag = "6b182c6f-d483-4e53-8928-c6665eb668db",
                            IsDeleted = false,
                            IsShowcase = true,
                            Name = "3.jpg",
                            ProductId = 11
                        },
                        new
                        {
                            Id = 22,
                            CreateBy = "Sistem",
                            CreateDate = "30.04.2025 11:14:22",
                            Flag = "3968d34e-c0c4-467d-a0af-6324ed5a92af",
                            IsDeleted = false,
                            IsShowcase = true,
                            Name = "back-3.jpg",
                            ProductId = 11
                        },
                        new
                        {
                            Id = 23,
                            CreateBy = "Sistem",
                            CreateDate = "30.04.2025 11:14:22",
                            Flag = "1b678225-2897-4fe6-a760-616d222327dc",
                            IsDeleted = false,
                            IsShowcase = true,
                            Name = "4.jpg",
                            ProductId = 12
                        },
                        new
                        {
                            Id = 24,
                            CreateBy = "Sistem",
                            CreateDate = "30.04.2025 11:14:22",
                            Flag = "8f4d3213-e8e0-4170-82c1-a36f6195fb1d",
                            IsDeleted = false,
                            IsShowcase = true,
                            Name = "back-4.jpg",
                            ProductId = 12
                        },
                        new
                        {
                            Id = 25,
                            CreateBy = "Sistem",
                            CreateDate = "30.04.2025 11:14:22",
                            Flag = "37df4b83-2015-4e0c-a9af-a9980484375b",
                            IsDeleted = false,
                            IsShowcase = false,
                            Name = "5.jpg",
                            ProductId = 13
                        },
                        new
                        {
                            Id = 26,
                            CreateBy = "Sistem",
                            CreateDate = "30.04.2025 11:14:22",
                            Flag = "26fa1483-5995-4ec3-9019-3c561069dde2",
                            IsDeleted = false,
                            IsShowcase = false,
                            Name = "back-5.jpg",
                            ProductId = 13
                        });
                });

            modelBuilder.Entity("eticaret.Domain.Core.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Flag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NewPrice")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OldPrice")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RatinAVG")
                        .HasColumnType("int");

                    b.Property<int>("SubCategoryId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SubCategoryId");

                    b.ToTable("Product");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateBy = "Sistem",
                            CreateDate = "30.04.2025 11:14:22",
                            Description = "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quas nihil laboriosam voluptatem ab consectetur dolorum id, soluta sunt at culpa commodi totam quod natus qui!",
                            Flag = "aba8d0e6-ad75-47f6-bfd7-28b0f7cf17bd",
                            IsDeleted = false,
                            Name = "Product 1",
                            OldPrice = "3.408,22",
                            RatinAVG = 0,
                            SubCategoryId = 1
                        },
                        new
                        {
                            Id = 2,
                            CreateBy = "Sistem",
                            CreateDate = "30.04.2025 11:14:22",
                            Description = "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quas nihil laboriosam voluptatem ab consectetur dolorum id, soluta sunt at culpa commodi totam quod natus qui!",
                            Flag = "066f442b-45de-4dd3-9521-f40bf4a8e09c",
                            IsDeleted = false,
                            Name = "Product 2",
                            OldPrice = "3.408,22",
                            RatinAVG = 0,
                            SubCategoryId = 1
                        },
                        new
                        {
                            Id = 3,
                            CreateBy = "Sistem",
                            CreateDate = "30.04.2025 11:14:22",
                            Description = "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quas nihil laboriosam voluptatem ab consectetur dolorum id, soluta sunt at culpa commodi totam quod natus qui!",
                            Flag = "790ab367-8cf8-4537-8dd4-2720e6dae013",
                            IsDeleted = false,
                            Name = "Product 3",
                            OldPrice = "3.408,22",
                            RatinAVG = 0,
                            SubCategoryId = 1
                        },
                        new
                        {
                            Id = 4,
                            CreateBy = "Sistem",
                            CreateDate = "30.04.2025 11:14:22",
                            Description = "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quas nihil laboriosam voluptatem ab consectetur dolorum id, soluta sunt at culpa commodi totam quod natus qui!",
                            Flag = "d975ff22-761a-421a-a913-87dbdefa0614",
                            IsDeleted = false,
                            Name = "Product 4",
                            OldPrice = "3.408,22",
                            RatinAVG = 0,
                            SubCategoryId = 1
                        },
                        new
                        {
                            Id = 5,
                            CreateBy = "Sistem",
                            CreateDate = "30.04.2025 11:14:22",
                            Description = "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quas nihil laboriosam voluptatem ab consectetur dolorum id, soluta sunt at culpa commodi totam quod natus qui!",
                            Flag = "19095d42-f8b4-480b-923f-6a3f0cd639d6",
                            IsDeleted = false,
                            Name = "Product 5",
                            OldPrice = "3.408,22",
                            RatinAVG = 0,
                            SubCategoryId = 1
                        },
                        new
                        {
                            Id = 6,
                            CreateBy = "Sistem",
                            CreateDate = "30.04.2025 11:14:22",
                            Description = "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quas nihil laboriosam voluptatem ab consectetur dolorum id, soluta sunt at culpa commodi totam quod natus qui!",
                            Flag = "cc11f55c-ca3c-4f1b-8a6e-7dd4dacf7d5b",
                            IsDeleted = false,
                            Name = "Product 6",
                            OldPrice = "3.408,22",
                            RatinAVG = 0,
                            SubCategoryId = 1
                        },
                        new
                        {
                            Id = 7,
                            CreateBy = "Sistem",
                            CreateDate = "30.04.2025 11:14:22",
                            Description = "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quas nihil laboriosam voluptatem ab consectetur dolorum id, soluta sunt at culpa commodi totam quod natus qui!",
                            Flag = "928d8b31-d868-4da2-bad8-5bdbd53744ab",
                            IsDeleted = false,
                            Name = "Product 7",
                            OldPrice = "3.408,22",
                            RatinAVG = 0,
                            SubCategoryId = 3
                        },
                        new
                        {
                            Id = 8,
                            CreateBy = "Sistem",
                            CreateDate = "30.04.2025 11:14:22",
                            Description = "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quas nihil laboriosam voluptatem ab consectetur dolorum id, soluta sunt at culpa commodi totam quod natus qui!",
                            Flag = "8fe12d1d-9a0d-4f5e-8b89-c0ef50bbac00",
                            IsDeleted = false,
                            Name = "Product 8",
                            OldPrice = "3.408,22",
                            RatinAVG = 0,
                            SubCategoryId = 3
                        },
                        new
                        {
                            Id = 9,
                            CreateBy = "Sistem",
                            CreateDate = "30.04.2025 11:14:22",
                            Description = "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quas nihil laboriosam voluptatem ab consectetur dolorum id, soluta sunt at culpa commodi totam quod natus qui!",
                            Flag = "3fa41fed-0af3-49e9-be30-38f0993fb6a7",
                            IsDeleted = false,
                            Name = "Product 9",
                            OldPrice = "3.408,22",
                            RatinAVG = 0,
                            SubCategoryId = 3
                        },
                        new
                        {
                            Id = 10,
                            CreateBy = "Sistem",
                            CreateDate = "30.04.2025 11:14:22",
                            Description = "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quas nihil laboriosam voluptatem ab consectetur dolorum id, soluta sunt at culpa commodi totam quod natus qui!",
                            Flag = "238c4b2c-fae3-4503-9e14-c3fffd0f515d",
                            IsDeleted = false,
                            Name = "Product 10",
                            OldPrice = "3.408,22",
                            RatinAVG = 0,
                            SubCategoryId = 4
                        },
                        new
                        {
                            Id = 11,
                            CreateBy = "Sistem",
                            CreateDate = "30.04.2025 11:14:22",
                            Description = "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quas nihil laboriosam voluptatem ab consectetur dolorum id, soluta sunt at culpa commodi totam quod natus qui!",
                            Flag = "765a3398-cbf4-4f93-9a00-8b1f6bc72b2b",
                            IsDeleted = false,
                            Name = "Product 11",
                            OldPrice = "3.408,22",
                            RatinAVG = 0,
                            SubCategoryId = 4
                        },
                        new
                        {
                            Id = 12,
                            CreateBy = "Sistem",
                            CreateDate = "30.04.2025 11:14:22",
                            Description = "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quas nihil laboriosam voluptatem ab consectetur dolorum id, soluta sunt at culpa commodi totam quod natus qui!",
                            Flag = "caaacd2a-dc8d-41fb-b862-288316f81cd1",
                            IsDeleted = false,
                            Name = "Product 12",
                            OldPrice = "3.408,22",
                            RatinAVG = 0,
                            SubCategoryId = 4
                        },
                        new
                        {
                            Id = 13,
                            CreateBy = "Sistem",
                            CreateDate = "30.04.2025 11:14:22",
                            Description = "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quas nihil laboriosam voluptatem ab consectetur dolorum id, soluta sunt at culpa commodi totam quod natus qui!",
                            Flag = "4a36f4bc-5ef8-434c-b2c0-cbc2f09d229f",
                            IsDeleted = false,
                            Name = "Product 13",
                            OldPrice = "3.408,22",
                            RatinAVG = 0,
                            SubCategoryId = 4
                        },
                        new
                        {
                            Id = 14,
                            CreateBy = "Sistem",
                            CreateDate = "30.04.2025 11:14:22",
                            Description = "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quas nihil laboriosam voluptatem ab consectetur dolorum id, soluta sunt at culpa commodi totam quod natus qui!",
                            Flag = "c0cb2d9e-3ea5-4341-9652-71c8b4ac1620",
                            IsDeleted = false,
                            Name = "Product 14",
                            OldPrice = "3.408,22",
                            RatinAVG = 0,
                            SubCategoryId = 5
                        },
                        new
                        {
                            Id = 15,
                            CreateBy = "Sistem",
                            CreateDate = "30.04.2025 11:14:22",
                            Description = "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quas nihil laboriosam voluptatem ab consectetur dolorum id, soluta sunt at culpa commodi totam quod natus qui!",
                            Flag = "d993c638-6742-49d5-b822-8991208b61d4",
                            IsDeleted = false,
                            Name = "Product 15",
                            OldPrice = "3.408,22",
                            RatinAVG = 0,
                            SubCategoryId = 5
                        },
                        new
                        {
                            Id = 16,
                            CreateBy = "Sistem",
                            CreateDate = "30.04.2025 11:14:22",
                            Description = "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quas nihil laboriosam voluptatem ab consectetur dolorum id, soluta sunt at culpa commodi totam quod natus qui!",
                            Flag = "1640651c-b699-4d03-803f-dc0a1037a10a",
                            IsDeleted = false,
                            Name = "Product 16",
                            OldPrice = "3.408,22",
                            RatinAVG = 0,
                            SubCategoryId = 6
                        },
                        new
                        {
                            Id = 17,
                            CreateBy = "Sistem",
                            CreateDate = "30.04.2025 11:14:22",
                            Description = "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quas nihil laboriosam voluptatem ab consectetur dolorum id, soluta sunt at culpa commodi totam quod natus qui!",
                            Flag = "d492de26-008b-4dd2-9f99-fc5f5399716f",
                            IsDeleted = false,
                            Name = "Product 17",
                            OldPrice = "3.408,22",
                            RatinAVG = 0,
                            SubCategoryId = 6
                        },
                        new
                        {
                            Id = 18,
                            CreateBy = "Sistem",
                            CreateDate = "30.04.2025 11:14:22",
                            Description = "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quas nihil laboriosam voluptatem ab consectetur dolorum id, soluta sunt at culpa commodi totam quod natus qui!",
                            Flag = "ec22ff20-ffba-4bea-aee6-a57a6297c5da",
                            IsDeleted = false,
                            Name = "Product 18",
                            OldPrice = "3.408,22",
                            RatinAVG = 0,
                            SubCategoryId = 5
                        },
                        new
                        {
                            Id = 19,
                            CreateBy = "Sistem",
                            CreateDate = "30.04.2025 11:14:22",
                            Description = "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quas nihil laboriosam voluptatem ab consectetur dolorum id, soluta sunt at culpa commodi totam quod natus qui!",
                            Flag = "21e2a2f2-7120-454d-a596-42c0014cd18a",
                            IsDeleted = false,
                            Name = "Product 19",
                            OldPrice = "3.408,22",
                            RatinAVG = 0,
                            SubCategoryId = 5
                        },
                        new
                        {
                            Id = 20,
                            CreateBy = "Sistem",
                            CreateDate = "30.04.2025 11:14:22",
                            Description = "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quas nihil laboriosam voluptatem ab consectetur dolorum id, soluta sunt at culpa commodi totam quod natus qui!",
                            Flag = "e0f38dd1-185d-4332-9479-b349f7fff751",
                            IsDeleted = false,
                            Name = "Product 20",
                            OldPrice = "3.408,22",
                            RatinAVG = 0,
                            SubCategoryId = 6
                        },
                        new
                        {
                            Id = 21,
                            CreateBy = "Sistem",
                            CreateDate = "30.04.2025 11:14:22",
                            Description = "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quas nihil laboriosam voluptatem ab consectetur dolorum id, soluta sunt at culpa commodi totam quod natus qui!",
                            Flag = "6529c3b9-acdf-4eb0-9737-f36b39b3f3ae",
                            IsDeleted = false,
                            Name = "Product 21",
                            OldPrice = "3.408,22",
                            RatinAVG = 0,
                            SubCategoryId = 6
                        },
                        new
                        {
                            Id = 22,
                            CreateBy = "Sistem",
                            CreateDate = "30.04.2025 11:14:22",
                            Description = "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quas nihil laboriosam voluptatem ab consectetur dolorum id, soluta sunt at culpa commodi totam quod natus qui!",
                            Flag = "1ef3f7ae-7a8e-49fb-a02b-8757821bbe14",
                            IsDeleted = false,
                            Name = "Product 22",
                            OldPrice = "3.408,22",
                            RatinAVG = 0,
                            SubCategoryId = 5
                        },
                        new
                        {
                            Id = 23,
                            CreateBy = "Sistem",
                            CreateDate = "30.04.2025 11:14:22",
                            Description = "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quas nihil laboriosam voluptatem ab consectetur dolorum id, soluta sunt at culpa commodi totam quod natus qui!",
                            Flag = "664ccc54-10e3-4577-9e40-f1c1219b797b",
                            IsDeleted = false,
                            Name = "Product 23",
                            OldPrice = "3.408,22",
                            RatinAVG = 0,
                            SubCategoryId = 5
                        },
                        new
                        {
                            Id = 24,
                            CreateBy = "Sistem",
                            CreateDate = "30.04.2025 11:14:22",
                            Description = "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quas nihil laboriosam voluptatem ab consectetur dolorum id, soluta sunt at culpa commodi totam quod natus qui!",
                            Flag = "a08695c4-be97-4779-8df7-c77ddeed5260",
                            IsDeleted = false,
                            Name = "Product 24",
                            OldPrice = "3.408,22",
                            RatinAVG = 0,
                            SubCategoryId = 6
                        },
                        new
                        {
                            Id = 25,
                            CreateBy = "Sistem",
                            CreateDate = "30.04.2025 11:14:22",
                            Description = "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quas nihil laboriosam voluptatem ab consectetur dolorum id, soluta sunt at culpa commodi totam quod natus qui!",
                            Flag = "a986ee2f-88ff-4832-9b40-a2c295b9ea05",
                            IsDeleted = false,
                            Name = "Product 25",
                            OldPrice = "3.408,22",
                            RatinAVG = 0,
                            SubCategoryId = 6
                        });
                });

            modelBuilder.Entity("eticaret.Domain.Core.Entities.Ratin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Ratin");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Rating = 1
                        },
                        new
                        {
                            Id = 2,
                            Rating = 2
                        },
                        new
                        {
                            Id = 3,
                            Rating = 3
                        },
                        new
                        {
                            Id = 4,
                            Rating = 4
                        },
                        new
                        {
                            Id = 5,
                            Rating = 5
                        });
                });

            modelBuilder.Entity("eticaret.Domain.Core.Entities.RatinProduct", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("RatinId")
                        .HasColumnType("int");

                    b.HasKey("Id", "UserId");

                    b.HasIndex("ProductId");

                    b.HasIndex("RatinId");

                    b.HasIndex("UserId");

                    b.ToTable("RatinProduct");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            UserId = 1,
                            ProductId = 1,
                            RatinId = 1
                        },
                        new
                        {
                            Id = 2,
                            UserId = 1,
                            ProductId = 2,
                            RatinId = 2
                        },
                        new
                        {
                            Id = 3,
                            UserId = 1,
                            ProductId = 3,
                            RatinId = 3
                        },
                        new
                        {
                            Id = 4,
                            UserId = 1,
                            ProductId = 4,
                            RatinId = 4
                        },
                        new
                        {
                            Id = 5,
                            UserId = 1,
                            ProductId = 5,
                            RatinId = 5
                        });
                });

            modelBuilder.Entity("eticaret.Domain.Core.Entities.SubCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Flag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("SubCategory");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            CreateBy = "Sistem",
                            CreateDate = "30.04.2025 11:14:22",
                            Flag = "8891b313-7707-4a54-981a-2e5534daedd0",
                            IsDeleted = false,
                            Name = "Çanta"
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 2,
                            CreateBy = "Sistem",
                            CreateDate = "30.04.2025 11:14:22",
                            Flag = "db328015-5632-4471-ab66-1bb8a1170c39",
                            IsDeleted = false,
                            Name = "Halı"
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 3,
                            CreateBy = "Sistem",
                            CreateDate = "30.04.2025 11:14:22",
                            Flag = "32fc6538-56dc-4d3b-9de2-12745b28d0ca",
                            IsDeleted = false,
                            Name = "Aksesuar"
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 4,
                            CreateBy = "Sistem",
                            CreateDate = "30.04.2025 11:14:22",
                            Flag = "6fb19ca3-c719-45c4-8318-98e0c67e4746",
                            IsDeleted = false,
                            Name = "SubCategory 1"
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 5,
                            CreateBy = "Sistem",
                            CreateDate = "30.04.2025 11:14:22",
                            Flag = "4ffdc2ef-875e-4bc5-943d-dc1c5f8c0560",
                            IsDeleted = false,
                            Name = "SubCategory 2"
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 6,
                            CreateBy = "Sistem",
                            CreateDate = "30.04.2025 11:14:22",
                            Flag = "99a8aeee-0abf-4377-ba29-ae6c28d55752",
                            IsDeleted = false,
                            Name = "SubCategory 3"
                        });
                });

            modelBuilder.Entity("eticaret.Domain.Entities.About", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Flag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Abouts");
                });

            modelBuilder.Entity("eticaret.Domain.Entities.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Flag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("eticaret.Domain.Entities.Users.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Flag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ConcurrencyStamp = "924B836D-B087-4D37-A52D-210ABD72CD96",
                            CreateBy = "Sistem",
                            CreateDate = "30.04.2025 11:14:22",
                            Flag = "46D16588-9420-4F85-A768-D21419075284",
                            IsDeleted = false,
                            Name = "superuser",
                            NormalizedName = "SUPERUSER"
                        },
                        new
                        {
                            Id = 2,
                            ConcurrencyStamp = "232D9C58-01CE-466A-90D0-EB7039C75465",
                            CreateBy = "Sistem",
                            CreateDate = "30.04.2025 11:14:22",
                            Flag = "70449BCD-A6DC-4601-867E-35AD80657B28",
                            IsDeleted = false,
                            Name = "admin",
                            NormalizedName = "ADMIN"
                        });
                });

            modelBuilder.Entity("eticaret.Domain.Entities.Users.RoleClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("eticaret.Domain.Entities.Users.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("Flag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SurName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "631ae50f-f4d6-40b4-8799-855c36c09743",
                            CreateBy = "Sistem",
                            CreateDate = "30.04.2025 11:14:22",
                            Email = "stoy@windowslive.com",
                            EmailConfirmed = false,
                            Flag = "D90E65E6-9611-4B5F-9F24-BBD468398D51",
                            IsDeleted = false,
                            IsLocked = false,
                            LockoutEnabled = false,
                            Name = "Serkan",
                            NormalizedEmail = "STOY@WINDOWSLIVE.COM",
                            NormalizedUserName = "STOY",
                            PasswordHash = "AQAAAAIAAYagAAAAEEEc9R8Q3NM5ihbg9qFki7lDXcqir4TkmedH09tleAMFp4LkqHCRZ6d9arQV4rLVrw==",
                            PhoneNumber = "0(533) 656 30 95",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "63742240-5787-4E6A-8AE2-FE8BA5381630",
                            SurName = "TOY",
                            TC = "28301227926",
                            TwoFactorEnabled = false,
                            UserName = "stoy"
                        });
                });

            modelBuilder.Entity("eticaret.Domain.Entities.Users.UserClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Flag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("eticaret.Domain.Entities.Users.UserLogin", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("eticaret.Domain.Entities.Users.UserRole", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 1,
                            RoleId = 2
                        });
                });

            modelBuilder.Entity("eticaret.Domain.Entities.Users.UserToken", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Flag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("eticaret.Domain.Core.Entities.CategoryProduct", b =>
                {
                    b.HasOne("eticaret.Domain.Core.Entities.Category", "Category")
                        .WithMany("CategoryProducts")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("eticaret.Domain.Core.Entities.Product", "Product")
                        .WithMany("CategoryProducts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("eticaret.Domain.Core.Entities.Image", b =>
                {
                    b.HasOne("eticaret.Domain.Core.Entities.Product", "Product")
                        .WithMany("Images")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("eticaret.Domain.Core.Entities.Product", b =>
                {
                    b.HasOne("eticaret.Domain.Core.Entities.SubCategory", "SubCategory")
                        .WithMany("Products")
                        .HasForeignKey("SubCategoryId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("SubCategory");
                });

            modelBuilder.Entity("eticaret.Domain.Core.Entities.RatinProduct", b =>
                {
                    b.HasOne("eticaret.Domain.Core.Entities.Product", "Product")
                        .WithMany("RatinProducts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("eticaret.Domain.Core.Entities.Ratin", "Ratin")
                        .WithMany("RatinProducts")
                        .HasForeignKey("RatinId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("eticaret.Domain.Entities.Users.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Ratin");

                    b.Navigation("User");
                });

            modelBuilder.Entity("eticaret.Domain.Core.Entities.SubCategory", b =>
                {
                    b.HasOne("eticaret.Domain.Core.Entities.Category", "Categorys")
                        .WithMany("SubCategorys")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Categorys");
                });

            modelBuilder.Entity("eticaret.Domain.Entities.Address", b =>
                {
                    b.HasOne("eticaret.Domain.Entities.Users.User", "User")
                        .WithMany("Address")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("eticaret.Domain.Entities.Users.RoleClaim", b =>
                {
                    b.HasOne("eticaret.Domain.Entities.Users.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("eticaret.Domain.Entities.Users.UserClaim", b =>
                {
                    b.HasOne("eticaret.Domain.Entities.Users.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("eticaret.Domain.Entities.Users.UserLogin", b =>
                {
                    b.HasOne("eticaret.Domain.Entities.Users.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("eticaret.Domain.Entities.Users.UserRole", b =>
                {
                    b.HasOne("eticaret.Domain.Entities.Users.Role", null)
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eticaret.Domain.Entities.Users.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("eticaret.Domain.Entities.Users.UserToken", b =>
                {
                    b.HasOne("eticaret.Domain.Entities.Users.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("eticaret.Domain.Core.Entities.Category", b =>
                {
                    b.Navigation("CategoryProducts");

                    b.Navigation("SubCategorys");
                });

            modelBuilder.Entity("eticaret.Domain.Core.Entities.Product", b =>
                {
                    b.Navigation("CategoryProducts");

                    b.Navigation("Images");

                    b.Navigation("RatinProducts");
                });

            modelBuilder.Entity("eticaret.Domain.Core.Entities.Ratin", b =>
                {
                    b.Navigation("RatinProducts");
                });

            modelBuilder.Entity("eticaret.Domain.Core.Entities.SubCategory", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("eticaret.Domain.Entities.Users.Role", b =>
                {
                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("eticaret.Domain.Entities.Users.User", b =>
                {
                    b.Navigation("Address");
                });
#pragma warning restore 612, 618
        }
    }
}
