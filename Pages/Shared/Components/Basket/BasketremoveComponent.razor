@inject AuthenticationStateProvider AuthenticationStateProvider
@inject eticaret.Domain.UnitOfWork.IUnitofWork unitofWork
@inject NavigationManager _navigationManager


<i class="ri-delete-bin-line" @onclick="(async () => await Remove(Convert.ToInt32(Id)))"></i>

@code {
    [Parameter]
    public string Id { get; set; } = string.Empty;
    private AuthenticationState authenticationState;

    protected override async Task OnInitializedAsync()
    {

    }

    public async Task Remove(int a)
    {
        authenticationState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authenticationState.User;
        if (user.Identity?.IsAuthenticated == true)
        {
            var userId = unitofWork.GetUserById(user.Identity!.Name!);
            Basket delete = await unitofWork.GetRepository<Basket>().GetFindAsync(v => v.Id == a);
            unitofWork.GetRepository<Basket>().Delete(delete);
            unitofWork.SaveChanges();
        }
        _navigationManager.Refresh();
    }
}
