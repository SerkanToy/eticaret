@inject AuthenticationStateProvider AuthenticationStateProvider
@inject eticaret.Domain.UnitOfWork.IUnitofWork unitofWork

<ul class="bb-pro-actions">
    <li class="bb-btn-group">
        <a href="javascript:void(0)" @onclick="() => Favori(ProductId)">
            @if (IsBoolean)
            {
                <i class="ri-check-double-line"></i>
            }
            else
            {
                <i class="ri-heart-line"></i>
            }
        </a>
    </li>
    <li class="bb-btn-group">
        <a href="/product/@Flag">
            <i class="ri-eye-line"></i>
        </a>
    </li>
    <li class="bb-btn-group">
        <a href="javascript:void(0)">
            <i class="ri-shopping-bag-4-line"></i>
        </a>
    </li>
</ul>

@code {
    [Parameter]
    public string ProductId { get; set; } = string.Empty;
    [Parameter]
    public string Flag { get; set; } = string.Empty;
    [Parameter]
    public bool IsBoolean { get; set; } = false;


    private AuthenticationState authenticationState;


    public void OnInitialized()
    {

    }

    public async Task Favori(string a)
    {
        authenticationState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authenticationState.User;
        if (user.Identity?.IsAuthenticated == true)
        {
            var userId = unitofWork.GetUserById(user.Identity!.Name!);
            var product = await unitofWork.GetRepository<Product>().GetFindAsync(x => x.Id == Convert.ToInt32(a));
            var favorite = await unitofWork.GetRepository<Favorites>().GetFindAsync(x => x.UserId == userId && x.ProductId == product.Id);
            if (favorite is not null)
            {
                IsBoolean = true;
                return;
            }

            unitofWork.GetRepository<Favorites>().Insert(new Favorites
            {
                UserId = userId,
                ProductId = product.Id
            });
            await unitofWork.SaveChangesAsync();
            IsBoolean = true;
        }
        else
        {
            IsBoolean = false;
        }
    }
}
